:root {
  transition: all 0.3s ease-out;
}

:root {
  --sld-radius-tiny: 2px;
  --sld-radius-small: 4px;
  --sld-radius-med: 8px;
  --sld-radius-large: 16px;
  --sld-pad-tiny: 0.25rem;
  --sld-pad-small: 0.5rem;
  --sld-pad-med: 1rem;
  --sld-pad-large: 1.5rem;
  --sld-gap-tiny: 0.25rem;
  --sld-gap-mini: 0.4rem;
  --sld-gap-small: 0.5rem;
  --sld-gap-med: 1rem;
  --sld-gap-large: 1.5rem;
  --sld-gap-default: 0.5rem;
  --sld-gutter-tiny: 0.25rem;
  --sld-gutter-mini: 0.5rem;
  --sld-gutter-small: 1rem;
  --sld-gutter-med: 2rem;
  --sld-gutter-kind: 3rem;
  --sld-gutter-default: 1rem;
  --sld-tall-tiny: 1rem;
  --sld-tall-mini: 1.5rem;
  --sld-tall-small: 2.5rem;
  --sld-tall-med: 3.5rem;
  --sld-tall-kind: 4rem;
  --sld-tall-auto: auto;
  --sld-tall-default: 2.5rem;
  --sld-width-tiny: 2rem;
  --sld-width-mini: 3rem;
  --sld-width-small: 10rem;
  --sld-width-med: 14rem;
  --sld-width-kind: 20rem;
  --sld-width-full: 100%;
  --sld-width-auto: auto;
  --sld-width-default: 10rem;
}

:root {
  --white: #fff;
  --black: #333;
}

@media (prefers-color-scheme: dark) {
  :root {
    --white: #333;
    --black: #ccc;
  }
}
:root.dark,
:root[data-theme=dark],
body[data-theme=dark],
:root[theme=dark] {
  --white: #333;
  --black: #ccc;
}

:root {
  --sld-color-foreground: #333333;
  --sld-color-background: #ffffff;
  --sld-color-paper: #f1f1f1;
  --sld-color-primary: #98b148;
  --sld-color-secondary: #55492b;
  --sld-color-tertiary: #9999cc;
  --sld-color-disabled: #ccc;
  --sld-color-disabled-border: #cccccc;
  --sld-background-disabled: #ededed;
}

:root.dark,
:root[data-theme=dark],
body[data-theme=dark],
:root[theme=dark] {
  --sld-color-foreground: #ffffff;
  --sld-color-background: #27323a;
  --sld-color-paper: #3a3b3b;
}

:root {
  --sld-elevation-1: 0 0 1.75px 0 rgba(0, 0, 0, 0.15), 0 0.15px 0.46px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-2: 0 0 3.44px 0 rgba(0, 0, 0, 0.15), 0 0.3px 0.93px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-3: 0 0 5.17px 0 rgba(0, 0, 0, 0.15), 0 0 1.39px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-4: 0 0 6.89px 0 rgba(0, 0, 0, 0.15), 0 0.61px 1.86px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-5: 0 0 8.62px 0 rgba(0, 0, 0, 0.15), 0 0.76px 2.32px 0 rgba(0, 0, 0, 0.1);
}

:root {
  --sld-color-discrete: #ccc;
  --sld-color-success: #075c07;
  --sld-color-info: #ffd324;
  --sld-color-warning: #b49104;
  --sld-color-alert: #cc5c00;
  --sld-color-error: #cc0000;
}

:root {
  /* alpha  foreground */
  --sld-color-foreground-alpha-low: color-mix(in srgb, var(--sld-color-foreground), transparent 10%);
  --sld-color-foreground-alpha-mid: color-mix(in srgb, var(--sld-color-foreground), transparent 60%);
  --sld-color-foreground-alpha-high: color-mix(in srgb, var(--sld-color-foreground), transparent 80%);
  /* alpha  background */
  --sld-color-background-alpha-low: color-mix(in srgb, var(--sld-color-background), transparent 10%);
  --sld-color-background-alpha-mid: color-mix(in srgb, var(--sld-color-background), transparent 60%);
  --sld-color-background-alpha-high: color-mix(in srgb, var(--sld-color-background), transparent 80%);
  /* alpha  primary */
  --sld-color-primary-alpha-low: color-mix(in srgb, var(--sld-color-primary), transparent 10%);
  --sld-color-primary-alpha-mid: color-mix(in srgb, var(--sld-color-primary), transparent 60%);
  --sld-color-primary-alpha-high: color-mix(in srgb, var(--sld-color-primary), transparent 80%);
  /* alpha  secondary */
  --sld-color-secondary-alpha-low: color-mix(in srgb, var(--sld-color-secondary), transparent 10%);
  --sld-color-secondary-alpha-mid: color-mix(in srgb, var(--sld-color-secondary), transparent 60%);
  --sld-color-secondary-alpha-high: color-mix(in srgb, var(--sld-color-secondary), transparent 80%);
  /* alpha  tertiary */
  --sld-color-tertiary-alpha-low: color-mix(in srgb, var(--sld-color-tertiary), transparent 10%);
  --sld-color-tertiary-alpha-mid: color-mix(in srgb, var(--sld-color-tertiary), transparent 60%);
  --sld-color-tertiary-alpha-high: color-mix(in srgb, var(--sld-color-tertiary), transparent 80%);
  /* darken  foreground */
  --sld-color-foreground-darken-low: color-mix(in srgb, var(--sld-color-foreground), black 10%);
  --sld-color-foreground-darken-mid: color-mix(in srgb, var(--sld-color-foreground), black 30%);
  --sld-color-foreground-darken-high: color-mix(in srgb, var(--sld-color-foreground), black 60%);
  /* darken  background */
  --sld-color-background-darken-low: color-mix(in srgb, var(--sld-color-background), black 10%);
  --sld-color-background-darken-mid: color-mix(in srgb, var(--sld-color-background), black 30%);
  --sld-color-background-darken-high: color-mix(in srgb, var(--sld-color-background), black 60%);
  /* darken  primary */
  --sld-color-primary-darken-low: color-mix(in srgb, var(--sld-color-primary), black 10%);
  --sld-color-primary-darken-mid: color-mix(in srgb, var(--sld-color-primary), black 30%);
  --sld-color-primary-darken-high: color-mix(in srgb, var(--sld-color-primary), black 60%);
  /* darken  secondary */
  --sld-color-secondary-darken-low: color-mix(in srgb, var(--sld-color-secondary), black 10%);
  --sld-color-secondary-darken-mid: color-mix(in srgb, var(--sld-color-secondary), black 30%);
  --sld-color-secondary-darken-high: color-mix(in srgb, var(--sld-color-secondary), black 60%);
  /* darken  tertiary */
  --sld-color-tertiary-darken-low: color-mix(in srgb, var(--sld-color-tertiary), black 10%);
  --sld-color-tertiary-darken-mid: color-mix(in srgb, var(--sld-color-tertiary), black 30%);
  --sld-color-tertiary-darken-high: color-mix(in srgb, var(--sld-color-tertiary), black 60%);
  /* lighten  foreground */
  --sld-color-foreground-lighten-low: color-mix(in srgb, var(--sld-color-foreground), white 10%);
  --sld-color-foreground-lighten-mid: color-mix(in srgb, var(--sld-color-foreground), white 30%);
  --sld-color-foreground-lighten-high: color-mix(in srgb, var(--sld-color-foreground), white 60%);
  /* lighten  background */
  --sld-color-background-lighten-low: color-mix(in srgb, var(--sld-color-background), white 10%);
  --sld-color-background-lighten-mid: color-mix(in srgb, var(--sld-color-background), white 30%);
  --sld-color-background-lighten-high: color-mix(in srgb, var(--sld-color-background), white 60%);
  /* lighten  primary */
  --sld-color-primary-lighten-low: color-mix(in srgb, var(--sld-color-primary), white 10%);
  --sld-color-primary-lighten-mid: color-mix(in srgb, var(--sld-color-primary), white 30%);
  --sld-color-primary-lighten-high: color-mix(in srgb, var(--sld-color-primary), white 60%);
  /* lighten  secondary */
  --sld-color-secondary-lighten-low: color-mix(in srgb, var(--sld-color-secondary), white 10%);
  --sld-color-secondary-lighten-mid: color-mix(in srgb, var(--sld-color-secondary), white 30%);
  --sld-color-secondary-lighten-high: color-mix(in srgb, var(--sld-color-secondary), white 60%);
  /* lighten  tertiary */
  --sld-color-tertiary-lighten-low: color-mix(in srgb, var(--sld-color-tertiary), white 10%);
  --sld-color-tertiary-lighten-mid: color-mix(in srgb, var(--sld-color-tertiary), white 30%);
  --sld-color-tertiary-lighten-high: color-mix(in srgb, var(--sld-color-tertiary), white 60%);
  /* alpha  discrete */
  --sld-color-discrete-alpha-low: color-mix(in srgb, var(--sld-color-discrete), transparent 10%);
  --sld-color-discrete-alpha-mid: color-mix(in srgb, var(--sld-color-discrete), transparent 30%);
  --sld-color-discrete-alpha-high: color-mix(in srgb, var(--sld-color-discrete), transparent 60%);
  /* alpha  success */
  --sld-color-success-alpha-low: color-mix(in srgb, var(--sld-color-success), transparent 10%);
  --sld-color-success-alpha-mid: color-mix(in srgb, var(--sld-color-success), transparent 30%);
  --sld-color-success-alpha-high: color-mix(in srgb, var(--sld-color-success), transparent 60%);
  /* alpha  info */
  --sld-color-info-alpha-low: color-mix(in srgb, var(--sld-color-info), transparent 10%);
  --sld-color-info-alpha-mid: color-mix(in srgb, var(--sld-color-info), transparent 30%);
  --sld-color-info-alpha-high: color-mix(in srgb, var(--sld-color-info), transparent 60%);
  /* alpha  warning */
  --sld-color-warning-alpha-low: color-mix(in srgb, var(--sld-color-warning), transparent 10%);
  --sld-color-warning-alpha-mid: color-mix(in srgb, var(--sld-color-warning), transparent 30%);
  --sld-color-warning-alpha-high: color-mix(in srgb, var(--sld-color-warning), transparent 60%);
  /* alpha  alert */
  --sld-color-alert-alpha-low: color-mix(in srgb, var(--sld-color-alert), transparent 10%);
  --sld-color-alert-alpha-mid: color-mix(in srgb, var(--sld-color-alert), transparent 30%);
  --sld-color-alert-alpha-high: color-mix(in srgb, var(--sld-color-alert), transparent 60%);
  /* alpha  error */
  --sld-color-error-alpha-low: color-mix(in srgb, var(--sld-color-error), transparent 10%);
  --sld-color-error-alpha-mid: color-mix(in srgb, var(--sld-color-error), transparent 30%);
  --sld-color-error-alpha-high: color-mix(in srgb, var(--sld-color-error), transparent 60%);
  /* darken  discrete */
  --sld-color-discrete-darken-low: color-mix(in srgb, var(--sld-color-discrete), black 10%);
  --sld-color-discrete-darken-mid: color-mix(in srgb, var(--sld-color-discrete), black 30%);
  --sld-color-discrete-darken-high: color-mix(in srgb, var(--sld-color-discrete), black 60%);
  /* darken  success */
  --sld-color-success-darken-low: color-mix(in srgb, var(--sld-color-success), black 10%);
  --sld-color-success-darken-mid: color-mix(in srgb, var(--sld-color-success), black 30%);
  --sld-color-success-darken-high: color-mix(in srgb, var(--sld-color-success), black 60%);
  /* darken  info */
  --sld-color-info-darken-low: color-mix(in srgb, var(--sld-color-info), black 10%);
  --sld-color-info-darken-mid: color-mix(in srgb, var(--sld-color-info), black 30%);
  --sld-color-info-darken-high: color-mix(in srgb, var(--sld-color-info), black 60%);
  /* darken  warning */
  --sld-color-warning-darken-low: color-mix(in srgb, var(--sld-color-warning), black 10%);
  --sld-color-warning-darken-mid: color-mix(in srgb, var(--sld-color-warning), black 30%);
  --sld-color-warning-darken-high: color-mix(in srgb, var(--sld-color-warning), black 60%);
  /* darken  alert */
  --sld-color-alert-darken-low: color-mix(in srgb, var(--sld-color-alert), black 10%);
  --sld-color-alert-darken-mid: color-mix(in srgb, var(--sld-color-alert), black 30%);
  --sld-color-alert-darken-high: color-mix(in srgb, var(--sld-color-alert), black 60%);
  /* darken  error */
  --sld-color-error-darken-low: color-mix(in srgb, var(--sld-color-error), black 10%);
  --sld-color-error-darken-mid: color-mix(in srgb, var(--sld-color-error), black 30%);
  --sld-color-error-darken-high: color-mix(in srgb, var(--sld-color-error), black 60%);
  /* lighten  discrete */
  --sld-color-discrete-lighten-low: color-mix(in srgb, var(--sld-color-discrete), white 10%);
  --sld-color-discrete-lighten-mid: color-mix(in srgb, var(--sld-color-discrete), white 30%);
  --sld-color-discrete-lighten-high: color-mix(in srgb, var(--sld-color-discrete), white 60%);
  /* lighten  success */
  --sld-color-success-lighten-low: color-mix(in srgb, var(--sld-color-success), white 10%);
  --sld-color-success-lighten-mid: color-mix(in srgb, var(--sld-color-success), white 30%);
  --sld-color-success-lighten-high: color-mix(in srgb, var(--sld-color-success), white 60%);
  /* lighten  info */
  --sld-color-info-lighten-low: color-mix(in srgb, var(--sld-color-info), white 10%);
  --sld-color-info-lighten-mid: color-mix(in srgb, var(--sld-color-info), white 30%);
  --sld-color-info-lighten-high: color-mix(in srgb, var(--sld-color-info), white 60%);
  /* lighten  warning */
  --sld-color-warning-lighten-low: color-mix(in srgb, var(--sld-color-warning), white 10%);
  --sld-color-warning-lighten-mid: color-mix(in srgb, var(--sld-color-warning), white 30%);
  --sld-color-warning-lighten-high: color-mix(in srgb, var(--sld-color-warning), white 60%);
  /* lighten  alert */
  --sld-color-alert-lighten-low: color-mix(in srgb, var(--sld-color-alert), white 10%);
  --sld-color-alert-lighten-mid: color-mix(in srgb, var(--sld-color-alert), white 30%);
  --sld-color-alert-lighten-high: color-mix(in srgb, var(--sld-color-alert), white 60%);
  /* lighten  error */
  --sld-color-error-lighten-low: color-mix(in srgb, var(--sld-color-error), white 10%);
  --sld-color-error-lighten-mid: color-mix(in srgb, var(--sld-color-error), white 30%);
  --sld-color-error-lighten-high: color-mix(in srgb, var(--sld-color-error), white 60%);
}

/* presets */
:root {
  --sld-color-border: var(--sld-color-foreground-alpha-low);
  --sld-hover-background-color: var(--sld-color-secondary-alpha-mid);
  --sld-hover-border-color: var(--sld-color-foreground-alpha-high);
  --sld-hover-shadow: var(--sld-elevation-3);
  --sld-selected-background-color: var(--sld-color-primary-alpha-mid);
  --sld-selected-border-color: var(--sld-color-primary);
  --sld-selected-shadow: var(--sld-elevation-3);
}

.bg-themed-scheme-discrete {
  color: black;
  text-shadow: 0 0 0.125rem #b3b3b3;
  background-color: #ccc;
}

.bg-themed-scheme-success {
  color: white;
  text-shadow: 0 0 0.125rem #004d00;
  background-color: green;
}

.bg-themed-scheme-info {
  color: black;
  text-shadow: 0 0 0.125rem #ffd324;
  background-color: #ffdd57;
}

.bg-themed-scheme-warning {
  color: black;
  text-shadow: 0 0 0.125rem #b49104;
  background-color: #e6b905;
}

.bg-themed-scheme-alert {
  color: black;
  text-shadow: 0 0 0.125rem #cc5c00;
  background-color: #ff7300;
}

.bg-themed-scheme-error {
  color: white;
  text-shadow: 0 0 0.125rem #cc0000;
  background-color: red;
}

:root {
  --menu-list-padding: var(--sld-pad-tiny);
  --menu-list-item-padding: 0;
  --menu-list-item-radius: var(--sld-radius-small);
  --menu-list-item-selected-background: var(--sld-selected-background-color);
  --menu-list-item-action-display: flex;
  --menu-list-item-action-justify-content: center;
  --menu-list-grid-items-count: 0;
}

:global(.menu-list) {
  margin: 0;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  align-items: end;
  padding: var(--menu-list-padding);
}
:global(.menu-list).grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(max(var(--grid-item-min-width), 100% / var(--grid-items-count)), 1fr));
}
:global(.menu-list) li.menu-list-title,
:global(.menu-list) a.menu-list-title {
  font-weight: bold;
}
:global(.menu-list) .menu-list-item,
:global(.menu-list) a.menu-list-item,
:global(.menu-list) li.menu-list-item {
  border: 1px solid red;
  --preset-width: var(--sld-width-small);
  width: var(--preset-width-small);
  --preset-tall: var(--sld-tall-small);
  height: var(--preset-tall-small);
  --preset-gutter: var(--sld-gutter-default);
  text-decoration: none;
  overflow: hidden;
  padding-left: calc(var(--preset-tall) / 4);
  border: 1px solid transparent;
  display: flex;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: 100%;
  border: 1px solid transparent;
  border-radius: var(--menu-list-item-radius);
  align-self: flex-start;
}
:global(.menu-list) .menu-list-item[variant*=square], :global(.menu-list) .menu-list-item[square=true], :global(.menu-list) .menu-list-item.square,
:global(.menu-list) a.menu-list-item[variant*=square],
:global(.menu-list) a.menu-list-item[square=true],
:global(.menu-list) a.menu-list-item.square,
:global(.menu-list) li.menu-list-item[variant*=square],
:global(.menu-list) li.menu-list-item[square=true],
:global(.menu-list) li.menu-list-item.square {
  aspect-ratio: 1/1 !important;
  height: auto;
}
:global(.menu-list) .menu-list-item[variant*=rounded], :global(.menu-list) .menu-list-item[rounded=true], :global(.menu-list) .menu-list-item.rounded,
:global(.menu-list) a.menu-list-item[variant*=rounded],
:global(.menu-list) a.menu-list-item[rounded=true],
:global(.menu-list) a.menu-list-item.rounded,
:global(.menu-list) li.menu-list-item[variant*=rounded],
:global(.menu-list) li.menu-list-item[rounded=true],
:global(.menu-list) li.menu-list-item.rounded {
  border-radius: 50%;
}
:global(.menu-list) .menu-list-item,
:global(.menu-list) a.menu-list-item,
:global(.menu-list) li.menu-list-item {
  --preset-width: var(--sld-width-small);
  width: var(--preset-width-small);
}
:global(.menu-list) .menu-list-item[width=tiny], :global(.menu-list) .menu-list-item.width-tiny,
:global(.menu-list) a.menu-list-item[width=tiny],
:global(.menu-list) a.menu-list-item.width-tiny,
:global(.menu-list) li.menu-list-item[width=tiny],
:global(.menu-list) li.menu-list-item.width-tiny {
  --preset-width: var(--sld-width-tiny);
  width: var(--sld-width-tiny) !important;
}
:global(.menu-list) .menu-list-item[width=mini], :global(.menu-list) .menu-list-item.width-mini,
:global(.menu-list) a.menu-list-item[width=mini],
:global(.menu-list) a.menu-list-item.width-mini,
:global(.menu-list) li.menu-list-item[width=mini],
:global(.menu-list) li.menu-list-item.width-mini {
  --preset-width: var(--sld-width-mini);
  width: var(--sld-width-mini) !important;
}
:global(.menu-list) .menu-list-item[width=small], :global(.menu-list) .menu-list-item.width-small,
:global(.menu-list) a.menu-list-item[width=small],
:global(.menu-list) a.menu-list-item.width-small,
:global(.menu-list) li.menu-list-item[width=small],
:global(.menu-list) li.menu-list-item.width-small {
  --preset-width: var(--sld-width-small);
  width: var(--sld-width-small) !important;
}
:global(.menu-list) .menu-list-item[width=med], :global(.menu-list) .menu-list-item.width-med,
:global(.menu-list) a.menu-list-item[width=med],
:global(.menu-list) a.menu-list-item.width-med,
:global(.menu-list) li.menu-list-item[width=med],
:global(.menu-list) li.menu-list-item.width-med {
  --preset-width: var(--sld-width-med);
  width: var(--sld-width-med) !important;
}
:global(.menu-list) .menu-list-item[width=kind], :global(.menu-list) .menu-list-item.width-kind,
:global(.menu-list) a.menu-list-item[width=kind],
:global(.menu-list) a.menu-list-item.width-kind,
:global(.menu-list) li.menu-list-item[width=kind],
:global(.menu-list) li.menu-list-item.width-kind {
  --preset-width: var(--sld-width-kind);
  width: var(--sld-width-kind) !important;
}
:global(.menu-list) .menu-list-item[width=full], :global(.menu-list) .menu-list-item.width-full,
:global(.menu-list) a.menu-list-item[width=full],
:global(.menu-list) a.menu-list-item.width-full,
:global(.menu-list) li.menu-list-item[width=full],
:global(.menu-list) li.menu-list-item.width-full {
  --preset-width: var(--sld-width-full);
  width: var(--sld-width-full) !important;
}
:global(.menu-list) .menu-list-item[width=auto], :global(.menu-list) .menu-list-item.width-auto,
:global(.menu-list) a.menu-list-item[width=auto],
:global(.menu-list) a.menu-list-item.width-auto,
:global(.menu-list) li.menu-list-item[width=auto],
:global(.menu-list) li.menu-list-item.width-auto {
  --preset-width: var(--sld-width-auto);
  width: var(--sld-width-auto) !important;
}
:global(.menu-list) .menu-list-item[width=default], :global(.menu-list) .menu-list-item.width-default,
:global(.menu-list) a.menu-list-item[width=default],
:global(.menu-list) a.menu-list-item.width-default,
:global(.menu-list) li.menu-list-item[width=default],
:global(.menu-list) li.menu-list-item.width-default {
  --preset-width: var(--sld-width-default);
  width: var(--sld-width-default) !important;
}
:global(.menu-list) .menu-list-item,
:global(.menu-list) a.menu-list-item,
:global(.menu-list) li.menu-list-item {
  --preset-tall: var(--sld-tall-small);
  height: var(--preset-tall-small);
}
:global(.menu-list) .menu-list-item[tall=tiny], :global(.menu-list) .menu-list-item.tall-tiny,
:global(.menu-list) a.menu-list-item[tall=tiny],
:global(.menu-list) a.menu-list-item.tall-tiny,
:global(.menu-list) li.menu-list-item[tall=tiny],
:global(.menu-list) li.menu-list-item.tall-tiny {
  height: var(--sld-tall-tiny) !important;
}
:global(.menu-list) .menu-list-item[tall=mini], :global(.menu-list) .menu-list-item.tall-mini,
:global(.menu-list) a.menu-list-item[tall=mini],
:global(.menu-list) a.menu-list-item.tall-mini,
:global(.menu-list) li.menu-list-item[tall=mini],
:global(.menu-list) li.menu-list-item.tall-mini {
  height: var(--sld-tall-mini) !important;
}
:global(.menu-list) .menu-list-item[tall=small], :global(.menu-list) .menu-list-item.tall-small,
:global(.menu-list) a.menu-list-item[tall=small],
:global(.menu-list) a.menu-list-item.tall-small,
:global(.menu-list) li.menu-list-item[tall=small],
:global(.menu-list) li.menu-list-item.tall-small {
  height: var(--sld-tall-small) !important;
}
:global(.menu-list) .menu-list-item[tall=med], :global(.menu-list) .menu-list-item.tall-med,
:global(.menu-list) a.menu-list-item[tall=med],
:global(.menu-list) a.menu-list-item.tall-med,
:global(.menu-list) li.menu-list-item[tall=med],
:global(.menu-list) li.menu-list-item.tall-med {
  height: var(--sld-tall-med) !important;
}
:global(.menu-list) .menu-list-item[tall=kind], :global(.menu-list) .menu-list-item.tall-kind,
:global(.menu-list) a.menu-list-item[tall=kind],
:global(.menu-list) a.menu-list-item.tall-kind,
:global(.menu-list) li.menu-list-item[tall=kind],
:global(.menu-list) li.menu-list-item.tall-kind {
  height: var(--sld-tall-kind) !important;
}
:global(.menu-list) .menu-list-item[tall=auto], :global(.menu-list) .menu-list-item.tall-auto,
:global(.menu-list) a.menu-list-item[tall=auto],
:global(.menu-list) a.menu-list-item.tall-auto,
:global(.menu-list) li.menu-list-item[tall=auto],
:global(.menu-list) li.menu-list-item.tall-auto {
  height: var(--sld-tall-auto) !important;
}
:global(.menu-list) .menu-list-item[tall=default], :global(.menu-list) .menu-list-item.tall-default,
:global(.menu-list) a.menu-list-item[tall=default],
:global(.menu-list) a.menu-list-item.tall-default,
:global(.menu-list) li.menu-list-item[tall=default],
:global(.menu-list) li.menu-list-item.tall-default {
  height: var(--sld-tall-default) !important;
}
:global(.menu-list) .menu-list-item :global([gutter="tiny"]), :global(.menu-list) .menu-list-item :global(.gutter-tiny),
:global(.menu-list) a.menu-list-item :global([gutter="tiny"]),
:global(.menu-list) a.menu-list-item :global(.gutter-tiny),
:global(.menu-list) li.menu-list-item :global([gutter="tiny"]),
:global(.menu-list) li.menu-list-item :global(.gutter-tiny) {
  padding: var(--sld-gutter-tiny);
  gap: var(--sld-gutter-tiny);
  --preset-gutter: var(--sld-gutter-tiny);
}
:global(.menu-list) .menu-list-item :global([gutter="mini"]), :global(.menu-list) .menu-list-item :global(.gutter-mini),
:global(.menu-list) a.menu-list-item :global([gutter="mini"]),
:global(.menu-list) a.menu-list-item :global(.gutter-mini),
:global(.menu-list) li.menu-list-item :global([gutter="mini"]),
:global(.menu-list) li.menu-list-item :global(.gutter-mini) {
  padding: var(--sld-gutter-mini);
  gap: var(--sld-gutter-mini);
  --preset-gutter: var(--sld-gutter-mini);
}
:global(.menu-list) .menu-list-item :global([gutter="small"]), :global(.menu-list) .menu-list-item :global(.gutter-small),
:global(.menu-list) a.menu-list-item :global([gutter="small"]),
:global(.menu-list) a.menu-list-item :global(.gutter-small),
:global(.menu-list) li.menu-list-item :global([gutter="small"]),
:global(.menu-list) li.menu-list-item :global(.gutter-small) {
  padding: var(--sld-gutter-small);
  gap: var(--sld-gutter-small);
  --preset-gutter: var(--sld-gutter-small);
}
:global(.menu-list) .menu-list-item :global([gutter="med"]), :global(.menu-list) .menu-list-item :global(.gutter-med),
:global(.menu-list) a.menu-list-item :global([gutter="med"]),
:global(.menu-list) a.menu-list-item :global(.gutter-med),
:global(.menu-list) li.menu-list-item :global([gutter="med"]),
:global(.menu-list) li.menu-list-item :global(.gutter-med) {
  padding: var(--sld-gutter-med);
  gap: var(--sld-gutter-med);
  --preset-gutter: var(--sld-gutter-med);
}
:global(.menu-list) .menu-list-item :global([gutter="kind"]), :global(.menu-list) .menu-list-item :global(.gutter-kind),
:global(.menu-list) a.menu-list-item :global([gutter="kind"]),
:global(.menu-list) a.menu-list-item :global(.gutter-kind),
:global(.menu-list) li.menu-list-item :global([gutter="kind"]),
:global(.menu-list) li.menu-list-item :global(.gutter-kind) {
  padding: var(--sld-gutter-kind);
  gap: var(--sld-gutter-kind);
  --preset-gutter: var(--sld-gutter-kind);
}
:global(.menu-list) .menu-list-item :global([gutter="default"]), :global(.menu-list) .menu-list-item :global(.gutter-default),
:global(.menu-list) a.menu-list-item :global([gutter="default"]),
:global(.menu-list) a.menu-list-item :global(.gutter-default),
:global(.menu-list) li.menu-list-item :global([gutter="default"]),
:global(.menu-list) li.menu-list-item :global(.gutter-default) {
  padding: var(--sld-gutter-default);
  gap: var(--sld-gutter-default);
  --preset-gutter: var(--sld-gutter-default);
}
:global(.menu-list) .menu-list-item:hover,
:global(.menu-list) a.menu-list-item:hover,
:global(.menu-list) li.menu-list-item:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
:global(.menu-list) .menu-list-item.selected, :global(.menu-list) .menu-list-item[aria-selected=true], :global(.menu-list) .menu-list-item[data-selected=true],
:global(.menu-list) a.menu-list-item.selected,
:global(.menu-list) a.menu-list-item[aria-selected=true],
:global(.menu-list) a.menu-list-item[data-selected=true],
:global(.menu-list) li.menu-list-item.selected,
:global(.menu-list) li.menu-list-item[aria-selected=true],
:global(.menu-list) li.menu-list-item[data-selected=true] {
  border-color: none;
  background-color: #ededed;
  box-shadow: var(--sld-selected-shadow);
}
:global(.menu-list) .menu-list-item.selected .listItemChip,
:global(.menu-list) .menu-list-item.selected .menuItemChip, :global(.menu-list) .menu-list-item[aria-selected=true] .listItemChip,
:global(.menu-list) .menu-list-item[aria-selected=true] .menuItemChip, :global(.menu-list) .menu-list-item[data-selected=true] .listItemChip,
:global(.menu-list) .menu-list-item[data-selected=true] .menuItemChip,
:global(.menu-list) a.menu-list-item.selected .listItemChip,
:global(.menu-list) a.menu-list-item.selected .menuItemChip,
:global(.menu-list) a.menu-list-item[aria-selected=true] .listItemChip,
:global(.menu-list) a.menu-list-item[aria-selected=true] .menuItemChip,
:global(.menu-list) a.menu-list-item[data-selected=true] .listItemChip,
:global(.menu-list) a.menu-list-item[data-selected=true] .menuItemChip,
:global(.menu-list) li.menu-list-item.selected .listItemChip,
:global(.menu-list) li.menu-list-item.selected .menuItemChip,
:global(.menu-list) li.menu-list-item[aria-selected=true] .listItemChip,
:global(.menu-list) li.menu-list-item[aria-selected=true] .menuItemChip,
:global(.menu-list) li.menu-list-item[data-selected=true] .listItemChip,
:global(.menu-list) li.menu-list-item[data-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
:global(.menu-list) .menu-list-item::before,
:global(.menu-list) a.menu-list-item::before,
:global(.menu-list) li.menu-list-item::before {
  position: absolute;
  min-height: 16px;
  height: 45%;
  width: 2px;
  overflow: hidden;
  max-width: 3px;
  background-color: transparent;
  border-radius: var(--sld-radius-med);
  left: 0px;
  border: 1px solid transparent;
  content: " ";
}
:global(.menu-list) .menu-list-item .menu-list-item-icon,
:global(.menu-list) a.menu-list-item .menu-list-item-icon,
:global(.menu-list) li.menu-list-item .menu-list-item-icon {
  width: 16px;
  max-width: 16px;
  text-align: center;
  overflow: hidden;
  text-align: center;
  display: flex;
  justify-content: center;
  padding: 0 0.2rem;
}
:global(.menu-list) .menu-list-item .menu-list-item-text,
:global(.menu-list) a.menu-list-item .menu-list-item-text,
:global(.menu-list) li.menu-list-item .menu-list-item-text {
  flex: 1;
}
:global(.menu-list) .menu-list-item .menu-list-item-text.wrap,
:global(.menu-list) a.menu-list-item .menu-list-item-text.wrap,
:global(.menu-list) li.menu-list-item .menu-list-item-text.wrap {
  text-wrap: ellipsis;
  white-space: normal;
  overflow: hidden;
}
:global(.menu-list) .menu-list-item .menu-list-item-action,
:global(.menu-list) a.menu-list-item .menu-list-item-action,
:global(.menu-list) li.menu-list-item .menu-list-item-action {
  display: var(--menu-list-item-action-display);
  justify-content: var(--menu-list-item-action-justify-content);
}

:global(ul.menuList.showLastOnSelected) :global(li.menu-list-item[data-selected="true"] .menu-list-item-action) {
  visibility: visible;
}
:global(ul.menuList.showLastOnSelected) :global(a.menu-list-item[data-selected="true"] .menu-list-item-action) {
  visibility: visible;
}
:global(ul.menuList.showLastOnSelected) :global(li.menu-list-item .menu-list-item-action) {
  visibility: hidden;
}
:global(ul.menuList.showLastOnSelected) :global(a.menu-list-item .menu-list-item-action) {
  visibility: hidden;
}