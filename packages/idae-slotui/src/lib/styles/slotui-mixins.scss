@use "slotui-presets.scss";

@mixin ui-variants {
    &[variant*="square"],
    &[square="true"],
    &.square {
        aspect-ratio: 1/1 !important;
        height: auto;
    }

    &[variant*="rounded"],
    &[rounded="true"],
    &.rounded {
        border-radius: 50%;
    }
}

@mixin ui-ellipsises-presets {
    & {
        --preset-ellipsis-line: #{slotui-presets.$presets-ellipsis-line-default};
    }

    &[ellipsis],
    &.ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    @for $i from 1 through 5 {
        &.ellipsis-line-#{$i} {
            display: -webkit-box;
            -webkit-line-clamp: #{$i};
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
            --preset-ellipsis-line: #{$i};
        }
    }
}

@mixin ui-transition {
    transition: all 0.25s ease;
}

@mixin ui-tall-presets {
    & {
        min-height: var(--preset-tall-small);
        height: var(--preset-tall-small);
    }
    & {
        --preset-tall: var(--sld-tall-small);
    }

    @each $preset, $value in slotui-presets.$preset-tall-list {
        &[tall="#{$preset}"],
        &.tall-#{$preset} {
            min-height: var(--sld-tall-#{$preset}) !important;
        }
    }
}

@mixin ui-width-presets {
    & {
        --preset-width: var(--sld-width-small);
    }
    & {
        width: var(--sld-width-small);
    }

    @each $preset, $value in slotui-presets.$preset-width-list {
        &[width="#{$preset}"],
        &.width-#{$preset} {
            --preset-width: var(--sld-width-#{$preset});
            width: var(--sld-width-#{$preset}) !important;
        }
    }
}

@mixin ui-gutter-presets {
    & {
        --preset-gutter: var(--sld-gutter-default);
    }

    @each $preset, $value in slotui-presets.$preset-gutter-list {
        & :global([gutter="#{$preset}"]),
        & :global(.gutter-#{$preset}) {
            padding: var(--sld-gutter-#{$preset});
            gap: var(--sld-gutter-#{$preset});
            --preset-gutter: var(--sld-gutter-#{$preset});
        }
    }
}

@mixin ui-pad-presets {
    & {
        --preset-pad: var(--sld-pad-default);
    }

    @each $preset, $value in slotui-presets.$preset-pad-list {
        &:global([pad="#{$preset}"]),
        &:global(.pad-#{$preset}) {
            padding: var(--sld-pad-#{$preset});
            --preset-pad: var(--sld-pad-#{$preset});
        }
    }
}

@mixin ui-radius-presets {
    & {
        --preset-radius: var(--sld-radius-default);
    }

    @each $preset, $value in slotui-presets.$preset-radius-list {
        &:global([radius="#{$preset}"]),
        &:global(.radius-#{$preset}) {
            border-radius: var(--sld-radius-#{$preset});
            --preset-radius: var(--sld-radius-#{$preset});
        }
    }
}

@mixin elevation() {
    @each $level in 0 through 5 {
        &.elevation-#{$level},
        &[elevation-#{$level}] {
            box-shadow: var(--sld-elevation-#{$level});
        }
    }
}

@mixin data-hover {
    &:hover {
        border-color: var(--sld-hover-border-color);
        background-color: var(--sld-background-disabled);
    }
}

@mixin data-selected {
    &.selected,
    &[aria-selected="true"],
    &[data-selected="true"] {
        border-color: none; //var(--sld-selected-border-color);
        background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
        box-shadow: var(--sld-selected-shadow);
        .listItemChip,
        .menuItemChip {
            position: absolute;
            min-height: 16px;
            height: 50%;
            width: 3px;
            background-color: var(--sld-color-primary);
            border-radius: var(--sld-radius-med);
            left: 0;
            border: 1px solid var(--sld-color-primary-alpha-mid);
        }
    }
}

@mixin flex($direction: row, $align-items: flex-start) {
    display: flex;
    flex-direction: $direction;
    align-items: $align-items;
}

@mixin flex-main {
    flex: 1 1 0;
}
