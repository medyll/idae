
/** slotui-presets.scss ----------------*/


/** slotui-mixins.scss ----------------*/


/** csss.scss ----------------*/
:global *[variant*=square] {
  aspect-ratio: 1/1 !important;
  height: auto;
}
:global *[variant*=rounded] {
  border-radius: 50%;
}
:global * {
  border: 1px solid red;
}

/** stylesheet.scss ----------------*/
:root {
  --container-item: container-item;
  --on-container: on-container;
  --than: than;
  --show-selector: show;
  --hide-selector: hide;
}

:root {
  --bkp-xs: var(--breakpoint-xs, 320px);
  --bkp-sm: var(--breakpoint-sm, 480px);
  --bkp-md: var(--breakpoint-md, 640px);
  --bkp-lg: var(--breakpoint-lg, 960px);
  --bkp-xl: var(--breakpoint-xl, 1280px);
  --bkp-xxl: var(--breakpoint-xxl, 1920px);
  --bkp-xxxl: var(--breakpoint-xxxl, 1440px);
}

@media (min-width: var(--bkp-xs)) {
  [hide-more-xs],
  [breakpoints*=hide-more-xs],
  .hide-more-xs {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xs)) {
  [show-more-xs],
  [breakpoints*=show-more-xs],
  .show-more-xs {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xs) - 1px)) {
  [hide-less-xs],
  [breakpoints*=hide-less-xs],
  .hide-less-xs {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xs) - 1px)) {
  [show-less-xs],
  [breakpoints*=show-less-xs],
  .show-less-xs {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-sm)) {
  [hide-more-sm],
  [breakpoints*=hide-more-sm],
  .hide-more-sm {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-sm)) {
  [show-more-sm],
  [breakpoints*=show-more-sm],
  .show-more-sm {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-sm) - 1px)) {
  [hide-less-sm],
  [breakpoints*=hide-less-sm],
  .hide-less-sm {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-sm) - 1px)) {
  [show-less-sm],
  [breakpoints*=show-less-sm],
  .show-less-sm {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-md)) {
  [hide-more-md],
  [breakpoints*=hide-more-md],
  .hide-more-md {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-md)) {
  [show-more-md],
  [breakpoints*=show-more-md],
  .show-more-md {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-md) - 1px)) {
  [hide-less-md],
  [breakpoints*=hide-less-md],
  .hide-less-md {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-md) - 1px)) {
  [show-less-md],
  [breakpoints*=show-less-md],
  .show-less-md {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-lg)) {
  [hide-more-lg],
  [breakpoints*=hide-more-lg],
  .hide-more-lg {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-lg)) {
  [show-more-lg],
  [breakpoints*=show-more-lg],
  .show-more-lg {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-lg) - 1px)) {
  [hide-less-lg],
  [breakpoints*=hide-less-lg],
  .hide-less-lg {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-lg) - 1px)) {
  [show-less-lg],
  [breakpoints*=show-less-lg],
  .show-less-lg {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xl)) {
  [hide-more-xl],
  [breakpoints*=hide-more-xl],
  .hide-more-xl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xl)) {
  [show-more-xl],
  [breakpoints*=show-more-xl],
  .show-more-xl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xl) - 1px)) {
  [hide-less-xl],
  [breakpoints*=hide-less-xl],
  .hide-less-xl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xl) - 1px)) {
  [show-less-xl],
  [breakpoints*=show-less-xl],
  .show-less-xl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xxl)) {
  [hide-more-xxl],
  [breakpoints*=hide-more-xxl],
  .hide-more-xxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xxl)) {
  [show-more-xxl],
  [breakpoints*=show-more-xxl],
  .show-more-xxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xxl) - 1px)) {
  [hide-less-xxl],
  [breakpoints*=hide-less-xxl],
  .hide-less-xxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xxl) - 1px)) {
  [show-less-xxl],
  [breakpoints*=show-less-xxl],
  .show-less-xxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xxxl)) {
  [hide-more-xxxl],
  [breakpoints*=hide-more-xxxl],
  .hide-more-xxxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xxxl)) {
  [show-more-xxxl],
  [breakpoints*=show-more-xxxl],
  .show-more-xxxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xxxl) - 1px)) {
  [hide-less-xxxl],
  [breakpoints*=hide-less-xxxl],
  .hide-less-xxxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xxxl) - 1px)) {
  [show-less-xxxl],
  [breakpoints*=show-less-xxxl],
  .show-less-xxxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
:global([container-inline]),
:global([container="inline"]),
:global(.container-inline) {
  container-type: inline-size;
}

:global([container-size]),
:global([container="size"]),
:global(.container-size) {
  container-type: size;
}

:global([container-normal]),
:global([container="normal"]),
:global(.container-normal) {
  container-type: normal;
}

@container (max-width: var(--hide-on-container-width-more-than)) {
  :global(.container-item-hide-max-width) {
    color: red;
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (max-width: var(--hide-on-container-width-more-than)) {
  .container-item-hide-min-width {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (min-height: var(--hide-on-container-height-less-than)) {
  .container-item-hide-max-height {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (max-width: var(--hide-on-container-height-more-than)) {
  .container-item-hide-min-height {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}

/** containerConfig.scss ----------------*/
:root {
  --container-item: container-item;
  --on-container: on-container;
  --than: than;
  --show-selector: show;
  --hide-selector: hide;
}

/** toolbar.scss ----------------*/
:root {
  --toolbar-padding: var(--sld-toolbar-padding, var(--box-density-1, var(--sld-pad-tiny)));
  --toolbar-gap: var(--sld-pad-tiny);
  --toolbar-divider-border: 1px solid red;
  --toolbar-divider-height: 1rem;
  --toolbar-vertical-divider-border: 1px solid green;
  --toolbar-vertical-divider-width: 1rem;
}

.toolbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: var(--toolbar-padding);
  gap: var(--toolbar-gap);
}
.toolbar divider {
  border: var(--toolbar-divider-border);
  height: var(--toolbar-divider-height);
}

.toolbar.vertical {
  flex-direction: column;
}
.toolbar.vertical divider {
  border: var(--toolbar-vertical-divider-border);
  width: var(--toolbar-vertical-divider-width);
}

/** window.scss ----------------*/
:root {
  --window-border-radius: var(--sld-radius-small);
  --window-background-color: var(--sld-color-background);
  --window-color: var(--sld-color-foreground);
  --window-border: 1px solid rgba(255, 255, 255, 0.1);
  --window-min-width: 250px;
  --window-z-index: 70000;
  --window-box-shadow: var(--sld-elevation-1);
  --window-active-border: 1px solid var(--sld-color-primary);
  --window-active-box-shadow: var(--sld-elevation-3);
  --window-header-bar-background-color: var(--sld-color-paper);
  --window-header-bar-padding: var(--sld-pad-tiny) 0;
  --window-header-bar-icon-padding: unset var(--sld-pad-med);
  --window-footer-button-zone-padding: var(--sld-pad-tiny);
  --window-footer-button-zone-gap: var(--sld-gap-small);
}

dialog.window {
  display: block;
  border-radius: var(--window-border-radius);
  background-color: var(--window-background-color);
  color: var(--window-color);
  border: var(--window-border);
  min-width: var(--window-min-width);
  top: 0;
  left: 0;
  overflow: hidden;
  z-index: var(--window-z-index);
  max-height: 100%;
  padding: 0;
  box-shadow: var(--window-box-shadow);
}
dialog.window.active {
  border: var(--window-active-border);
  box-shadow: var(--window-active-box-shadow);
}
dialog.window header.bar {
  display: flex;
  align-items: center;
  text-align: center;
  background-color: var(--window-header-bar-background-color);
  color: var(--window-color);
  padding: var(--window-header-bar-padding);
}
dialog.window header.bar-icon {
  padding: var(--window-header-bar-icon-padding);
}
dialog.window header.bar .handle {
  flex: 1;
  cursor: pointer;
}
dialog.window footer.buttonZone {
  padding: var(--window-footer-button-zone-padding);
  display: flex;
  justify-content: end;
  gap: var(--window-footer-button-zone-gap);
}
dialog.window .ctrlZone {
  display: flex;
}

/** tree.scss ----------------*/
:root {
  --tree-cell-border: 1px solid transparent;
  --tree-cell-padding: var(--sld-pad-tiny);
  --tree-cell-border-radius: var(--sld-radius-small);
  --tree-cell-gap: var(--sld-gap-tiny);
  --tree-cell-arrow-width: 16px;
  --tree-cell-title-gutter-gap: var(--sld-pad-tiny);
}

.tree-cell {
  border: var(--tree-cell-border);
  padding: var(--tree-cell-padding);
  padding-left: var(--tree-level);
  border-radius: var(--tree-cell-border-radius);
  gap: var(--tree-cell-gap);
  display: flex;
  align-items: center;
  width: 100%;
  cursor: pointer;
}
.tree-cell-arrow {
  width: var(--tree-cell-arrow-width);
  text-align: center;
}
.tree-cell-title-gutter {
  display: flex;
  align-items: center;
  gap: var(--tree-cell-title-gutter-gap);
}
.tree-cell:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
.tree-cell.selected, .tree-cell[aria-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
.tree-cell.selected .chip,
.tree-cell.selected .menuItemChip, .tree-cell[aria-selected=true] .chip,
.tree-cell[aria-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}

/** toggle-bar.scss ----------------*/
:root {
  --toggle-bar-padding: var(--sld-commandbar-padding, var(--box-density-1));
  --toggle-bar-border-bottom: var(--sld-topbar-border-bottom-color, var(--sld-color-border));
  --toggle-bar-gap: var(--sld-commandbar-gap, var(--sld-pad-tiny));
  --toggle-bar-icon-padding: var(--sld-pad-medium);
  --toggle-bar-title-font-weight: 500;
  --toggle-bar-title-content-font-size: 18px;
}

.toggle-bar {
  padding: var(--toggle-bar-padding);
  display: flex;
  border-bottom: var(--toggle-bar-border-bottom);
  width: 100%;
  max-width: 100%;
  min-width: auto;
  position: relative;
  gap: var(--toggle-bar-gap);
}
.toggle-bar-icon {
  padding: var(--toggle-bar-icon-padding);
}
.toggle-bar-title {
  flex: 1;
  font-weight: var(--toggle-bar-title-font-weight);
  min-width: auto;
}
.toggle-bar-title-content {
  display: flex;
  align-items: center;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: var(--toggle-bar-title-content-font-size);
  min-width: auto;
  height: 100%;
}
.toggle-bar-content {
  position: relative;
  min-width: auto;
  overflow: hidden;
}

/** taskbar.scss ----------------*/
:root {
  --taskbar-grid-gap: var(--sld-gap-tiny);
  --taskbar-background-color: rgba(255, 255, 255, 0.5);
  --taskbar-backdrop-filter: blur(20px);
  --taskbar-min-height: 48px;
  --taskbar-border-bottom: rgba(255, 255, 255, 0.2);
  --taskbar-box-shadow: var(--sld-elevation-3);
}

.taskbar {
  display: flex;
  align-items: center;
  grid-gap: var(--taskbar-grid-gap);
  background-size: auto;
  background-color: var(--taskbar-background-color);
  --moz-backdrop-filter: var(--taskbar-backdrop-filter);
  backdrop-filter: var(--taskbar-backdrop-filter);
  min-height: var(--taskbar-min-height);
  border-bottom: 1px solid var(--taskbar-border-bottom);
  box-shadow: var(--taskbar-box-shadow);
  box-sizing: border-box;
}
.taskbar-main {
  flex: 1;
}

/** boot-menu.scss ----------------*/
:root {
  --boot-menu-background-color: rgba(90, 67, 52, 0.9);
  --boot-menu-backdrop-filter: blur(10px);
  --boot-menu-color: white;
  --boot-menu-max-height: 600px;
  --boot-menu-height: 80%;
  --boot-menu-box-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.5);
  --boot-menu-z-index: 3000;
  --boot-menu-margin-top: 1rem;
  --boot-menu-button-pole-border-radius: var(--sld-radius-small);
  --boot-menu-button-pole-border: 1px solid rgba(208, 191, 151, 0.3);
  --boot-menu-button-pole-padding: var(--sld-pad-tiny);
  --boot-menu-grid-icon-gap: 10px;
  --boot-menu-grid-icon-template-columns: repeat(auto-fill, minmax(30%, auto));
  --boot-menu-grid-icon-bis-template-columns: repeat(auto-fill, minmax(15%, auto));
  --boot-menu-grid-icon-mid-template-columns: repeat(auto-fill, minmax(49%, auto));
  --boot-menu-grid-one-template-columns: repeat(auto-fill, minmax(100%, auto));
  --boot-menu-bottom-bar-box-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.5);
  --boot-menu-bottom-bar-padding: var(--sld-pad-small) var(--sld-pad-medium);
}

.boot-menu {
  background-color: var(--boot-menu-background-color);
  backdrop-filter: var(--boot-menu-backdrop-filter);
  color: var(--boot-menu-color);
  display: flex;
  flex-direction: column;
  max-height: var(--boot-menu-max-height);
  height: var(--boot-menu-height);
  left: 50%;
  transform: translate(-50%, 0);
  box-shadow: var(--boot-menu-box-shadow);
  overflow: hidden;
  z-index: var(--boot-menu-z-index);
  position: absolute;
  margin-top: var(--boot-menu-margin-top);
}
.boot-menu .boot-menuContent {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
}
.boot-menu .buttonPole {
  border-radius: var(--boot-menu-button-pole-border-radius);
  border: var(--boot-menu-button-pole-border);
  padding: var(--boot-menu-button-pole-padding);
}
.boot-menu .gridIcon {
  width: 100%;
  display: grid;
  grid-gap: var(--boot-menu-grid-icon-gap);
  grid-template-columns: var(--boot-menu-grid-icon-template-columns);
}
.boot-menu .gridIconBis {
  width: 100%;
  display: grid;
  grid-gap: var(--boot-menu-grid-icon-gap);
  grid-template-columns: var(--boot-menu-grid-icon-bis-template-columns);
}
.boot-menu .gridIconMid {
  width: 100%;
  display: grid;
  grid-gap: var(--boot-menu-grid-icon-gap);
  grid-template-columns: var(--boot-menu-grid-icon-mid-template-columns);
}
.boot-menu .gridOne {
  width: 100%;
  display: grid;
  grid-gap: var(--boot-menu-grid-icon-gap);
  grid-template-columns: var(--boot-menu-grid-one-template-columns);
}
.boot-menu .bottomBar {
  box-shadow: var(--boot-menu-bottom-bar-box-shadow);
  display: flex;
  align-items: end;
  padding: var(--boot-menu-bottom-bar-padding);
}

/** popper.scss ----------------*/
:root {
  --popper-border-radius: var(--sld-radius-tiny);
  --popper-box-shadow: var(--sld-elevation-4);
  --popper-background-color: var(--sld-color-background-alpha-mid);
  --popper-backdrop-filter: blur(30px);
  --popper-z-index: 30000;
  --popper-open-border: 1px color red;
}

:global(dialog.popper) {
  all: unset;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: none;
  background: none;
  color: inherit;
  font: inherit;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  border-radius: var(--popper-border-radius);
  overflow: hidden;
  position: fixed;
  inset: 0;
  box-shadow: var(--popper-box-shadow);
  background-color: var(--popper-background-color);
  -webkit-backdrop-filter: var(--popper-backdrop-filter);
  backdrop-filter: var(--popper-backdrop-filter);
  z-index: var(--popper-z-index);
  opacity: 0;
  visibility: hidden;
  align-items: center;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  outline: none;
  width: moz-fit-content;
  width: fit-content;
  height: moz-fit-content;
  height: fit-content;
  /* top: 15rem;
  left: 40rem; */
  z-index: 30000;
}
:global(dialog.popper):focus-visible {
  outline: 2px solid var(--focus-color);
  outline-offset: 2px;
}
:global(dialog.popper)[open], :global(dialog.popper):popover-open {
  opacity: 1;
  visibility: visible;
  animation: popoverEnter 0.3s ease-out;
}
:global(dialog.popper) .popper-left,
:global(dialog.popper) .popper-right {
  height: 100%;
  max-height: 100%;
  overflow: hidden;
}
:global(dialog.popper)::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
  width: moz-fit-content;
  width: fit-content;
}

@keyframes popoverEnter {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
/* @media (prefers-color-scheme: dark) {
    :global(dialog.popper) {
        --popper-background-color: #2a2a2a;
        --popper-box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        --focus-color: #6ab5ff;
    }
} */
:global(dialog.popper) {
  padding-block: 0;
  padding-inline: 0;
}

/** menu-list.scss ----------------*/
:root {
  --menulist-padding: var(--sld-pad-tiny);
  --menulist-item-padding: 0;
  --menulist-item-radius: var(--sld-radius-small);
  --menulist-item-selected-background: var(--sld-selected-background-color);
  --menulist-item-action-display: flex;
  --menulist-item-action-justify-content: center;
  --menulist-grid-items-count: 0;
}

:global(.slotui-menulist) {
  margin: 0;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  align-items: end;
  padding: var(--menulist-padding);
}
:global(.slotui-menulist).grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(max(var(--grid-item-min-width), 100% / var(--grid-items-count)), 1fr));
}
:global(.slotui-menulist) li.menulist-title,
:global(.slotui-menulist) a.menulist-title {
  font-weight: bold;
}
:global(.slotui-menulist) :global(.menulist-item) {
  text-decoration: none;
  overflow: hidden;
  display: flex;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: 100%;
  border: 1px solid transparent;
  border-radius: var(--menulist-item-radius);
  align-self: flex-start;
}
:global(.slotui-menulist) :global(.menulist-item)[variant*=square] {
  aspect-ratio: 1/1 !important;
  height: auto;
}
:global(.slotui-menulist) :global(.menulist-item)[variant*=rounded] {
  border-radius: 50%;
}
:global(.slotui-menulist) :global(.menulist-item) {
  width: var(--sld-width-small);
}
:global(.slotui-menulist) :global(.menulist-item) {
  --preset-width: var(--sld-width-small);
}
:global(.slotui-menulist) :global(.menulist-item)[width=tiny], :global(.slotui-menulist) :global(.menulist-item).width-tiny {
  --preset-width: var(--sld-width-tiny);
  width: var(--sld-width-tiny) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=mini], :global(.slotui-menulist) :global(.menulist-item).width-mini {
  --preset-width: var(--sld-width-mini);
  width: var(--sld-width-mini) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=small], :global(.slotui-menulist) :global(.menulist-item).width-small {
  --preset-width: var(--sld-width-small);
  width: var(--sld-width-small) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=med], :global(.slotui-menulist) :global(.menulist-item).width-med {
  --preset-width: var(--sld-width-med);
  width: var(--sld-width-med) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=kind], :global(.slotui-menulist) :global(.menulist-item).width-kind {
  --preset-width: var(--sld-width-kind);
  width: var(--sld-width-kind) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=full], :global(.slotui-menulist) :global(.menulist-item).width-full {
  --preset-width: var(--sld-width-full);
  width: var(--sld-width-full) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=auto], :global(.slotui-menulist) :global(.menulist-item).width-auto {
  --preset-width: var(--sld-width-auto);
  width: var(--sld-width-auto) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[width=default], :global(.slotui-menulist) :global(.menulist-item).width-default {
  --preset-width: var(--sld-width-default);
  width: var(--sld-width-default) !important;
}
:global(.slotui-menulist) :global(.menulist-item) {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
:global(.slotui-menulist) :global(.menulist-item) {
  --preset-tall: var(--sld-tall-small);
}
:global(.slotui-menulist) :global(.menulist-item)[tall=tiny], :global(.slotui-menulist) :global(.menulist-item).tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=mini], :global(.slotui-menulist) :global(.menulist-item).tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=small], :global(.slotui-menulist) :global(.menulist-item).tall-small {
  min-height: var(--sld-tall-small) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=med], :global(.slotui-menulist) :global(.menulist-item).tall-med {
  min-height: var(--sld-tall-med) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=kind], :global(.slotui-menulist) :global(.menulist-item).tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=auto], :global(.slotui-menulist) :global(.menulist-item).tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
:global(.slotui-menulist) :global(.menulist-item)[tall=default], :global(.slotui-menulist) :global(.menulist-item).tall-default {
  min-height: var(--sld-tall-default) !important;
}
:global(.slotui-menulist) :global(.menulist-item) {
  --preset-gutter: var(--sld-gutter-default);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=tiny], :global(.slotui-menulist) :global(.menulist-item) .gutter-tiny {
  padding: var(--sld-gutter-tiny);
  gap: var(--sld-gutter-tiny);
  --preset-gutter: var(--sld-gutter-tiny);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=mini], :global(.slotui-menulist) :global(.menulist-item) .gutter-mini {
  padding: var(--sld-gutter-mini);
  gap: var(--sld-gutter-mini);
  --preset-gutter: var(--sld-gutter-mini);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=small], :global(.slotui-menulist) :global(.menulist-item) .gutter-small {
  padding: var(--sld-gutter-small);
  gap: var(--sld-gutter-small);
  --preset-gutter: var(--sld-gutter-small);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=med], :global(.slotui-menulist) :global(.menulist-item) .gutter-med {
  padding: var(--sld-gutter-med);
  gap: var(--sld-gutter-med);
  --preset-gutter: var(--sld-gutter-med);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=kind], :global(.slotui-menulist) :global(.menulist-item) .gutter-kind {
  padding: var(--sld-gutter-kind);
  gap: var(--sld-gutter-kind);
  --preset-gutter: var(--sld-gutter-kind);
}
:global(.slotui-menulist) :global(.menulist-item) [gutter=default], :global(.slotui-menulist) :global(.menulist-item) .gutter-default {
  padding: var(--sld-gutter-default);
  gap: var(--sld-gutter-default);
  --preset-gutter: var(--sld-gutter-default);
}
:global(.slotui-menulist) :global(.menulist-item):hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
:global(.slotui-menulist) :global(.menulist-item).selected, :global(.slotui-menulist) :global(.menulist-item)[aria-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
:global(.slotui-menulist) :global(.menulist-item).selected .chip,
:global(.slotui-menulist) :global(.menulist-item).selected .menuItemChip, :global(.slotui-menulist) :global(.menulist-item)[aria-selected=true] .chip,
:global(.slotui-menulist) :global(.menulist-item)[aria-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
:global(.slotui-menulist) :global(.menulist-item)::before {
  position: absolute;
  min-height: 16px;
  height: 45%;
  width: 2px;
  overflow: hidden;
  max-width: 3px;
  background-color: transparent;
  border-radius: var(--sld-radius-med);
  left: 0px;
  border: 1px solid transparent;
  content: " ";
}
:global(.slotui-menulist) :global(.menulist-item) .menulist-item-icon {
  width: 16px;
  max-width: 16px;
  text-align: center;
  overflow: hidden;
  text-align: center;
  display: flex;
  justify-content: center;
  padding: 0 0.2rem;
}
:global(.slotui-menulist) :global(.menulist-item) .menulist-item-text {
  flex: 1;
}
:global(.slotui-menulist) :global(.menulist-item) .menulist-item-text.wrap {
  text-wrap: ellipsis;
  white-space: normal;
  overflow: hidden;
}
:global(.slotui-menulist) :global(.menulist-item) .menulist-item-action {
  display: var(--menulist-item-action-display);
  justify-content: var(--menulist-item-action-justify-content);
}

:global(ul.menuList.showLastOnSelected) :global(li.menulist-item[aria-selected="true"] .menulist-item-action) {
  visibility: visible;
}
:global(ul.menuList.showLastOnSelected) :global(a.menulist-item[aria-selected="true"] .menulist-item-action) {
  visibility: visible;
}
:global(ul.menuList.showLastOnSelected) :global(li.menulist-item .menulist-item-action) {
  visibility: hidden;
}
:global(ul.menuList.showLastOnSelected) :global(a.menulist-item .menulist-item-action) {
  visibility: hidden;
}

/** menu.scss ----------------*/
:root {
  --menu-min-width: 150px;
  --menu-padding: 0.25rem;
  --menu-color: var(--sld-color-foreground);
  --menu-item-border-radius: var(--sld-radius-small);
  --menu-item-icon-width: 16px;
  --menu-item-text-padding-left: 0.25rem;
}

ul.menu {
  margin: 0;
  min-width: var(--menu-min-width);
  padding: var(--menu-padding);
  cursor: pointer;
  display: block;
  color: var(--menu-color);
}
ul.menu li.menuTitle {
  position: sticky;
  margin-top: 0px !important;
  top: 0px;
  z-index: 1;
}

li.menuItem:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
li.menuItem.selected, li.menuItem[aria-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
li.menuItem.selected .chip,
li.menuItem.selected .menuItemChip, li.menuItem[aria-selected=true] .chip,
li.menuItem[aria-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
li.menuItem {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
li.menuItem {
  --preset-tall: var(--sld-tall-small);
}
li.menuItem[tall=tiny], li.menuItem.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
li.menuItem[tall=mini], li.menuItem.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
li.menuItem[tall=small], li.menuItem.tall-small {
  min-height: var(--sld-tall-small) !important;
}
li.menuItem[tall=med], li.menuItem.tall-med {
  min-height: var(--sld-tall-med) !important;
}
li.menuItem[tall=kind], li.menuItem.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
li.menuItem[tall=auto], li.menuItem.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
li.menuItem[tall=default], li.menuItem.tall-default {
  min-height: var(--sld-tall-default) !important;
}
li.menuItem {
  border-radius: var(--menu-item-border-radius);
  overflow: hidden;
  display: flex;
  align-items: center;
  border: 1px solid transparent;
}
li.menuItem .menuListItemIcon {
  width: var(--menu-item-icon-width);
  max-width: var(--menu-item-icon-width);
  text-align: center;
  overflow: hidden;
  text-align: center;
  display: flex;
  justify-content: center;
}
li.menuItem .menu-list-item-text {
  flex: 1;
  padding-left: var(--menu-item-text-padding-left);
}
li.menuItem .menu-list-item-action {
  display: block;
}

/** panel.scss ----------------*/
:root {
  --panel-margin-bottom: 2rem;
  --panel-bar-margin-bottom: 2rem;
  --panel-bar-padding-right: var(--sld-pad-tiny);
  --panel-bar-button-padding: 0 var(--sld-pad-tiny);
  --panel-bar-button-border: 1px solid rgba(255, 255, 255, 0.05);
  --panel-bar-button-background-color: rgba(255, 255, 255, 0.1);
}

.panel {
  position: relative;
  margin-bottom: var(--panel-margin-bottom);
}
.panel .panel-bar {
  margin-bottom: var(--panel-bar-margin-bottom);
  display: flex;
  min-width: auto;
  align-items: center;
  padding-right: var(--panel-bar-padding-right);
}
.panel .panel-bar button {
  padding: var(--panel-bar-button-padding);
  border: var(--panel-bar-button-border);
  background-color: var(--panel-bar-button-background-color);
}

/** frame.scss ----------------*/
:root {
  --frame-background-color: var(--sld-color-paper);
  --frame-backdrop-filter: blur(30px);
  --frame-container-border-right: var(--sld-color-primary);
}

.frame {
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: "column";
  align-items: flex-start;
  overflow: hidden;
  position: relative;
  background-color: var(--frame-background-color);
  --moz-backdrop-filter: var(--frame-backdrop-filter);
  backdrop-filter: var(--frame-backdrop-filter);
  overflow: hidden;
}
.frame-container {
  display: flex;
  flex-direction: "row";
  align-items: flex-start;
  flex: 1 1 0;
  position: relative;
  overflow: hidden;
}
.frame-container-nav {
  display: flex;
  flex-direction: "column";
  align-items: flex-start;
  flex: 1 1 0;
  z-index: 1;
  border-right: 1px solid var(--frame-container-border-right);
  position: relative;
}
.frame-container-main {
  flex: 1;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: "column";
  align-items: flex-start;
}
.frame-container-main-content {
  flex: 1 1 0;
  overflow: hidden;
  position: relative;
}

/** marquee.scss ----------------*/
.marquee {
  flex: 1;
  overflow-x: hidden;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
  width: 300px;
}
.marquee-container {
  display: flex;
  align-items: center;
}
.marquee-container {
  --preset-gutter: var(--sld-gutter-default);
}
.marquee-container [gutter=tiny], .marquee-container .gutter-tiny {
  padding: var(--sld-gutter-tiny);
  gap: var(--sld-gutter-tiny);
  --preset-gutter: var(--sld-gutter-tiny);
}
.marquee-container [gutter=mini], .marquee-container .gutter-mini {
  padding: var(--sld-gutter-mini);
  gap: var(--sld-gutter-mini);
  --preset-gutter: var(--sld-gutter-mini);
}
.marquee-container [gutter=small], .marquee-container .gutter-small {
  padding: var(--sld-gutter-small);
  gap: var(--sld-gutter-small);
  --preset-gutter: var(--sld-gutter-small);
}
.marquee-container [gutter=med], .marquee-container .gutter-med {
  padding: var(--sld-gutter-med);
  gap: var(--sld-gutter-med);
  --preset-gutter: var(--sld-gutter-med);
}
.marquee-container [gutter=kind], .marquee-container .gutter-kind {
  padding: var(--sld-gutter-kind);
  gap: var(--sld-gutter-kind);
  --preset-gutter: var(--sld-gutter-kind);
}
.marquee-container [gutter=default], .marquee-container .gutter-default {
  padding: var(--sld-gutter-default);
  gap: var(--sld-gutter-default);
  --preset-gutter: var(--sld-gutter-default);
}
.marquee-children {
  display: flex;
  border: 1px solid red;
}
.marquee-children > * {
  border: 1px solid red;
  height: 300px;
}
.marquee-controls-prev {
  display: contents;
}
.marquee-controls-next {
  display: contents;
}

/** chrome-frame.scss ----------------*/
:root {
  --chrome-frame-color: var(--sld-color-foreground);
  --chrome-frame-background-color: var(--sld-color-background);
  --chrome-frame-bar-gap: var(--sld-gap-med);
  --chrome-frame-bar-padding: var(--sld-pad-medium);
  --chrome-frame-bar-border-bottom: var(--sld-color-border);
  --chrome-frame-content-flex: 1;
}

.chrome-frame {
  display: flex;
  flex-direction: "column";
  align-items: flex-start;
  position: absolute;
  top: 0;
  height: 100%;
  width: 100%;
  color: var(--chrome-frame-color);
  background-color: var(--chrome-frame-background-color);
  overflow: hidden;
}
.chrome-frame-bar {
  display: flex;
  flex-direction: "row";
  align-items: center;
  gap: var(--chrome-frame-bar-gap);
  padding: var(--chrome-frame-bar-padding);
  border-bottom: 1px solid var(--chrome-frame-bar-border-bottom);
}
.chrome-frame-content {
  flex: var(--chrome-frame-content-flex);
  overflow: hidden;
  position: relative;
}

/** stylesheet.scss ----------------*/
:root {
  --container-item: container-item;
  --on-container: on-container;
  --than: than;
  --show-selector: show;
  --hide-selector: hide;
}

:root {
  --bkp-xs: 320px;
  --bkp-sm: 480px;
  --bkp-md: 640px;
  --bkp-lg: 960px;
  --bkp-xl: 1280px;
  --bkp-xxl: 1920px;
  --bkp-xxxl: 1440px;
}

@media (min-width: 320px) {
  [hide-more-xs],
  [breakpoints*=hide-more-xs],
  .hide-more-xs {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 320px) {
  [hide-less-xs],
  [breakpoints*=hide-less-xs],
  .hide-less-xs {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 320px) {
  [show-more-xs],
  [breakpoints*=show-more-xs],
  .show-more-xs {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 319px) {
  [show-less-xs],
  [breakpoints*=show-less-xs],
  .show-less-xs {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 480px) {
  [hide-more-sm],
  [breakpoints*=hide-more-sm],
  .hide-more-sm {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 480px) {
  [hide-less-sm],
  [breakpoints*=hide-less-sm],
  .hide-less-sm {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 480px) {
  [show-more-sm],
  [breakpoints*=show-more-sm],
  .show-more-sm {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 479px) {
  [show-less-sm],
  [breakpoints*=show-less-sm],
  .show-less-sm {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 640px) {
  [hide-more-md],
  [breakpoints*=hide-more-md],
  .hide-more-md {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 640px) {
  [hide-less-md],
  [breakpoints*=hide-less-md],
  .hide-less-md {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 640px) {
  [show-more-md],
  [breakpoints*=show-more-md],
  .show-more-md {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 639px) {
  [show-less-md],
  [breakpoints*=show-less-md],
  .show-less-md {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 960px) {
  [hide-more-lg],
  [breakpoints*=hide-more-lg],
  .hide-more-lg {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 960px) {
  [hide-less-lg],
  [breakpoints*=hide-less-lg],
  .hide-less-lg {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 960px) {
  [show-more-lg],
  [breakpoints*=show-more-lg],
  .show-more-lg {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 959px) {
  [show-less-lg],
  [breakpoints*=show-less-lg],
  .show-less-lg {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 1280px) {
  [hide-more-xl],
  [breakpoints*=hide-more-xl],
  .hide-more-xl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 1280px) {
  [hide-less-xl],
  [breakpoints*=hide-less-xl],
  .hide-less-xl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 1280px) {
  [show-more-xl],
  [breakpoints*=show-more-xl],
  .show-more-xl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 1279px) {
  [show-less-xl],
  [breakpoints*=show-less-xl],
  .show-less-xl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 1920px) {
  [hide-more-xxl],
  [breakpoints*=hide-more-xxl],
  .hide-more-xxl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 1920px) {
  [hide-less-xxl],
  [breakpoints*=hide-less-xxl],
  .hide-less-xxl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 1920px) {
  [show-more-xxl],
  [breakpoints*=show-more-xxl],
  .show-more-xxl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 1919px) {
  [show-less-xxl],
  [breakpoints*=show-less-xxl],
  .show-less-xxl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (min-width: 1440px) {
  [hide-more-xxxl],
  [breakpoints*=hide-more-xxxl],
  .hide-more-xxxl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (max-width: 1440px) {
  [hide-less-xxxl],
  [breakpoints*=hide-less-xxxl],
  .hide-less-xxxl {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@media (min-width: 1440px) {
  [show-more-xxxl],
  [breakpoints*=show-more-xxxl],
  .show-more-xxxl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
@media (max-width: 1439px) {
  [show-less-xxxl],
  [breakpoints*=show-less-xxxl],
  .show-less-xxxl {
    z-index: auto;
    visibility: visible;
    transition: all 1s ease-in;
  }
}
[container-inline],
[container=inline],
.container-inline {
  container-type: inline-size;
}

[container-size],
[container=size],
.container-size {
  container-type: size;
}

[container-normal],
[container=normal],
.container-normal {
  container-type: normal;
}

@container (max-width: var(--hide-on-container-width-more-than)) {
  .container-item-hide-max-width {
    color: red;
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@container (max-width: var(--hide-on-container-width-more-than)) {
  .container-item-hide-min-width {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@container (min-height: var(--hide-on-container-height-less-than)) {
  .container-item-hide-max-height {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}
@container (max-width: var(--hide-on-container-height-more-than)) {
  .container-item-hide-min-height {
    display: none;
    opacity: 0;
    position: absolute;
    z-index: -10;
    content-visibility: hidden;
    transition: all 0.5s ease-in;
  }
}

/** stylesheet-container.scss ----------------*/
@import "./sheetConfig.css";
:root {
  --bkp-xs: var(--breakpoint-xs, 320px);
  --bkp-sm: var(--breakpoint-sm, 480px);
  --bkp-md: var(--breakpoint-md, 640px);
  --bkp-lg: var(--breakpoint-lg, 960px);
  --bkp-xl: var(--breakpoint-xl, 1280px);
  --bkp-xxl: var(--breakpoint-xxl, 1920px);
  --bkp-xxxl: var(--breakpoint-xxxl, 1440px);
}

@media (min-width: var(--bkp-xs)) {
  [hide-more-xs],
  [breakpoints*=hide-more-xs],
  .hide-more-xs {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xs)) {
  [show-more-xs],
  [breakpoints*=show-more-xs],
  .show-more-xs {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xs) - 1px)) {
  [hide-less-xs],
  [breakpoints*=hide-less-xs],
  .hide-less-xs {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xs) - 1px)) {
  [show-less-xs],
  [breakpoints*=show-less-xs],
  .show-less-xs {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-sm)) {
  [hide-more-sm],
  [breakpoints*=hide-more-sm],
  .hide-more-sm {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-sm)) {
  [show-more-sm],
  [breakpoints*=show-more-sm],
  .show-more-sm {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-sm) - 1px)) {
  [hide-less-sm],
  [breakpoints*=hide-less-sm],
  .hide-less-sm {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-sm) - 1px)) {
  [show-less-sm],
  [breakpoints*=show-less-sm],
  .show-less-sm {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-md)) {
  [hide-more-md],
  [breakpoints*=hide-more-md],
  .hide-more-md {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-md)) {
  [show-more-md],
  [breakpoints*=show-more-md],
  .show-more-md {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-md) - 1px)) {
  [hide-less-md],
  [breakpoints*=hide-less-md],
  .hide-less-md {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-md) - 1px)) {
  [show-less-md],
  [breakpoints*=show-less-md],
  .show-less-md {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-lg)) {
  [hide-more-lg],
  [breakpoints*=hide-more-lg],
  .hide-more-lg {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-lg)) {
  [show-more-lg],
  [breakpoints*=show-more-lg],
  .show-more-lg {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-lg) - 1px)) {
  [hide-less-lg],
  [breakpoints*=hide-less-lg],
  .hide-less-lg {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-lg) - 1px)) {
  [show-less-lg],
  [breakpoints*=show-less-lg],
  .show-less-lg {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xl)) {
  [hide-more-xl],
  [breakpoints*=hide-more-xl],
  .hide-more-xl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xl)) {
  [show-more-xl],
  [breakpoints*=show-more-xl],
  .show-more-xl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xl) - 1px)) {
  [hide-less-xl],
  [breakpoints*=hide-less-xl],
  .hide-less-xl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xl) - 1px)) {
  [show-less-xl],
  [breakpoints*=show-less-xl],
  .show-less-xl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xxl)) {
  [hide-more-xxl],
  [breakpoints*=hide-more-xxl],
  .hide-more-xxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xxl)) {
  [show-more-xxl],
  [breakpoints*=show-more-xxl],
  .show-more-xxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xxl) - 1px)) {
  [hide-less-xxl],
  [breakpoints*=hide-less-xxl],
  .hide-less-xxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xxl) - 1px)) {
  [show-less-xxl],
  [breakpoints*=show-less-xxl],
  .show-less-xxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (min-width: var(--bkp-xxxl)) {
  [hide-more-xxxl],
  [breakpoints*=hide-more-xxxl],
  .hide-more-xxxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (min-width: var(--bkp-xxxl)) {
  [show-more-xxxl],
  [breakpoints*=show-more-xxxl],
  .show-more-xxxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
@media (max-width: calc(var(--bkp-xxxl) - 1px)) {
  [hide-less-xxxl],
  [breakpoints*=hide-less-xxxl],
  .hide-less-xxxl {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@media (max-width: calc(var(--bkp-xxxl) - 1px)) {
  [show-less-xxxl],
  [breakpoints*=show-less-xxxl],
  .show-less-xxxl {
    content-visibility: auto;
    opacity: 1;
    position: static;
    z-index: auto;
    visibility: visible;
  }
}
:global([container-inline]),
:global([container="inline"]),
:global(.container-inline) {
  container-type: inline-size;
}

:global([container-size]),
:global([container="size"]),
:global(.container-size) {
  container-type: size;
}

:global([container-normal]),
:global([container="normal"]),
:global(.container-normal) {
  container-type: normal;
}

@container (max-width: var(--hide-on-container-width-more-than)) {
  :global(.container-item-hide-max-width) {
    color: red;
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (max-width: var(--hide-on-container-width-more-than)) {
  .container-item-hide-min-width {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (min-height: var(--hide-on-container-height-less-than)) {
  .container-item-hide-max-height {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}
@container (max-width: var(--hide-on-container-height-more-than)) {
  .container-item-hide-min-height {
    content-visibility: hidden;
    opacity: 0;
    position: absolute;
    z-index: -10;
    visibility: hidden;
  }
}

/** slotui-sheet.scss ----------------*/
:root {
  transition: all 0.3s ease-out;
}

:root {
  --sld-radius-tiny: 2px;
  --sld-radius-small: 4px;
  --sld-radius-med: 8px;
  --sld-radius-large: 16px;
  --sld-pad-tiny: 0.25rem;
  --sld-pad-small: 0.5rem;
  --sld-pad-med: 1rem;
  --sld-pad-large: 1.5rem;
  --sld-gap-tiny: 0.25rem;
  --sld-gap-mini: 0.4rem;
  --sld-gap-small: 0.5rem;
  --sld-gap-med: 1rem;
  --sld-gap-large: 1.5rem;
  --sld-gap-default: 0.5rem;
  --sld-gutter-tiny: 0.25rem;
  --sld-gutter-mini: 0.5rem;
  --sld-gutter-small: 1rem;
  --sld-gutter-med: 2rem;
  --sld-gutter-kind: 3rem;
  --sld-gutter-default: 1rem;
  --sld-tall-tiny: 1rem;
  --sld-tall-mini: 1.5rem;
  --sld-tall-small: 2.5rem;
  --sld-tall-med: 3.5rem;
  --sld-tall-kind: 4rem;
  --sld-tall-auto: auto;
  --sld-tall-default: 2.5rem;
  --sld-width-tiny: 2rem;
  --sld-width-mini: 3rem;
  --sld-width-small: 10rem;
  --sld-width-med: 14rem;
  --sld-width-kind: 20rem;
  --sld-width-full: 100%;
  --sld-width-auto: auto;
  --sld-width-default: 10rem;
}

:root {
  --white: #fff;
  --black: #333;
}

@media (prefers-color-scheme: dark) {
  :root {
    --white: #333;
    --black: #ccc;
  }
}
:root.dark,
:root[data-theme=dark],
body[data-theme=dark],
:root[theme=dark] {
  --white: #333;
  --black: #ccc;
}

:root {
  --sld-color-foreground: #333333;
  --sld-color-background: #ffffff;
  --sld-color-paper: color-mix(
      in srgb,
      var(--sld-color-background) 90%,
      var(--sld-color-foreground) 10%
  );
  --sld-color-primary: color-mix(in srgb, var(--sld-color-foreground) 60%, #4caf50);
  --sld-color-secondary: color-mix(in srgb, var(--sld-color-foreground) 80%, #2196f3);
  --sld-color-tertiary: color-mix(in srgb, var(--sld-color-foreground) 70%, #ffc107);
  --sld-color-disabled: color-mix(
      in srgb,
      var(--sld-color-foreground) 20%,
      var(--sld-color-background)
  );
  --sld-color-disabled-border: color-mix(
      in srgb,
      var(--sld-color-foreground) 30%,
      var(--sld-color-background)
  );
  --sld-background-disabled: color-mix(
      in srgb,
      var(--sld-color-background) 90%,
      var(--sld-color-foreground)
  );
}

:root.dark,
:root[data-theme=dark],
body[data-theme=dark],
:root[theme=dark] {
  --sld-color-foreground: #ffffff;
  --sld-color-background: #27323a;
}

:root {
  --sld-elevation-1: 0 0 1.75px 0 rgba(0, 0, 0, 0.15), 0 0.15px 0.46px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-2: 0 0 3.44px 0 rgba(0, 0, 0, 0.15), 0 0.3px 0.93px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-3: 0 0 5.17px 0 rgba(0, 0, 0, 0.15), 0 0 1.39px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-4: 0 0 6.89px 0 rgba(0, 0, 0, 0.15), 0 0.61px 1.86px 0 rgba(0, 0, 0, 0.1);
  --sld-elevation-5: 0 0 8.62px 0 rgba(0, 0, 0, 0.15), 0 0.76px 2.32px 0 rgba(0, 0, 0, 0.1);
}

:root {
  --sld-color-discrete: #ccc;
  --sld-color-success: #075c07;
  --sld-color-info: #ffd324;
  --sld-color-warning: #b49104;
  --sld-color-alert: #cc5c00;
  --sld-color-error: #cc0000;
}

:root {
  /* alpha  foreground */
  --sld-color-foreground-alpha-low: color-mix(in srgb, var(--sld-color-foreground), transparent 10%);
  --sld-color-foreground-alpha-mid: color-mix(in srgb, var(--sld-color-foreground), transparent 60%);
  --sld-color-foreground-alpha-high: color-mix(in srgb, var(--sld-color-foreground), transparent 80%);
  /* alpha  background */
  --sld-color-background-alpha-low: color-mix(in srgb, var(--sld-color-background), transparent 10%);
  --sld-color-background-alpha-mid: color-mix(in srgb, var(--sld-color-background), transparent 60%);
  --sld-color-background-alpha-high: color-mix(in srgb, var(--sld-color-background), transparent 80%);
  /* alpha  primary */
  --sld-color-primary-alpha-low: color-mix(in srgb, var(--sld-color-primary), transparent 10%);
  --sld-color-primary-alpha-mid: color-mix(in srgb, var(--sld-color-primary), transparent 60%);
  --sld-color-primary-alpha-high: color-mix(in srgb, var(--sld-color-primary), transparent 80%);
  /* alpha  secondary */
  --sld-color-secondary-alpha-low: color-mix(in srgb, var(--sld-color-secondary), transparent 10%);
  --sld-color-secondary-alpha-mid: color-mix(in srgb, var(--sld-color-secondary), transparent 60%);
  --sld-color-secondary-alpha-high: color-mix(in srgb, var(--sld-color-secondary), transparent 80%);
  /* alpha  tertiary */
  --sld-color-tertiary-alpha-low: color-mix(in srgb, var(--sld-color-tertiary), transparent 10%);
  --sld-color-tertiary-alpha-mid: color-mix(in srgb, var(--sld-color-tertiary), transparent 60%);
  --sld-color-tertiary-alpha-high: color-mix(in srgb, var(--sld-color-tertiary), transparent 80%);
  /* darken  foreground */
  --sld-color-foreground-darken-low: color-mix(in srgb, var(--sld-color-foreground), black 10%);
  --sld-color-foreground-darken-mid: color-mix(in srgb, var(--sld-color-foreground), black 30%);
  --sld-color-foreground-darken-high: color-mix(in srgb, var(--sld-color-foreground), black 60%);
  /* darken  background */
  --sld-color-background-darken-low: color-mix(in srgb, var(--sld-color-background), black 10%);
  --sld-color-background-darken-mid: color-mix(in srgb, var(--sld-color-background), black 30%);
  --sld-color-background-darken-high: color-mix(in srgb, var(--sld-color-background), black 60%);
  /* darken  primary */
  --sld-color-primary-darken-low: color-mix(in srgb, var(--sld-color-primary), black 10%);
  --sld-color-primary-darken-mid: color-mix(in srgb, var(--sld-color-primary), black 30%);
  --sld-color-primary-darken-high: color-mix(in srgb, var(--sld-color-primary), black 60%);
  /* darken  secondary */
  --sld-color-secondary-darken-low: color-mix(in srgb, var(--sld-color-secondary), black 10%);
  --sld-color-secondary-darken-mid: color-mix(in srgb, var(--sld-color-secondary), black 30%);
  --sld-color-secondary-darken-high: color-mix(in srgb, var(--sld-color-secondary), black 60%);
  /* darken  tertiary */
  --sld-color-tertiary-darken-low: color-mix(in srgb, var(--sld-color-tertiary), black 10%);
  --sld-color-tertiary-darken-mid: color-mix(in srgb, var(--sld-color-tertiary), black 30%);
  --sld-color-tertiary-darken-high: color-mix(in srgb, var(--sld-color-tertiary), black 60%);
  /* lighten  foreground */
  --sld-color-foreground-lighten-low: color-mix(in srgb, var(--sld-color-foreground), white 10%);
  --sld-color-foreground-lighten-mid: color-mix(in srgb, var(--sld-color-foreground), white 30%);
  --sld-color-foreground-lighten-high: color-mix(in srgb, var(--sld-color-foreground), white 60%);
  /* lighten  background */
  --sld-color-background-lighten-low: color-mix(in srgb, var(--sld-color-background), white 10%);
  --sld-color-background-lighten-mid: color-mix(in srgb, var(--sld-color-background), white 30%);
  --sld-color-background-lighten-high: color-mix(in srgb, var(--sld-color-background), white 60%);
  /* lighten  primary */
  --sld-color-primary-lighten-low: color-mix(in srgb, var(--sld-color-primary), white 10%);
  --sld-color-primary-lighten-mid: color-mix(in srgb, var(--sld-color-primary), white 30%);
  --sld-color-primary-lighten-high: color-mix(in srgb, var(--sld-color-primary), white 60%);
  /* lighten  secondary */
  --sld-color-secondary-lighten-low: color-mix(in srgb, var(--sld-color-secondary), white 10%);
  --sld-color-secondary-lighten-mid: color-mix(in srgb, var(--sld-color-secondary), white 30%);
  --sld-color-secondary-lighten-high: color-mix(in srgb, var(--sld-color-secondary), white 60%);
  /* lighten  tertiary */
  --sld-color-tertiary-lighten-low: color-mix(in srgb, var(--sld-color-tertiary), white 10%);
  --sld-color-tertiary-lighten-mid: color-mix(in srgb, var(--sld-color-tertiary), white 30%);
  --sld-color-tertiary-lighten-high: color-mix(in srgb, var(--sld-color-tertiary), white 60%);
  /* alpha  discrete */
  --sld-color-discrete-alpha-low: color-mix(in srgb, var(--sld-color-discrete), transparent 10%);
  --sld-color-discrete-alpha-mid: color-mix(in srgb, var(--sld-color-discrete), transparent 30%);
  --sld-color-discrete-alpha-high: color-mix(in srgb, var(--sld-color-discrete), transparent 60%);
  /* alpha  success */
  --sld-color-success-alpha-low: color-mix(in srgb, var(--sld-color-success), transparent 10%);
  --sld-color-success-alpha-mid: color-mix(in srgb, var(--sld-color-success), transparent 30%);
  --sld-color-success-alpha-high: color-mix(in srgb, var(--sld-color-success), transparent 60%);
  /* alpha  info */
  --sld-color-info-alpha-low: color-mix(in srgb, var(--sld-color-info), transparent 10%);
  --sld-color-info-alpha-mid: color-mix(in srgb, var(--sld-color-info), transparent 30%);
  --sld-color-info-alpha-high: color-mix(in srgb, var(--sld-color-info), transparent 60%);
  /* alpha  warning */
  --sld-color-warning-alpha-low: color-mix(in srgb, var(--sld-color-warning), transparent 10%);
  --sld-color-warning-alpha-mid: color-mix(in srgb, var(--sld-color-warning), transparent 30%);
  --sld-color-warning-alpha-high: color-mix(in srgb, var(--sld-color-warning), transparent 60%);
  /* alpha  alert */
  --sld-color-alert-alpha-low: color-mix(in srgb, var(--sld-color-alert), transparent 10%);
  --sld-color-alert-alpha-mid: color-mix(in srgb, var(--sld-color-alert), transparent 30%);
  --sld-color-alert-alpha-high: color-mix(in srgb, var(--sld-color-alert), transparent 60%);
  /* alpha  error */
  --sld-color-error-alpha-low: color-mix(in srgb, var(--sld-color-error), transparent 10%);
  --sld-color-error-alpha-mid: color-mix(in srgb, var(--sld-color-error), transparent 30%);
  --sld-color-error-alpha-high: color-mix(in srgb, var(--sld-color-error), transparent 60%);
  /* darken  discrete */
  --sld-color-discrete-darken-low: color-mix(in srgb, var(--sld-color-discrete), black 10%);
  --sld-color-discrete-darken-mid: color-mix(in srgb, var(--sld-color-discrete), black 30%);
  --sld-color-discrete-darken-high: color-mix(in srgb, var(--sld-color-discrete), black 60%);
  /* darken  success */
  --sld-color-success-darken-low: color-mix(in srgb, var(--sld-color-success), black 10%);
  --sld-color-success-darken-mid: color-mix(in srgb, var(--sld-color-success), black 30%);
  --sld-color-success-darken-high: color-mix(in srgb, var(--sld-color-success), black 60%);
  /* darken  info */
  --sld-color-info-darken-low: color-mix(in srgb, var(--sld-color-info), black 10%);
  --sld-color-info-darken-mid: color-mix(in srgb, var(--sld-color-info), black 30%);
  --sld-color-info-darken-high: color-mix(in srgb, var(--sld-color-info), black 60%);
  /* darken  warning */
  --sld-color-warning-darken-low: color-mix(in srgb, var(--sld-color-warning), black 10%);
  --sld-color-warning-darken-mid: color-mix(in srgb, var(--sld-color-warning), black 30%);
  --sld-color-warning-darken-high: color-mix(in srgb, var(--sld-color-warning), black 60%);
  /* darken  alert */
  --sld-color-alert-darken-low: color-mix(in srgb, var(--sld-color-alert), black 10%);
  --sld-color-alert-darken-mid: color-mix(in srgb, var(--sld-color-alert), black 30%);
  --sld-color-alert-darken-high: color-mix(in srgb, var(--sld-color-alert), black 60%);
  /* darken  error */
  --sld-color-error-darken-low: color-mix(in srgb, var(--sld-color-error), black 10%);
  --sld-color-error-darken-mid: color-mix(in srgb, var(--sld-color-error), black 30%);
  --sld-color-error-darken-high: color-mix(in srgb, var(--sld-color-error), black 60%);
  /* lighten  discrete */
  --sld-color-discrete-lighten-low: color-mix(in srgb, var(--sld-color-discrete), white 10%);
  --sld-color-discrete-lighten-mid: color-mix(in srgb, var(--sld-color-discrete), white 30%);
  --sld-color-discrete-lighten-high: color-mix(in srgb, var(--sld-color-discrete), white 60%);
  /* lighten  success */
  --sld-color-success-lighten-low: color-mix(in srgb, var(--sld-color-success), white 10%);
  --sld-color-success-lighten-mid: color-mix(in srgb, var(--sld-color-success), white 30%);
  --sld-color-success-lighten-high: color-mix(in srgb, var(--sld-color-success), white 60%);
  /* lighten  info */
  --sld-color-info-lighten-low: color-mix(in srgb, var(--sld-color-info), white 10%);
  --sld-color-info-lighten-mid: color-mix(in srgb, var(--sld-color-info), white 30%);
  --sld-color-info-lighten-high: color-mix(in srgb, var(--sld-color-info), white 60%);
  /* lighten  warning */
  --sld-color-warning-lighten-low: color-mix(in srgb, var(--sld-color-warning), white 10%);
  --sld-color-warning-lighten-mid: color-mix(in srgb, var(--sld-color-warning), white 30%);
  --sld-color-warning-lighten-high: color-mix(in srgb, var(--sld-color-warning), white 60%);
  /* lighten  alert */
  --sld-color-alert-lighten-low: color-mix(in srgb, var(--sld-color-alert), white 10%);
  --sld-color-alert-lighten-mid: color-mix(in srgb, var(--sld-color-alert), white 30%);
  --sld-color-alert-lighten-high: color-mix(in srgb, var(--sld-color-alert), white 60%);
  /* lighten  error */
  --sld-color-error-lighten-low: color-mix(in srgb, var(--sld-color-error), white 10%);
  --sld-color-error-lighten-mid: color-mix(in srgb, var(--sld-color-error), white 30%);
  --sld-color-error-lighten-high: color-mix(in srgb, var(--sld-color-error), white 60%);
}

/* presets */
:root {
  --sld-color-border: var(--sld-color-foreground-alpha-low);
  --sld-hover-background-color: var(--sld-color-secondary-alpha-mid);
  --sld-hover-border-color: var(--sld-color-foreground-alpha-high);
  --sld-hover-shadow: var(--sld-elevation-3);
  --sld-selected-background-color: var(--sld-color-primary-alpha-mid);
  --sld-selected-border-color: var(--sld-color-primary);
  --sld-selected-shadow: var(--sld-elevation-3);
}

.bg-themed-scheme-discrete {
  color: black;
  text-shadow: 0 0 0.125rem #b3b3b3;
  background-color: #ccc;
}

.bg-themed-scheme-success {
  color: white;
  text-shadow: 0 0 0.125rem #004d00;
  background-color: green;
}

.bg-themed-scheme-info {
  color: black;
  text-shadow: 0 0 0.125rem #ffd324;
  background-color: #ffdd57;
}

.bg-themed-scheme-warning {
  color: black;
  text-shadow: 0 0 0.125rem #b49104;
  background-color: #e6b905;
}

.bg-themed-scheme-alert {
  color: black;
  text-shadow: 0 0 0.125rem #cc5c00;
  background-color: #ff7300;
}

.bg-themed-scheme-error {
  color: white;
  text-shadow: 0 0 0.125rem #cc0000;
  background-color: red;
}

/** sheetConfig.scss ----------------*/
:root {
  --container-item: container-item;
  --on-container: on-container;
  --than: than;
  --show-selector: show;
  --hide-selector: hide;
}

/** tabs.scss ----------------*/
:root {
  --tabs-nav-border-color: var(--sld-color-primary-alpha-high);
  --tabs-content-background-color: var(--sld-color-background);
  --tabs-content-secondary-padding: var(--box-density-preset-small);
  --tabs-content-secondary-gap: var(--sld-gap-small);
  --tabs-content-secondary-icon-border-right: var(--sld-color-border);
  --tabs-content-secondary-icon-border-radius: var(--sld-radius-tiny);
  --tabs-content-secondary-icon-box-shadow: var(--sld-elevation-3);
  --tabs-content-secondary-icon-padding: var(--sld-padding-small);
  --tabs-floating-cell-slot-border-radius: var(--sld-radius-small);
  --tabs-floating-cell-slot-background-color: var(--sld-color-primary);
}

.tab {
  position: relative;
  display: flex;
}
.tab[aria-orientation=horizontal] ul {
  flex-direction: column;
}
.tab[aria-orientation=vertical] {
  flex-direction: column;
}
.tab-nav {
  padding: 0.25rem 0;
  gap: var(--sld-gap-med);
  border-bottom: 1px solid var(--tabs-nav-border-color);
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}
.tab-nav[aria-orientation=horizontal] {
  flex-direction: column;
}
.tab-nav-rail {
  display: flex;
  flex: 1;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
}
.tab-nav-rail > button {
  padding: var(--box-density-preset-small);
  min-width: 48px;
  cursor: pointer;
  background: none;
  border: none;
}
.tab-nav-rail > button.active, .tab-nav-rail > button[aria-selected=true] {
  font-weight: bold;
}
.tab-content {
  flex: 1;
  background-color: var(--tabs-content-background-color);
  position: relative;
  width: 100%;
}
.tab-content-secondary {
  display: flex;
  padding: var(--tabs-content-secondary-padding) unset;
  gap: var(--tabs-content-secondary-gap);
}
.tab-content-secondary-icon {
  border-right: 1px solid var(--tabs-content-secondary-icon-border-right);
  border-radius: var(--tabs-content-secondary-icon-border-radius);
  box-shadow: var(--tabs-content-secondary-icon-box-shadow);
  padding: var(--tabs-content-secondary-icon-padding);
}
.tab-floating-cell {
  top: auto;
  position: relative;
  min-height: 4px;
  height: 4px;
  transition: all 0.15;
}
.tab-floating-cell-snip {
  border-radius: var(--tabs-floating-cell-slot-border-radius);
  min-height: 4px;
  background-color: var(--tabs-floating-cell-slot-background-color);
  width: 100%;
  position: absolute;
  transition: all 0.25s ease-in;
  z-index: 200;
}

/** drawer.scss ----------------*/
:root {
  --drawer-color: inherit;
  --drawer-background-color: var(--sld-color-paper-alpha-low);
  --drawer-backdrop-filter: blur(0px);
  --drawer-box-shadow: var(--sld-elevation-3);
  --drawer-border-left: var(--sld-color-primary-alpha-mid);
  --drawer-icon-padding: 0 0.5rem;
  --drawer-header-min-height: 48px;
  --drawer-header-bar-title-font-size: large;
  --drawer-content-flex: 1;
}

.drawer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.drawer {
  color: var(--drawer-color);
  background-color: var(--drawer-background-color);
  --webkit-backdrop-filter: var(--drawer-backdrop-filter);
  backdrop-filter: var(--drawer-backdrop-filter);
  z-index: 3000;
  box-shadow: var(--drawer-box-shadow);
  border-left: 1px solid var(--drawer-border-left);
  overflow: visible;
  height: 100%;
  transition: all 0.1s;
}
.drawer-icon {
  padding: var(--drawer-icon-padding);
  display: flex;
  align-items: center;
}
.drawer-opener {
  position: absolute;
  z-index: 8600;
}
.drawer header, .drawer-header {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.drawer header, .drawer-header {
  --preset-tall: var(--sld-tall-small);
}
.drawer header[tall=tiny], .drawer header.tall-tiny, .drawer-header[tall=tiny], .drawer-header.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.drawer header[tall=mini], .drawer header.tall-mini, .drawer-header[tall=mini], .drawer-header.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.drawer header[tall=small], .drawer header.tall-small, .drawer-header[tall=small], .drawer-header.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.drawer header[tall=med], .drawer header.tall-med, .drawer-header[tall=med], .drawer-header.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.drawer header[tall=kind], .drawer header.tall-kind, .drawer-header[tall=kind], .drawer-header.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.drawer header[tall=auto], .drawer header.tall-auto, .drawer-header[tall=auto], .drawer-header.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.drawer header[tall=default], .drawer header.tall-default, .drawer-header[tall=default], .drawer-header.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.drawer header, .drawer-header {
  min-height: var(--drawer-header-min-height);
  display: flex;
  width: 100%;
}
.drawer header-bar, .drawer-header-bar {
  flex: 1;
  display: flex;
  align-items: center;
}
.drawer header-bar-title, .drawer-header-bar-title {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  font-size: var(--drawer-header-bar-title-font-size);
}
.drawer-content {
  flex: var(--drawer-content-flex);
  position: relative;
  overflow: hidden;
  width: 100%;
}

/** sorterer.scss ----------------*/
:root {
  --sorterer-gap: var(--sld-gap-tiny);
}

.sorterer {
  cursor: pointer;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--sorterer-gap);
}

/** finder.scss ----------------*/
:root {
  --finder-gap: var(--sld-gap-tiny);
}

.finder-container {
  display: inline-flex;
  gap: var(--finder-gap);
}
.finder-container {
  width: var(--sld-width-small);
}
.finder-container {
  --preset-width: var(--sld-width-small);
}
.finder-container[width=tiny], .finder-container.width-tiny {
  --preset-width: var(--sld-width-tiny);
  width: var(--sld-width-tiny) !important;
}
.finder-container[width=mini], .finder-container.width-mini {
  --preset-width: var(--sld-width-mini);
  width: var(--sld-width-mini) !important;
}
.finder-container[width=small], .finder-container.width-small {
  --preset-width: var(--sld-width-small);
  width: var(--sld-width-small) !important;
}
.finder-container[width=med], .finder-container.width-med {
  --preset-width: var(--sld-width-med);
  width: var(--sld-width-med) !important;
}
.finder-container[width=kind], .finder-container.width-kind {
  --preset-width: var(--sld-width-kind);
  width: var(--sld-width-kind) !important;
}
.finder-container[width=full], .finder-container.width-full {
  --preset-width: var(--sld-width-full);
  width: var(--sld-width-full) !important;
}
.finder-container[width=auto], .finder-container.width-auto {
  --preset-width: var(--sld-width-auto);
  width: var(--sld-width-auto) !important;
}
.finder-container[width=default], .finder-container.width-default {
  --preset-width: var(--sld-width-default);
  width: var(--sld-width-default) !important;
}
.finder-container {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.finder-container {
  --preset-tall: var(--sld-tall-small);
}
.finder-container[tall=tiny], .finder-container.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.finder-container[tall=mini], .finder-container.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.finder-container[tall=small], .finder-container.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.finder-container[tall=med], .finder-container.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.finder-container[tall=kind], .finder-container.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.finder-container[tall=auto], .finder-container.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.finder-container[tall=default], .finder-container.tall-default {
  min-height: var(--sld-tall-default) !important;
}

/** datalist.scss ----------------*/
:root {
  --datalist-pad: var(--sld-pad-med);
  --datalist-gap: var(--sld-gap-med);
  --datalist-icon-color: #999;
  --datalist-icon-color-hover: var(--sld-color-primary);
  --datalist-divider-border: transparent;
  --datalist-divider-border-hover: var(--sld-color-primary, red);
  --datalist-background-color: var(--sld-color-paper-alpha-low);
  --datalist-radius: var(--sld-radius-tiny);
  --datalist-box-shadow: var(--sld-elevation-1);
  --datalist-border: var(--sld-color-border);
  --datalist-cell-border: var(--sld-color-border);
  --datalist-cell-border-hover: var(--sld-color-primary-alpha);
  --datalist-row-border: var(--sld-color-border);
  --datalist-row-background-color-hover: var(--sld-color-paper);
  --datalist-cell-color: var(--sld-color-foreground);
  --datalist-cell-background-color-selected: var(--sld-color-primary);
  --datalist-cell-color-selected: white;
}

.datalist {
  height: 100%;
  position: relative;
}
.datalist-group {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.datalist-group-wrapper {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100%;
}
.datalist-group-head {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: var(--datalist-pad);
  gap: var(--datalist-gap);
  cursor: pointer;
}
.datalist-group-head-icon {
  color: var(--datalist-icon-color);
}
.datalist-group-head-divider {
  border-bottom: 1px solid var(--datalist-divider-border);
}
.datalist-group-head:hover-icon {
  color: var(--datalist-icon-color-hover);
}
.datalist-group-head:hover-divider {
  flex: 1;
  border-bottom-width: 1px;
  border-color: var(--datalist-divider-border-hover);
  cursor: pointer;
}
.datalist-group-body {
  flex: 1;
  position: relative;
}

.datalist-group-head {
  margin: 0.5rem 0;
  align-items: stretch;
  height: 32px;
  z-index: 100;
  background-color: var(--datalist-background-color);
  backdrop-filter: blur(20px);
  border-radius: var(--datalist-radius);
  box-shadow: var(--datalist-box-shadow);
  border: 1px solid var(--datalist-border);
}
.datalist-group-head .dataListCell {
  display: flex;
  align-items: stretch;
  overflow: hidden;
  border-right: 1px solid var(--datalist-cell-border);
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.datalist-group-head .dataListCell:last-of-type {
  border-right: 1px solid transparent;
}
.datalist-group-head .dataListCell[data-sortable=true] {
  cursor: pointer;
}
.datalist-group-head .dataListCell[data-sortable=true]:hover {
  background-color: var(--datalist-cell-border-hover);
}
.datalist-group-head .dataListCell .cellHeader {
  display: flex;
  align-items: center;
  min-width: 0;
  width: 100%;
}
.datalist-group-head .dataListCell .cellHeader .cellHeaderContent {
  flex: 1;
  overflow: hidden;
  padding: 0 8px;
}
:global(.dataListRow) {
  border-bottom: 1px solid var(--datalist-row-border);
  --webkit-content-visibility: auto;
  webkit-content-visibility: auto;
}
:global(.dataListRow):last-of-type {
  border-bottom: 1px solid transparent;
}
:global(.dataListRow):hover {
  background-color: var(--datalist-row-background-color-hover);
}
:global(.dataListRow)[aria-selected=true] {
  background-color: var(--datalist-cell-background-color-selected);
}
:global(.dataListRow)[aria-selected=true] .dataListCell {
  color: var(--datalist-cell-color-selected);
}
:global(.dataListRow) .dataListCell {
  padding: 0.5rem 0.5rem;
  color: var(--datalist-cell-color);
  border-right: 1px solid var(--datalist-cell-border);
}
:global(.dataListRow) .dataListCell:last-of-type {
  border-right: 1px solid transparent;
}
:global(.dataListRow) .dataListCell[data-noWrap=true] {
  display: box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/** loader.scss ----------------*/
:root {
  --loader-background-color: var(--sld-color-background-alpha-mid);
  --loader-box-shadow: var(--sld-elevation-1);
  --loader-radius: var(--sld-radius-tiny);
  --loader-border: var(--sld-color-foreground-alpha-high);
  --loader-message-border-radius: var(--sld-radius-small);
  --loader-message-border-bottom: var(--sld-color-primary);
  --loader-message-padding: var(--box-density-1) var(--box-density-2);
}

.loader {
  position: absolute;
  top: 0;
  background-color: var(--loader-background-color);
  height: 100%;
  min-width: 128px;
  max-width: 100%;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  left: 50%;
  transform: translate(-50%, 0);
}
.loader .loader-box {
  box-shadow: var(--loader-box-shadow);
  border-radius: var(--loader-radius);
  border: 1px solid var(--loader-border);
  padding: 1rem 0;
  min-width: 128px;
  width: 100%;
  margin: 1rem;
  text-align: center;
  background-color: var(--loader-background-color);
  display: flex;
  flex-direction: column;
  align-items: center;
}
.loader .loader-box .loader-message {
  border-radius: var(--loader-message-border-radius);
  border-bottom: 1px solid;
  border-color: var(--loader-message-border-bottom);
  padding: var(--loader-message-padding);
  display: inline-block;
  box-shadow: var(--loader-box-shadow);
}

/** switch.scss ----------------*/
:root {
  --switch-border-radius: var(--sld-radius-large);
  --switch-background: var(--sld-color-paper);
  --switch-checked-background: var(--sld-color-primary);
  --switch-handle-background-color: var(--sld-color-primary);
  --switch-handle-border: var(--sld-color-secondary-alpha-low);
  --switch-gutter-border: var(--sld-color-primary-alpha-low);
  --switch-gutter-background: var(--sld-switch-background);
  --switch-gutter-padding: 3px;
}

.switch {
  display: inline-block;
  position: relative;
  border-radius: var(--switch-border-radius);
  overflow: hidden;
  cursor: pointer;
}
.switch :hover .switchHandle {
  background-color: var(--sld-color-secondary) !important;
}
.switch :has(input:checked) {
  background-color: var(--switch-checked-background);
}
.switch .switchGutter {
  border: 1px solid var(--switch-gutter-border);
  border-radius: var(--switch-border-radius);
  padding: var(--switch-gutter-padding);
  background-color: var(--switch-gutter-background);
}
.switch .switchGutter input {
  position: absolute;
  width: 0;
  height: 0;
  top: -50px;
  left: -50px;
}
.switch .switchGutter input:checked + .switchHandle {
  left: calc(100% - 16px);
  border-color: var(--sld-color-secondary-alpha-mid);
  box-shadow: var(--sld-elevation-3);
  background-color: var(--sld-color-background);
}
.switch .switchGutter input + .switchHandle {
  position: relative;
  display: block;
  width: 16px;
  height: 16px;
  background: white;
  border-radius: var(--switch-border-radius);
  left: 0;
  transition: all 0.1s;
  background-color: var(--switch-handle-background-color);
  border: 1px solid var(--switch-handle-border);
  box-shadow: var(--sld-elevation-1);
}

label {
  background-color: transparent;
  border: none;
  padding: 0;
  min-width: 42px;
}

/** textfield.scss ----------------*/
.slotui-textfield {
  --textfield-background: var(--sld-color-background-alpha-high);
  --textfield-border-width: 1px;
  --textfield-border-color: var(--sld-color-foreground-alpha-mid);
  --textfield-border-bottom-width: 2px;
  --textfield-border-bottom-color: var(--sld-color-primary-darker, rgb(208, 191, 151));
  --textfield-radius: var(--sld-radius-small);
  --textfield-padding: 0 0.5rem;
  --textfield-shadow: inset 0px 0px 3px 1px rgba(51, 51, 51, 0.1);
}

.slotui-textfield {
  width: var(--sld-width-small);
}
.slotui-textfield {
  --preset-width: var(--sld-width-small);
}
.slotui-textfield[width=tiny], .slotui-textfield.width-tiny {
  --preset-width: var(--sld-width-tiny);
  width: var(--sld-width-tiny) !important;
}
.slotui-textfield[width=mini], .slotui-textfield.width-mini {
  --preset-width: var(--sld-width-mini);
  width: var(--sld-width-mini) !important;
}
.slotui-textfield[width=small], .slotui-textfield.width-small {
  --preset-width: var(--sld-width-small);
  width: var(--sld-width-small) !important;
}
.slotui-textfield[width=med], .slotui-textfield.width-med {
  --preset-width: var(--sld-width-med);
  width: var(--sld-width-med) !important;
}
.slotui-textfield[width=kind], .slotui-textfield.width-kind {
  --preset-width: var(--sld-width-kind);
  width: var(--sld-width-kind) !important;
}
.slotui-textfield[width=full], .slotui-textfield.width-full {
  --preset-width: var(--sld-width-full);
  width: var(--sld-width-full) !important;
}
.slotui-textfield[width=auto], .slotui-textfield.width-auto {
  --preset-width: var(--sld-width-auto);
  width: var(--sld-width-auto) !important;
}
.slotui-textfield[width=default], .slotui-textfield.width-default {
  --preset-width: var(--sld-width-default);
  width: var(--sld-width-default) !important;
}
.slotui-textfield {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.slotui-textfield {
  --preset-tall: var(--sld-tall-small);
}
.slotui-textfield[tall=tiny], .slotui-textfield.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.slotui-textfield[tall=mini], .slotui-textfield.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.slotui-textfield[tall=small], .slotui-textfield.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.slotui-textfield[tall=med], .slotui-textfield.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.slotui-textfield[tall=kind], .slotui-textfield.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.slotui-textfield[tall=auto], .slotui-textfield.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.slotui-textfield[tall=default], .slotui-textfield.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.slotui-textfield:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
.slotui-textfield {
  border: var(--textfield-border-width) solid var(--textfield-border-color);
  border-bottom: var(--textfield-border-bottom-width) solid var(--textfield-border-bottom-color);
  border-radius: var(--textfield-radius);
  padding: var(--textfield-padding);
  box-shadow: var(--textfield-shadow);
  background-color: var(--textfield-background);
  color: var(--sld-color-foreground);
}
.slotui-textfield [error] {
  border-bottom: red;
}
.slotui-textfield-container {
  position: relative;
  display: inline-flex;
  overflow: hidden;
}
.slotui-textfield-start {
  position: absolute;
  height: 100%;
  max-height: 100%;
  width: 24px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: var(--textfield-radius, var(--sld-radius-small));
}
.slotui-textfield-end {
  position: absolute;
  right: 0;
  height: 100%;
  max-height: 100%;
  min-width: 24px;
  overflow: hidden;
  display: flex;
  gap: 4px;
  padding: 2px;
  align-items: center;
  border-radius: var(--textfield-radius, var(--sld-radius-small));
}
.slotui-textfield-end > * {
  max-height: calc(100% - 40px) !important;
  border: 1px solid pink;
}

/** stepper.scss ----------------*/
:root {
  --stepper-pad: var(--sld-pad-med);
  --stepper-radius: var(--sld-radius-small);
  --stepper-active-color: var(--sld-color-secondary);
}

.stepper {
  display: flex;
}
.stepper.vertical {
  flex-direction: column;
}
.stepper-step {
  padding: var(--stepper-pad);
  border-radius: var(--stepper-radius);
  margin-top: 10px;
}
.stepper-step.active {
  color: var(--stepper-active-color);
}

/** select.scss ----------------*/
:root {
  --select-background-color: var(--sld-color-background);
  --select-radius: var(--sld-radius-small);
}

.select {
  background-color: var(--select-background-color);
  height: 160px;
  width: 160px;
  border-radius: var(--select-radius);
}

/** rating.scss ----------------*/
:root {
  --rating-gap: var(--sld-gap-small);
}

.rating {
  display: flex;
  flex-direction: var(--direction);
  gap: var(--rating-gap);
}

/** progress.scss ----------------*/
:root {
  --progress-border: var(--sld-color-secondary-alpha-mid);
  --progress-radius: var(--sld-radius-tiny);
  --progress-gouge-background: var(--sld-color-primary);
  --progress-gouge-border: var(--sld-color-primary-alpha);
}

.progress {
  border: 1px solid var(--progress-border);
  border-radius: var(--progress-radius);
  padding: 1px;
}
.progress .progress-gouge {
  background: var(--progress-gouge-background);
  border-radius: var(--progress-radius);
  border: 1px solid var(--progress-gouge-border);
  transition-delay: 250ms;
  transition: all 0.25s;
  max-width: 100%;
}

/** confirm.scss ----------------*/
.confirm {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.confirm-validate {
  display: flex;
  align-items: center;
}

/** checkbox.scss ----------------*/
:root {
  --sld-checkbox-background: var(--sld-color-background-alpha-high);
  --sld-checkbox-background-hover: var(--sld-color-primary);
  --sld-checkbox-background-checked: var(--sld-color-primary);
  --sld-checkbox-background-indeterminate: var(--sld-color-primary-alpha-mid);
  --sld-checkbox-border-width: 2px;
  --sld-checkbox-border-color: var(--sld-color-foreground-alpha-mid);
  --sld-checkbox-border-bottom-width: 2px;
  --sld-checkbox-border-bottom-color: var(--sld-color-primary-darker, rgb(208, 191, 151));
  --sld-checkbox-radius: var(--sld-radius-small);
  --sld-checkbox-padding: 0 0.5rem;
  --sld-checkbox-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.1);
}

.checkbox:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
.checkbox {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.checkbox {
  --preset-tall: var(--sld-tall-small);
}
.checkbox[tall=tiny], .checkbox.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.checkbox[tall=mini], .checkbox.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.checkbox[tall=small], .checkbox.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.checkbox[tall=med], .checkbox.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.checkbox[tall=kind], .checkbox.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.checkbox[tall=auto], .checkbox.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.checkbox[tall=default], .checkbox.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.checkbox {
  transition: all 0.25s ease;
}
.checkbox {
  appearance: none;
  outline: none;
  border: var(--sld-checkbox-border-width) solid var(--sld-checkbox-border-color);
  border-radius: var(--sld-checkbox-radius);
  background-clip: padding-box;
  background-color: var(--sld-checkbox-background);
  width: 1.7rem;
  height: 1.7rem;
  aspect-ratio: 1/1;
  padding: 0;
  margin: 0;
}
.checkbox:focus-visible {
  box-shadow: var(--sld-checkbox-shadow);
}
.checkbox:hover {
  background-color: var(--sld-color-primary-darken-mid);
}
.checkbox:active + .svg {
  color: var(--sld-color-secondary);
}
.checkbox:disabled {
  border-color: #ccc;
  background-color: #ededed;
  pointer-events: none;
}
.checkbox:checked, .checkbox:indeterminate {
  background-color: var(--sld-checkbox-background-indeterminate);
}
.checkbox:checked:hover, .checkbox:indeterminate:hover {
  background-color: var(--sld-checkbox-background-hover);
}
.checkbox:checked:active, .checkbox:checked:focus, .checkbox:indeterminate:active, .checkbox:indeterminate:focus {
  background-color: var(--sld-checkbox-background-checked);
}
.checkbox:checked:disabled, .checkbox:checked[disabled], .checkbox:indeterminate:disabled, .checkbox:indeterminate[disabled] {
  border-color: #ccc;
  background-color: #ededed;
  pointer-events: none;
}
.checkbox:checked:disabled + .svg, .checkbox:checked[disabled] + .svg, .checkbox:indeterminate:disabled + .svg, .checkbox:indeterminate[disabled] + .svg {
  color: #ededed;
}

.checkbox-root {
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  user-select: none;
  min-block-size: 32px;
  gap: 0.5rem;
}
.checkbox-root.disabled > span {
  color: #ededed;
}
.checkbox-root .checkbox-container {
  display: inline-flex;
  justify-content: center;
  position: relative;
}
.checkbox-root .checkbox-container .svg {
  position: absolute;
  color: white;
  height: 100%;
  width: 100%;
  padding: 3px;
}
.checkbox-root .checkbox-container .svg path {
  transform-origin: center;
}
.checkbox-root .checkbox-container .svg path-check {
  transform: scale(1.1);
  fill: white;
}
.checkbox-root .checkbox-container .svg path-indeterminate {
  transform: scale(1.1);
}

/** slider.scss ----------------*/
:root {
  --slider-background-color: var(--sld-color-background);
  --slider-gouge-background-color: var(--sld-color-secondary);
  --slider-gouge-selected-background-color: var(--sld-color-primary);
  --slider-thumb-background-color: var(--sld-color-primary);
  --slider-thumb-border: var(--sld-color-primary-darken-high);
  --slider-thumb-hover-outline: var(--sld-color-primary-alpha-high);
  --slider-thumb-hover-box-shadow: var(--sld-elevation-3);
}

.slider {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.slider {
  --preset-tall: var(--sld-tall-small);
}
.slider[tall=tiny], .slider.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.slider[tall=mini], .slider.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.slider[tall=small], .slider.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.slider[tall=med], .slider.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.slider[tall=kind], .slider.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.slider[tall=auto], .slider.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.slider[tall=default], .slider.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.slider {
  --height: calc(var(--preset-density) / 6);
  background-color: var(--slider-background-color);
  position: relative;
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  width: 168px;
}
.slider .slider-gouge {
  height: var(--height);
  width: 100%;
  border-radius: 10px;
  background-color: var(--slider-gouge-background-color);
}
.slider .slider-gouge-selected {
  height: var(--height);
  border-radius: 10px;
  background-color: var(--slider-gouge-selected-background-color);
}
.slider .slider-thumb {
  top: 0;
  aspect-ratio: 1/1;
  height: 90%;
  transform: translateY(50%);
  background-color: var(--slider-thumb-background-color);
  position: absolute;
  border: 3px solid var(--slider-thumb-border);
  border-radius: 50%;
  display: inline-block;
  background-clip: padding-box;
}
.slider .slider-thumb:hover {
  box-shadow: var(--slider-thumb-hover-box-shadow);
  outline: 4px solid var(--slider-thumb-hover-outline);
}

/** auto-complete.scss ----------------*/
:root {
  --auto-complete-pad: var(--sld-pad-medium);
  --auto-complete-gap: var(--sld-gap-small);
}

.auto-complete-no-results, .auto-complete-boot {
  padding: var(--auto-complete-pad);
  gap: var(--auto-complete-gap);
  display: flex;
  flex-direction: row;
  align-items: center;
}

/** button.scss ----------------*/
:root {
  --sld-button-font-size: inherit;
  --sld-button-radius: var(--sld-radius-small);
  --sld-button-border-color: var(--sld-color-primary);
  --sld-button-border-width: 1px;
  --sld-button-text-align: center;
  --sld-button-padding: 0;
  --sld-button-background: var(--sld-color-foreground-alpha-high);
  --sld-button-contained-background: var(--sld-color-primary-alpha-high);
  --sld-button-hover-border-color: var(--sld-color-primary);
  --sld-button-active-border-color: var(--sld-color-secondary);
  --sld-button-focus-border-color: var(--sld-color-primary);
  --sld-button-hover-shadow: var(--sld-elevation-3);
  --sld-button-active-shadow: var(--sld-elevation-4);
  --sld-button-focus-shadow: var(--sld-elevation-4);
}

.actionButton {
  height: 100%;
  width: var(--w-tiny);
  cursor: pointer;
}
.actionButton:hover {
  background-color: rgba(255, 255, 255, 0.5);
}

.slotui-button,
button.slotui-button,
input[type=button].slotui-button,
input[type=submit].slotui-button {
  width: var(--sld-width-small);
}
.slotui-button,
button.slotui-button,
input[type=button].slotui-button,
input[type=submit].slotui-button {
  --preset-width: var(--sld-width-small);
}
.slotui-button[width=tiny], .slotui-button.width-tiny,
button.slotui-button[width=tiny],
button.slotui-button.width-tiny,
input[type=button].slotui-button[width=tiny],
input[type=button].slotui-button.width-tiny,
input[type=submit].slotui-button[width=tiny],
input[type=submit].slotui-button.width-tiny {
  --preset-width: var(--sld-width-tiny);
  width: var(--sld-width-tiny) !important;
}
.slotui-button[width=mini], .slotui-button.width-mini,
button.slotui-button[width=mini],
button.slotui-button.width-mini,
input[type=button].slotui-button[width=mini],
input[type=button].slotui-button.width-mini,
input[type=submit].slotui-button[width=mini],
input[type=submit].slotui-button.width-mini {
  --preset-width: var(--sld-width-mini);
  width: var(--sld-width-mini) !important;
}
.slotui-button[width=small], .slotui-button.width-small,
button.slotui-button[width=small],
button.slotui-button.width-small,
input[type=button].slotui-button[width=small],
input[type=button].slotui-button.width-small,
input[type=submit].slotui-button[width=small],
input[type=submit].slotui-button.width-small {
  --preset-width: var(--sld-width-small);
  width: var(--sld-width-small) !important;
}
.slotui-button[width=med], .slotui-button.width-med,
button.slotui-button[width=med],
button.slotui-button.width-med,
input[type=button].slotui-button[width=med],
input[type=button].slotui-button.width-med,
input[type=submit].slotui-button[width=med],
input[type=submit].slotui-button.width-med {
  --preset-width: var(--sld-width-med);
  width: var(--sld-width-med) !important;
}
.slotui-button[width=kind], .slotui-button.width-kind,
button.slotui-button[width=kind],
button.slotui-button.width-kind,
input[type=button].slotui-button[width=kind],
input[type=button].slotui-button.width-kind,
input[type=submit].slotui-button[width=kind],
input[type=submit].slotui-button.width-kind {
  --preset-width: var(--sld-width-kind);
  width: var(--sld-width-kind) !important;
}
.slotui-button[width=full], .slotui-button.width-full,
button.slotui-button[width=full],
button.slotui-button.width-full,
input[type=button].slotui-button[width=full],
input[type=button].slotui-button.width-full,
input[type=submit].slotui-button[width=full],
input[type=submit].slotui-button.width-full {
  --preset-width: var(--sld-width-full);
  width: var(--sld-width-full) !important;
}
.slotui-button[width=auto], .slotui-button.width-auto,
button.slotui-button[width=auto],
button.slotui-button.width-auto,
input[type=button].slotui-button[width=auto],
input[type=button].slotui-button.width-auto,
input[type=submit].slotui-button[width=auto],
input[type=submit].slotui-button.width-auto {
  --preset-width: var(--sld-width-auto);
  width: var(--sld-width-auto) !important;
}
.slotui-button[width=default], .slotui-button.width-default,
button.slotui-button[width=default],
button.slotui-button.width-default,
input[type=button].slotui-button[width=default],
input[type=button].slotui-button.width-default,
input[type=submit].slotui-button[width=default],
input[type=submit].slotui-button.width-default {
  --preset-width: var(--sld-width-default);
  width: var(--sld-width-default) !important;
}
.slotui-button,
button.slotui-button,
input[type=button].slotui-button,
input[type=submit].slotui-button {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.slotui-button,
button.slotui-button,
input[type=button].slotui-button,
input[type=submit].slotui-button {
  --preset-tall: var(--sld-tall-small);
}
.slotui-button[tall=tiny], .slotui-button.tall-tiny,
button.slotui-button[tall=tiny],
button.slotui-button.tall-tiny,
input[type=button].slotui-button[tall=tiny],
input[type=button].slotui-button.tall-tiny,
input[type=submit].slotui-button[tall=tiny],
input[type=submit].slotui-button.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.slotui-button[tall=mini], .slotui-button.tall-mini,
button.slotui-button[tall=mini],
button.slotui-button.tall-mini,
input[type=button].slotui-button[tall=mini],
input[type=button].slotui-button.tall-mini,
input[type=submit].slotui-button[tall=mini],
input[type=submit].slotui-button.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.slotui-button[tall=small], .slotui-button.tall-small,
button.slotui-button[tall=small],
button.slotui-button.tall-small,
input[type=button].slotui-button[tall=small],
input[type=button].slotui-button.tall-small,
input[type=submit].slotui-button[tall=small],
input[type=submit].slotui-button.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.slotui-button[tall=med], .slotui-button.tall-med,
button.slotui-button[tall=med],
button.slotui-button.tall-med,
input[type=button].slotui-button[tall=med],
input[type=button].slotui-button.tall-med,
input[type=submit].slotui-button[tall=med],
input[type=submit].slotui-button.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.slotui-button[tall=kind], .slotui-button.tall-kind,
button.slotui-button[tall=kind],
button.slotui-button.tall-kind,
input[type=button].slotui-button[tall=kind],
input[type=button].slotui-button.tall-kind,
input[type=submit].slotui-button[tall=kind],
input[type=submit].slotui-button.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.slotui-button[tall=auto], .slotui-button.tall-auto,
button.slotui-button[tall=auto],
button.slotui-button.tall-auto,
input[type=button].slotui-button[tall=auto],
input[type=button].slotui-button.tall-auto,
input[type=submit].slotui-button[tall=auto],
input[type=submit].slotui-button.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.slotui-button[tall=default], .slotui-button.tall-default,
button.slotui-button[tall=default],
button.slotui-button.tall-default,
input[type=button].slotui-button[tall=default],
input[type=button].slotui-button.tall-default,
input[type=submit].slotui-button[tall=default],
input[type=submit].slotui-button.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.slotui-button[variant*=square],
button.slotui-button[variant*=square],
input[type=button].slotui-button[variant*=square],
input[type=submit].slotui-button[variant*=square] {
  aspect-ratio: 1/1 !important;
  height: auto;
}
.slotui-button[variant*=rounded],
button.slotui-button[variant*=rounded],
input[type=button].slotui-button[variant*=rounded],
input[type=submit].slotui-button[variant*=rounded] {
  border-radius: 50%;
}
.slotui-button.elevation-0, .slotui-button[elevation-0],
button.slotui-button.elevation-0,
button.slotui-button[elevation-0],
input[type=button].slotui-button.elevation-0,
input[type=button].slotui-button[elevation-0],
input[type=submit].slotui-button.elevation-0,
input[type=submit].slotui-button[elevation-0] {
  box-shadow: var(--sld-elevation-0);
}
.slotui-button.elevation-through, .slotui-button[elevation-through],
button.slotui-button.elevation-through,
button.slotui-button[elevation-through],
input[type=button].slotui-button.elevation-through,
input[type=button].slotui-button[elevation-through],
input[type=submit].slotui-button.elevation-through,
input[type=submit].slotui-button[elevation-through] {
  box-shadow: var(--sld-elevation-through);
}
.slotui-button.elevation-5, .slotui-button[elevation-5],
button.slotui-button.elevation-5,
button.slotui-button[elevation-5],
input[type=button].slotui-button.elevation-5,
input[type=button].slotui-button[elevation-5],
input[type=submit].slotui-button.elevation-5,
input[type=submit].slotui-button[elevation-5] {
  box-shadow: var(--sld-elevation-5);
}
.slotui-button,
button.slotui-button,
input[type=button].slotui-button,
input[type=submit].slotui-button {
  border: none;
  border-radius: 0;
  margin: 0;
  text-align: var(--sld-button-text-align);
  font-size: var(--sld-button-font-size);
  border-radius: var(--sld-button-radius);
  color: var(--sld-color-foreground);
  padding: var(--sld-button-padding);
  position: relative;
  display: inline-flex;
  transition: all 0.2s ease-in-out;
  overflow: hidden;
  cursor: pointer;
  align-content: center;
  align-items: center;
  background: var(--sld-button-background);
}
.slotui-button .start,
button.slotui-button .start,
input[type=button].slotui-button .start,
input[type=submit].slotui-button .start {
  position: relative;
  top: 0;
  left: 0;
  max-height: 100%;
  align-items: center;
  align-content: center;
  padding: 0 0.5rem;
  display: block;
}
.slotui-button .start:empty,
button.slotui-button .start:empty,
input[type=button].slotui-button .start:empty,
input[type=submit].slotui-button .start:empty {
  display: none;
}
.slotui-button .central,
button.slotui-button .central,
input[type=button].slotui-button .central,
input[type=submit].slotui-button .central {
  --preset-ellipsis-line: 1;
}
.slotui-button .central[ellipsis], .slotui-button .central.ellipsis,
button.slotui-button .central[ellipsis],
button.slotui-button .central.ellipsis,
input[type=button].slotui-button .central[ellipsis],
input[type=button].slotui-button .central.ellipsis,
input[type=submit].slotui-button .central[ellipsis],
input[type=submit].slotui-button .central.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.slotui-button .central.ellipsis-line-1,
button.slotui-button .central.ellipsis-line-1,
input[type=button].slotui-button .central.ellipsis-line-1,
input[type=submit].slotui-button .central.ellipsis-line-1 {
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  --preset-ellipsis-line: 1;
}
.slotui-button .central.ellipsis-line-2,
button.slotui-button .central.ellipsis-line-2,
input[type=button].slotui-button .central.ellipsis-line-2,
input[type=submit].slotui-button .central.ellipsis-line-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  --preset-ellipsis-line: 2;
}
.slotui-button .central.ellipsis-line-3,
button.slotui-button .central.ellipsis-line-3,
input[type=button].slotui-button .central.ellipsis-line-3,
input[type=submit].slotui-button .central.ellipsis-line-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  --preset-ellipsis-line: 3;
}
.slotui-button .central.ellipsis-line-4,
button.slotui-button .central.ellipsis-line-4,
input[type=button].slotui-button .central.ellipsis-line-4,
input[type=submit].slotui-button .central.ellipsis-line-4 {
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  --preset-ellipsis-line: 4;
}
.slotui-button .central.ellipsis-line-5,
button.slotui-button .central.ellipsis-line-5,
input[type=button].slotui-button .central.ellipsis-line-5,
input[type=submit].slotui-button .central.ellipsis-line-5 {
  display: -webkit-box;
  -webkit-line-clamp: 5;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: normal;
  --preset-ellipsis-line: 5;
}
.slotui-button .central,
button.slotui-button .central,
input[type=button].slotui-button .central,
input[type=submit].slotui-button .central {
  display: block;
  max-width: 100%;
  max-height: 100%;
  flex: 1;
  align-items: center;
  align-content: center;
  justify-content: center;
  justify-items: center;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  text-align: var(--sld-button-text-align, center);
  overflow: hidden;
}
.slotui-button .central:empty,
button.slotui-button .central:empty,
input[type=button].slotui-button .central:empty,
input[type=submit].slotui-button .central:empty {
  display: none;
}
.slotui-button .end,
button.slotui-button .end,
input[type=button].slotui-button .end,
input[type=submit].slotui-button .end {
  position: relative;
  align-items: center;
  align-content: center;
  padding: 0 0.5rem;
  text-align: center;
  cursor: pointer;
}
.slotui-button .end:empty,
button.slotui-button .end:empty,
input[type=button].slotui-button .end:empty,
input[type=submit].slotui-button .end:empty {
  display: none;
}
.slotui-button .end:hover,
button.slotui-button .end:hover,
input[type=button].slotui-button .end:hover,
input[type=submit].slotui-button .end:hover {
  background-color: var(--sld-button-action-hover-background);
}
.slotui-button.loading, .slotui-button[aria-busy=true],
button.slotui-button.loading,
button.slotui-button[aria-busy=true],
input[type=button].slotui-button.loading,
input[type=button].slotui-button[aria-busy=true],
input[type=submit].slotui-button.loading,
input[type=submit].slotui-button[aria-busy=true] {
  position: relative;
  color: transparent;
  pointer-events: none;
}
.slotui-button.loading::after, .slotui-button[aria-busy=true]::after,
button.slotui-button.loading::after,
button.slotui-button[aria-busy=true]::after,
input[type=button].slotui-button.loading::after,
input[type=button].slotui-button[aria-busy=true]::after,
input[type=submit].slotui-button.loading::after,
input[type=submit].slotui-button[aria-busy=true]::after {
  content: " ";
  position: absolute;
  width: 16px;
  height: 16px;
  top: 50%;
  left: 50%;
  margin-top: -8px;
  margin-left: -8px;
  border: 2px solid var(--sld-color-secondary);
  border-top-color: transparent;
  border-bottom-color: transparent;
  border-radius: 50%;
  animation: button-spinner 0.6s linear infinite;
}
.slotui-button[disabled], .slotui-button.disabled, .slotui-button[aria-disabled=true],
button.slotui-button[disabled],
button.slotui-button.disabled,
button.slotui-button[aria-disabled=true],
input[type=button].slotui-button[disabled],
input[type=button].slotui-button.disabled,
input[type=button].slotui-button[aria-disabled=true],
input[type=submit].slotui-button[disabled],
input[type=submit].slotui-button.disabled,
input[type=submit].slotui-button[aria-disabled=true] {
  color: var(--color-gray-800);
  border-color: var(--color-gray-400);
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
  pointer-events: none;
}
.slotui-button[aria-pressed=true], .slotui-button.selected,
button.slotui-button[aria-pressed=true],
button.slotui-button.selected,
input[type=button].slotui-button[aria-pressed=true],
input[type=button].slotui-button.selected,
input[type=submit].slotui-button[aria-pressed=true],
input[type=submit].slotui-button.selected {
  box-shadow: var(--sld-elevation-3);
  background-color: var(--sld-color-secondary);
  font-weight: bold;
}
.slotui-button .chip,
button.slotui-button .chip,
input[type=button].slotui-button .chip,
input[type=submit].slotui-button .chip {
  position: absolute;
  z-index: 2;
  height: 3px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
  background-color: var(--css-button-chip-color, var(--sld-color-primary));
  border-radius: var(--sld-radius-large);
  bottom: 2px;
}
.slotui-button .loadingButtonZone,
button.slotui-button .loadingButtonZone,
input[type=button].slotui-button .loadingButtonZone,
input[type=submit].slotui-button .loadingButtonZone {
  z-index: 10;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  height: 100%;
  overflow: hidden;
  align-content: center;
  justify-content: space-around;
}
.slotui-button[variant*=bordered], .slotui-button[bordered=true], .slotui-button.bordered,
button.slotui-button[variant*=bordered],
button.slotui-button[bordered=true],
button.slotui-button.bordered,
input[type=button].slotui-button[variant*=bordered],
input[type=button].slotui-button[bordered=true],
input[type=button].slotui-button.bordered,
input[type=submit].slotui-button[variant*=bordered],
input[type=submit].slotui-button[bordered=true],
input[type=submit].slotui-button.bordered {
  color: var(--sld-color-foreground);
  border: var(--sld-button-border-width) solid var(--sld-button-border-color);
  box-shadow: var(--sld-elevation-1);
  background-color: var(--sld-button-background);
}
.slotui-button[variant*=bordered]:hover, .slotui-button[bordered=true]:hover, .slotui-button.bordered:hover,
button.slotui-button[variant*=bordered]:hover,
button.slotui-button[bordered=true]:hover,
button.slotui-button.bordered:hover,
input[type=button].slotui-button[variant*=bordered]:hover,
input[type=button].slotui-button[bordered=true]:hover,
input[type=button].slotui-button.bordered:hover,
input[type=submit].slotui-button[variant*=bordered]:hover,
input[type=submit].slotui-button[bordered=true]:hover,
input[type=submit].slotui-button.bordered:hover {
  border-color: var(--sld-color-primary);
  box-shadow: var(--sld-button-hover-shadow);
}
.slotui-button[variant*=bordered]:focus, .slotui-button[variant*=bordered]:active, .slotui-button[bordered=true]:focus, .slotui-button[bordered=true]:active, .slotui-button.bordered:focus, .slotui-button.bordered:active,
button.slotui-button[variant*=bordered]:focus,
button.slotui-button[variant*=bordered]:active,
button.slotui-button[bordered=true]:focus,
button.slotui-button[bordered=true]:active,
button.slotui-button.bordered:focus,
button.slotui-button.bordered:active,
input[type=button].slotui-button[variant*=bordered]:focus,
input[type=button].slotui-button[variant*=bordered]:active,
input[type=button].slotui-button[bordered=true]:focus,
input[type=button].slotui-button[bordered=true]:active,
input[type=button].slotui-button.bordered:focus,
input[type=button].slotui-button.bordered:active,
input[type=submit].slotui-button[variant*=bordered]:focus,
input[type=submit].slotui-button[variant*=bordered]:active,
input[type=submit].slotui-button[bordered=true]:focus,
input[type=submit].slotui-button[bordered=true]:active,
input[type=submit].slotui-button.bordered:focus,
input[type=submit].slotui-button.bordered:active {
  border-color: var(--sld-button-active-border-color);
  box-shadow: var(--sld-button-active-shadow);
}
.slotui-button[variant*=contained], .slotui-button[contained=true], .slotui-button.contained,
button.slotui-button[variant*=contained],
button.slotui-button[contained=true],
button.slotui-button.contained,
input[type=button].slotui-button[variant*=contained],
input[type=button].slotui-button[contained=true],
input[type=button].slotui-button.contained,
input[type=submit].slotui-button[variant*=contained],
input[type=submit].slotui-button[contained=true],
input[type=submit].slotui-button.contained {
  border: var(--sld-button-border-width) solid var(--sld-button-border-color);
  color: var(--sld-color-on-primary);
  background-color: var(--sld-button-contained-background);
  background-clip: padding-box;
  box-shadow: var(--sld-elevation-1);
}
.slotui-button[variant*=contained]:hover, .slotui-button[contained=true]:hover, .slotui-button.contained:hover,
button.slotui-button[variant*=contained]:hover,
button.slotui-button[contained=true]:hover,
button.slotui-button.contained:hover,
input[type=button].slotui-button[variant*=contained]:hover,
input[type=button].slotui-button[contained=true]:hover,
input[type=button].slotui-button.contained:hover,
input[type=submit].slotui-button[variant*=contained]:hover,
input[type=submit].slotui-button[contained=true]:hover,
input[type=submit].slotui-button.contained:hover {
  background-color: var(--sld-color-secondary);
  color: var(--sld-color-on-secondary);
}
.slotui-button[variant*=contained]:focus, .slotui-button[variant*=contained]:active, .slotui-button[contained=true]:focus, .slotui-button[contained=true]:active, .slotui-button.contained:focus, .slotui-button.contained:active,
button.slotui-button[variant*=contained]:focus,
button.slotui-button[variant*=contained]:active,
button.slotui-button[contained=true]:focus,
button.slotui-button[contained=true]:active,
button.slotui-button.contained:focus,
button.slotui-button.contained:active,
input[type=button].slotui-button[variant*=contained]:focus,
input[type=button].slotui-button[variant*=contained]:active,
input[type=button].slotui-button[contained=true]:focus,
input[type=button].slotui-button[contained=true]:active,
input[type=button].slotui-button.contained:focus,
input[type=button].slotui-button.contained:active,
input[type=submit].slotui-button[variant*=contained]:focus,
input[type=submit].slotui-button[variant*=contained]:active,
input[type=submit].slotui-button[contained=true]:focus,
input[type=submit].slotui-button[contained=true]:active,
input[type=submit].slotui-button.contained:focus,
input[type=submit].slotui-button.contained:active {
  background-color: var(--sld-color-tertiary);
  color: var(--sld-color-on-tertiary);
  box-shadow: var(--sld-button-active-shadow);
}
.slotui-button[variant*=link], .slotui-button.link, .slotui-button[role=link],
button.slotui-button[variant*=link],
button.slotui-button.link,
button.slotui-button[role=link],
input[type=button].slotui-button[variant*=link],
input[type=button].slotui-button.link,
input[type=button].slotui-button[role=link],
input[type=submit].slotui-button[variant*=link],
input[type=submit].slotui-button.link,
input[type=submit].slotui-button[role=link] {
  color: var(--sld-color-primary);
  text-decoration: underline;
  text-underline-offset: 0.35rem;
  background-color: transparent;
  cursor: pointer;
  border: none;
}
.slotui-button[variant*=link]:hover, .slotui-button.link:hover, .slotui-button[role=link]:hover,
button.slotui-button[variant*=link]:hover,
button.slotui-button.link:hover,
button.slotui-button[role=link]:hover,
input[type=button].slotui-button[variant*=link]:hover,
input[type=button].slotui-button.link:hover,
input[type=button].slotui-button[role=link]:hover,
input[type=submit].slotui-button[variant*=link]:hover,
input[type=submit].slotui-button.link:hover,
input[type=submit].slotui-button[role=link]:hover {
  text-decoration: underline;
}
.slotui-button[variant*=link]:focus, .slotui-button[variant*=link]:active, .slotui-button.link:focus, .slotui-button.link:active, .slotui-button[role=link]:focus, .slotui-button[role=link]:active,
button.slotui-button[variant*=link]:focus,
button.slotui-button[variant*=link]:active,
button.slotui-button.link:focus,
button.slotui-button.link:active,
button.slotui-button[role=link]:focus,
button.slotui-button[role=link]:active,
input[type=button].slotui-button[variant*=link]:focus,
input[type=button].slotui-button[variant*=link]:active,
input[type=button].slotui-button.link:focus,
input[type=button].slotui-button.link:active,
input[type=button].slotui-button[role=link]:focus,
input[type=button].slotui-button[role=link]:active,
input[type=submit].slotui-button[variant*=link]:focus,
input[type=submit].slotui-button[variant*=link]:active,
input[type=submit].slotui-button.link:focus,
input[type=submit].slotui-button.link:active,
input[type=submit].slotui-button[role=link]:focus,
input[type=submit].slotui-button[role=link]:active {
  text-decoration: underline;
  outline: none;
  box-shadow: none;
}
.slotui-button[variant*=naked]:hover, .slotui-button[naked=true]:hover, .slotui-button.naked:hover,
button.slotui-button[variant*=naked]:hover,
button.slotui-button[naked=true]:hover,
button.slotui-button.naked:hover,
input[type=button].slotui-button[variant*=naked]:hover,
input[type=button].slotui-button[naked=true]:hover,
input[type=button].slotui-button.naked:hover,
input[type=submit].slotui-button[variant*=naked]:hover,
input[type=submit].slotui-button[naked=true]:hover,
input[type=submit].slotui-button.naked:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-background-disabled);
}
.slotui-button[variant*=naked], .slotui-button[naked=true], .slotui-button.naked,
button.slotui-button[variant*=naked],
button.slotui-button[naked=true],
button.slotui-button.naked,
input[type=button].slotui-button[variant*=naked],
input[type=button].slotui-button[naked=true],
input[type=button].slotui-button.naked,
input[type=submit].slotui-button[variant*=naked],
input[type=submit].slotui-button[naked=true],
input[type=submit].slotui-button.naked {
  color: inherit;
  background-color: transparent;
  border: 0px solid transparent;
  cursor: pointer;
}
.slotui-button[variant*=naked]:hover, .slotui-button[naked=true]:hover, .slotui-button.naked:hover,
button.slotui-button[variant*=naked]:hover,
button.slotui-button[naked=true]:hover,
button.slotui-button.naked:hover,
input[type=button].slotui-button[variant*=naked]:hover,
input[type=button].slotui-button[naked=true]:hover,
input[type=button].slotui-button.naked:hover,
input[type=submit].slotui-button[variant*=naked]:hover,
input[type=submit].slotui-button[naked=true]:hover,
input[type=submit].slotui-button.naked:hover {
  background-color: var(--sld-button-hover-background);
}
.slotui-button[variant*=naked]:active, .slotui-button[variant*=naked]:focus, .slotui-button[naked=true]:active, .slotui-button[naked=true]:focus, .slotui-button.naked:active, .slotui-button.naked:focus,
button.slotui-button[variant*=naked]:active,
button.slotui-button[variant*=naked]:focus,
button.slotui-button[naked=true]:active,
button.slotui-button[naked=true]:focus,
button.slotui-button.naked:active,
button.slotui-button.naked:focus,
input[type=button].slotui-button[variant*=naked]:active,
input[type=button].slotui-button[variant*=naked]:focus,
input[type=button].slotui-button[naked=true]:active,
input[type=button].slotui-button[naked=true]:focus,
input[type=button].slotui-button.naked:active,
input[type=button].slotui-button.naked:focus,
input[type=submit].slotui-button[variant*=naked]:active,
input[type=submit].slotui-button[variant*=naked]:focus,
input[type=submit].slotui-button[naked=true]:active,
input[type=submit].slotui-button[naked=true]:focus,
input[type=submit].slotui-button.naked:active,
input[type=submit].slotui-button.naked:focus {
  background-color: transparent;
  border: 0.5px solid transparent;
  color: inherit;
}
.slotui-button[variant*=flat], .slotui-button[flat=true], .slotui-button.flat,
button.slotui-button[variant*=flat],
button.slotui-button[flat=true],
button.slotui-button.flat,
input[type=button].slotui-button[variant*=flat],
input[type=button].slotui-button[flat=true],
input[type=button].slotui-button.flat,
input[type=submit].slotui-button[variant*=flat],
input[type=submit].slotui-button[flat=true],
input[type=submit].slotui-button.flat {
  color: inherit;
  background-color: transparent;
  border: none;
  border-radius: 0;
  cursor: pointer;
}
.slotui-button[variant*=flat]:hover, .slotui-button[flat=true]:hover, .slotui-button.flat:hover,
button.slotui-button[variant*=flat]:hover,
button.slotui-button[flat=true]:hover,
button.slotui-button.flat:hover,
input[type=button].slotui-button[variant*=flat]:hover,
input[type=button].slotui-button[flat=true]:hover,
input[type=button].slotui-button.flat:hover,
input[type=submit].slotui-button[variant*=flat]:hover,
input[type=submit].slotui-button[flat=true]:hover,
input[type=submit].slotui-button.flat:hover {
  background-color: var(--sld-button-hover-background);
}
.slotui-button[variant*=flat]:active, .slotui-button[variant*=flat]:focus, .slotui-button[flat=true]:active, .slotui-button[flat=true]:focus, .slotui-button.flat:active, .slotui-button.flat:focus,
button.slotui-button[variant*=flat]:active,
button.slotui-button[variant*=flat]:focus,
button.slotui-button[flat=true]:active,
button.slotui-button[flat=true]:focus,
button.slotui-button.flat:active,
button.slotui-button.flat:focus,
input[type=button].slotui-button[variant*=flat]:active,
input[type=button].slotui-button[variant*=flat]:focus,
input[type=button].slotui-button[flat=true]:active,
input[type=button].slotui-button[flat=true]:focus,
input[type=button].slotui-button.flat:active,
input[type=button].slotui-button.flat:focus,
input[type=submit].slotui-button[variant*=flat]:active,
input[type=submit].slotui-button[variant*=flat]:focus,
input[type=submit].slotui-button[flat=true]:active,
input[type=submit].slotui-button[flat=true]:focus,
input[type=submit].slotui-button.flat:active,
input[type=submit].slotui-button.flat:focus {
  background-color: transparent;
  border: none;
  border-radius: 0;
  color: inherit;
}

@keyframes button-spinner {
  to {
    transform: rotate(360deg);
  }
}

/** button-menu.scss ----------------*/
.buttonActionRoot {
  display: inline-block;
  position: relative;
  width: 64px;
}

.buttonText {
  text-align: center;
}

.button {
  display: block;
  width: 64px;
}
.button:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

.action {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  right: 0;
  background-color: rgba(255, 255, 255, 0.1);
  width: 30%;
  padding: 0.5rem;
}
.action:hover {
  background-color: rgba(255, 255, 255, 0.5);
}

/** button-action.scss ----------------*/
.button-action {
  display: inline-flex;
  position: relative;
  align-items: center;
}
.button-action .chevron {
  flex-shrink: 1;
}

/** title-bar.scss ----------------*/
:root {
  --title-bar-gap: var(--sld-gap-med);
  --title-bar-pad: var(--sld-pad-med);
  --title-bar-color-border-bottom: var(--sld-color-border);
}

.title-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.title-bar-content {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--title-bar-gap);
  min-height: 34px;
  flex: 1;
}
.title-bar-content-icon {
  padding: var(--title-bar-pad);
}
.title-bar-content-title {
  flex: 1;
}
.title-bar {
  border-bottom: 1px solid var(--title-bar-color-border-bottom);
}

/** paper.scss ----------------*/
:root {
  --paper-radius: var(--sld-radius-small);
  --paper-border: var(--sld-color-foreground-alpha-high);
  --paper-background-color: var(--sld-color-paper);
  --paper-background-color-hover: var(--sld-color-paper-darken-low);
}

.paper {
  color: var(--paper-border);
  background-color: var(--paper-background-color);
  border-radius: var(--paper-radius);
}
.paper.elevation-0, .paper[elevation-0] {
  box-shadow: var(--sld-elevation-0);
}
.paper.elevation-through, .paper[elevation-through] {
  box-shadow: var(--sld-elevation-through);
}
.paper.elevation-5, .paper[elevation-5] {
  box-shadow: var(--sld-elevation-5);
}

/** icon.scss ----------------*/
:global(.icon) {
  transition: all 0.2;
}

.rotate {
  animation: spinner-frames 3s infinite linear;
}

@keyframes spinner-frames {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/** divider.scss ----------------*/
:root {
  --divider-border-top: var(--sld-color-border, var(--sld-color-foreground-alpha-high, #333));
  --divider-background-color: var(--sld-color-border, var(--sld-color-foreground-alpha-mid, #333));
  --divider-border-right: var(--sld-color-border, var(--sld-color-foreground-alpha-mid, #333));
}

hr {
  border: none;
  border-top: 1px solid var(--divider-border-top);
  background-color: var(--divider-background-color);
  display: block;
}
hr.vertical {
  width: 1px;
  border-right: 1px solid var(--divider-border-right);
}

/** content-switcher.scss ----------------*/
:root {
  --sld-content-switcher-overflow: hidden;
}

.content-switcher {
  min-width: auto;
  max-width: 100%;
  width: 100%;
  gap: 0.5rem;
  overflow: var(--sld-content-switcher-overflow);
  position: relative;
  display: flex;
  align-items: center;
  flex: 1;
}
.content-switcher .content {
  position: relative;
  overflow: var(--sld-content-switcher-overflow);
  min-width: auto;
  flex: 1 1 auto;
}

/** chipper.scss ----------------*/
:root {
  --chipper-gap: var(--sld-gap-tiny);
  --chipper-radius: var(--sld-radius-large);
  --chipper-chip-color: var(--css-button-chip-color, var(--sld-color-primary));
}

.chipper {
  position: relative;
  gap: var(--chipper-gap);
}
.chipper .chipper-content {
  padding: 0.5rem;
}
.chipper .chipper-chip {
  display: block;
  position: absolute;
  z-index: 2;
  border-radius: var(--chipper-radius);
  transition: all 0.25s;
  max-height: 100%;
  background-color: var(--chipper-chip-color);
}
.chipper .chipper-chip[data-position=left] {
  top: 2px;
  left: 2px;
  height: 100%;
  width: 3px;
}
.chipper .chipper-chip[data-position=right] {
  top: 2px;
  right: 2px;
  height: 130px;
  width: 3px;
}
.chipper .chipper-chip[data-position=top] {
  height: 4px;
  top: 2px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
}
.chipper .chipper-chip[data-position=bottom] {
  height: 4px;
  bottom: 2px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
}
.chipper .chipper-chip .defaultChip,
.chipper .chipper-chip [slot=chipperChip] {
  display: block;
  height: 100%;
  width: 100%;
  min-height: 3px;
  background-color: var(--chipper-chip-color);
}

/** cartouche.scss ----------------*/
:root {
  --cartouche-radius: var(--sld-radius-small);
  --cartouche-control-gap: var(--sld-gap-small);
  --cartouche-border: var(--sld-color-foreground-alpha-high);
  --cartouche-background-color: var(--sld-color-background);
  --cartouche-background-color-hover: var(--sld-color-background-darken-low);
  --cartouche-divider-border: var(--sld-color-foreground-alpha-mid);
}

.cartouche {
  border-radius: var(--cartouche-radius);
  background-clip: padding-box;
  overflow: hidden;
  box-shadow: var(--sld-elevation-1);
}
.cartouche[aria-expanded=true] {
  box-shadow: var(--sld-elevation-2);
}
.cartouche.stacked {
  border-radius: 0;
}
.cartouche.stacked:first-child {
  border-top-left-radius: var(--cartouche-radius);
  border-top-right-radius: var(--cartouche-radius);
}
.cartouche.stacked:last-child {
  border-bottom-left-radius: var(--cartouche-radius);
  border-bottom-right-radius: var(--cartouche-radius);
}
.cartouche .control {
  min-height: var(--preset-tall-small);
  height: var(--preset-tall-small);
}
.cartouche .control {
  --preset-tall: var(--sld-tall-small);
}
.cartouche .control[tall=tiny], .cartouche .control.tall-tiny {
  min-height: var(--sld-tall-tiny) !important;
}
.cartouche .control[tall=mini], .cartouche .control.tall-mini {
  min-height: var(--sld-tall-mini) !important;
}
.cartouche .control[tall=small], .cartouche .control.tall-small {
  min-height: var(--sld-tall-small) !important;
}
.cartouche .control[tall=med], .cartouche .control.tall-med {
  min-height: var(--sld-tall-med) !important;
}
.cartouche .control[tall=kind], .cartouche .control.tall-kind {
  min-height: var(--sld-tall-kind) !important;
}
.cartouche .control[tall=auto], .cartouche .control.tall-auto {
  min-height: var(--sld-tall-auto) !important;
}
.cartouche .control[tall=default], .cartouche .control.tall-default {
  min-height: var(--sld-tall-default) !important;
}
.cartouche .control {
  transition: all 0.25s ease;
}
.cartouche .control {
  display: flex;
  align-items: center;
  gap: var(--cartouche-control-gap);
  background-color: var(--cartouche-background-color);
  padding: auto 0.25rem;
  cursor: pointer;
}
.cartouche .control:hover {
  background-color: var(--cartouche-background-color-hover);
}
.cartouche .control .controlIcon {
  display: flex;
  align-items: center;
  padding: 0 0.5rem;
}
.cartouche .control .controlLabel {
  cursor: pointer;
  padding: 0 0.5rem;
}
.cartouche .control .cartouche-control-actions {
  cursor: default;
}
.cartouche .control .chevron {
  cursor: pointer;
  padding: 0.5rem;
  align-items: center;
  align-content: center;
}
.cartouche .content {
  transition: all 0.25s ease;
}
.cartouche .content {
  overflow: hidden;
  background-color: var(--cartouche-background-color);
  content-visibility: auto;
  padding: 1px;
  padding-top: 0;
  border-radius: 4px;
}
.cartouche .content-wrapper {
  padding: 1px;
  padding-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top: none !important;
  background-color: var(--cartouche-background-color);
}
.cartouche .content-wrapper[aria-expanded=false] {
  display: none;
}
.cartouche .content[aria-expanded=false] {
  display: none;
}

/** breadcrumb.scss ----------------*/
.breadCrumb ul {
  display: flex;
}

/** box.scss ----------------*/
:root {
  --box-color-background: var(--sld-color-background);
  --box-border-bottom: var(--sld-color-primary);
  --box-radius: var(--sld-radius-small);
  --box-elevation: var(--sld-elevation-3);
  --box-gap: var(--sld-gap-tiny);
  --box-pad: var(--sld-pad-small);
}

.box {
  min-height: 160px;
  min-width: 320px;
  background-color: var(--box-color-background);
  border-bottom: 1px solid var(--box-border-bottom);
  border-radius: var(--box-radius);
  box-shadow: var(--box-elevation);
  display: flex;
  flex-direction: column;
}
.box-content {
  flex: 1;
}
.box-button-zone {
  display: flex;
  gap: var(--box-gap);
  padding: var(--box-pad);
  text-align: right;
  justify-content: end;
}

/** backdrop.scss ----------------*/
:root {
  --backdrop-background-color: var(--sld-color-foreground-alpha-high);
}

.backdrop {
  z-index: 10000;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}
.backdrop-content {
  z-index: 10001;
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--backdrop-background-color);
  backdrop-filter: blur(5px);
  --moz-backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
}
.backdrop-content-loader {
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
}
.backdrop-content-inner {
  display: inherit;
}

/** avatar.scss ----------------*/
:root {
  --avatar-radius: var(--css-radius-small);
  --avatar-border-color: var(--sld-color-border);
}

.avatar {
  position: relative;
  border-radius: var(--avatar-radius);
  border: 1px solid var(--avatar-border-color);
  display: grid;
  place-items: center;
  overflow: hidden;
}

/** alert.scss ----------------*/
:root {
  --alert-radius: var(--sld-radius-small);
  --alert-color-border: var(--sld-color-border);
  --alert-color-background: var(--sld-color-background);
  --alert-elevation: var(--sld-elevation-4);
  --alert-pad: var(--sld-pad-small);
  --alert-gap: var(--sld-gap-small);
}

dialog.alert {
  position: relative;
  min-width: 350px;
  display: inline-block;
  border-radius: var(--alert-radius);
  border: 1px solid var(--alert-color-border);
  background-color: var(--alert-color-background);
  box-shadow: var(--alert-elevation);
  overflow: hidden;
  padding: 0;
}
dialog.alert[open=true] {
  display: none;
}
dialog.alert article.dialog-content {
  padding: var(--alert-pad);
  border-bottom: 4px solid var(--alert-color-border);
}
dialog.alert article.dialog-content header.header-bar {
  display: flex;
  align-items: center;
  padding: var(--alert-pad-small);
  gap: var(--alert-gap-small, 1rem);
}
dialog.alert article.dialog-content header.header-bar .dot {
  display: inline-block;
  border: 1px solid var(--alert-color-border);
  border-radius: var(--alert-radius);
  height: 16px;
  width: 4px;
  transform: translate(-50%, 0);
}
dialog.alert article.dialog-content header.header-bar .title {
  flex: 1;
  display: flex;
  align-items: center;
}
dialog.alert article.dialog-content header.header-bar [data-close] {
  border-radius: var(--alert-radius);
  margin: 0.25rem;
  padding: 0.25rem;
}
dialog.alert article.dialog-content footer.dialog-footer {
  display: flex;
  justify-content: flex-end;
  padding: var(--alert-pad);
  border-top: 1px solid var(--alert-color-border);
}
dialog.alert article.dialog-content footer.dialog-footer button {
  margin-left: 1rem;
}

.bg-themed-scheme-discrete {
  color: black;
  text-shadow: 0 0 0.125rem #b3b3b3;
  background-color: #ccc;
}

.bg-themed-scheme-success {
  color: white;
  text-shadow: 0 0 0.125rem #004d00;
  background-color: green;
}

.bg-themed-scheme-info {
  color: black;
  text-shadow: 0 0 0.125rem #ffd324;
  background-color: #ffdd57;
}

.bg-themed-scheme-warning {
  color: black;
  text-shadow: 0 0 0.125rem #b49104;
  background-color: #e6b905;
}

.bg-themed-scheme-alert {
  color: black;
  text-shadow: 0 0 0.125rem #cc5c00;
  background-color: #ff7300;
}

.bg-themed-scheme-error {
  color: white;
  text-shadow: 0 0 0.125rem #cc0000;
  background-color: red;
}

/** badge.scss ----------------*/
:root {
  --badge-color-border: var(--sld-color-border);
}

.badge {
  position: absolute;
  border-radius: 50%;
  border: 1px solid var(--badge-color-border);
  display: grid;
  place-items: center;
  width: 16px;
  height: 16px;
}
.badge .hidden {
  transform: scale(0, 0);
}
