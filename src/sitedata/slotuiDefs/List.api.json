{
  "moduleName": "List",
  "filePath": "src/lib/data/list/List.svelte",
  "props": [
    {
      "name": "class",
      "kind": "let",
      "description": "className off the root component",
      "type": "string | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "style",
      "kind": "let",
      "description": "css style off the root component",
      "type": "string | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "element",
      "kind": "let",
      "description": "element root HTMLDivElement props",
      "type": "null | HTMLUListElement",
      "value": "null",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": true
    },
    {
      "name": "listItems",
      "kind": "let",
      "description": "pre-formatted listItems list",
      "type": "LisItemProps[] | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": true
    },
    {
      "name": "data",
      "kind": "let",
      "description": "provided raw data, used if no listItems list is provided",
      "type": "Data[] | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "dataFieldPrimary",
      "kind": "let",
      "description": "Row from data for primary, used if props.data is provided",
      "type": "string | ((data: Data) => void) | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "dataFieldSecondary",
      "kind": "let",
      "description": "Row from data for secondary, used if props.data is provided",
      "type": "string | ((data: Data) => void) | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "dataFieldIcon",
      "kind": "let",
      "description": "Row from data for secondary, used if props.data is provided",
      "type": "string | ((data: Data) => void) | undefined",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "height",
      "kind": "let",
      "type": "string",
      "value": "'auto'",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "showIcon",
      "kind": "let",
      "type": "boolean",
      "value": "true",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "virtualize",
      "kind": "let",
      "type": "boolean",
      "value": "false",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "selectorField",
      "kind": "let",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": true,
      "constant": false,
      "reactive": false
    },
    {
      "name": "showDivider",
      "kind": "let",
      "description": "show divider between listItems",
      "type": "boolean",
      "value": "false",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "dividerProps",
      "kind": "let",
      "description": "props for Divider, if present",
      "type": "{}",
      "value": "{}",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "sorterer",
      "kind": "let",
      "description": "Sorterer component inclusion. Inferred",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "selectedDataKey",
      "kind": "let",
      "description": "set selected data by dataKey value",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "setSelectedData",
      "kind": "let",
      "description": "set selected data by data object",
      "type": "{}",
      "value": "{}",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "setSelectedItem",
      "kind": "let",
      "description": "set selected data by selectedItem object",
      "type": "{}",
      "value": "{}",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "onItemClick",
      "kind": "let",
      "type": "({}) => { }",
      "value": "({}) => { }",
      "isFunction": true,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "title",
      "kind": "let",
      "description": "@deprecated use primary title  ",
      "type": "string",
      "value": "''",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "primary",
      "kind": "let",
      "description": "displayed as H5",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "secondary",
      "kind": "let",
      "description": "secondary title",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "icon",
      "kind": "let",
      "description": "icon for the  title  zone",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "groupBy",
      "kind": "let",
      "description": "fieldName by wich we will group",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "disabled",
      "kind": "let",
      "description": "List will not be clickable and will gain opacity",
      "type": "boolean",
      "value": "false",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "density",
      "kind": "let",
      "description": "density of the list",
      "type": "'none' | 'tight' | 'default' | 'medium' | 'kind'",
      "value": "'default'",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    },
    {
      "name": "activeData",
      "kind": "let",
      "description": "binding for selectedData",
      "isFunction": false,
      "isFunctionDeclaration": false,
      "isRequired": false,
      "constant": false,
      "reactive": false
    }
  ],
  "moduleExports": [],
  "slots": [
    { "name": "__default__", "default": true, "slot_props": "{ item: any }" },
    { "name": "listFooter", "default": false, "slot_props": "{}" },
    {
      "name": "listTitle",
      "default": false,
      "fallback": "<slot name=\"title\">\r\n\t\t\t\t<ListTitle primary={primary ?? title} {secondary} {icon} />\r\n\t\t\t</slot>",
      "slot_props": "{}"
    },
    {
      "name": "title",
      "default": false,
      "fallback": "<ListTitle primary={primary ?? title} {secondary} {icon} />",
      "slot_props": "{}"
    }
  ],
  "events": [],
  "typedefs": []
}
