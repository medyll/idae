/** alert.scss -----*/ 
dialog.alert {
  position: relative;
  min-width: 350px;
  display: inline-block;
  border-radius: var(--sld-radius-small);
  border: 1px solid var(--sld-color-border);
  background-color: var(--sld-color-background);
  box-shadow: var(--box-shad-4);
  overflow: hidden;
  padding: 0;
}
dialog.alert[open=true] {
  display: none;
}
dialog.alert article.dialog-content {
  padding: var(--alert-density);
  border-bottom: 4px solid var(--sld-color-border);
}
dialog.alert article.dialog-content header.header-bar {
  display: flex;
  align-items: center;
  padding: var(--sld-pad-small);
  gap: var(--sld-gap-small, 1rem);
}
dialog.alert article.dialog-content header.header-bar .dot {
  display: inline-block;
  border: 1px solid var(--sld-color-border);
  border-radius: var(--sld-radius-small);
  height: 16px;
  width: 4px;
  transform: translate(-50%, 0);
}
dialog.alert article.dialog-content header.header-bar .title {
  flex: 1;
  display: flex;
  align-items: center;
}
dialog.alert article.dialog-content header.header-bar [data-close] {
  border-radius: var(--sld-radius-small);
  margin: 0.25rem;
  padding: 0.25rem;
}
dialog.alert article.dialog-content footer.dialog-footer {
  display: flex;
  justify-content: flex-end;
  padding: var(--sld-pad-small);
  border-top: 1px solid var(--sld-color-border);
}
dialog.alert article.dialog-content footer.dialog-footer button {
  margin-left: 1rem;
}

.bg-themed-scheme-discrete {
  color: black;
  text-shadow: 0 0 0.125rem #b3b3b3;
  background-color: #ccc;
}

.bg-themed-scheme-success {
  color: white;
  text-shadow: 0 0 0.125rem #004d00;
  background-color: green;
}

.bg-themed-scheme-info {
  color: black;
  text-shadow: 0 0 0.125rem #ffd324;
  background-color: #ffdd57;
}

.bg-themed-scheme-warning {
  color: black;
  text-shadow: 0 0 0.125rem #b49104;
  background-color: #e6b905;
}

.bg-themed-scheme-alert {
  color: black;
  text-shadow: 0 0 0.125rem #cc5c00;
  background-color: #ff7300;
}

.bg-themed-scheme-error {
  color: white;
  text-shadow: 0 0 0.125rem #cc0000;
  background-color: red;
}
/** avatar.scss -----*/ 
.avatar {
  position: relative;
  border-radius: var(--css-avatar-radius, 20%);
  border: 1px solid var(--css-avatar-border-color, var(--sld-color-border));
  display: grid;
  place-items: center;
  overflow: hidden;
}
/** backdrop.scss -----*/ 
.backdrop {
  z-index: 10000;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}
.backdrop .backdropContent {
  z-index: 10001;
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--backdrop-background-color, var(--sld-color-foreground-alpha-high));
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
}
/** badge.scss -----*/ 
.badge {
  position: absolute;
  border-radius: 50%;
  border: 1px solid red;
  display: grid;
  place-items: center;
  width: 16px;
  height: 16px;
}
.badge .hidden {
  transform: scale(0, 0);
}
/** box.scss -----*/ 
.boxRoot {
  min-height: 160px;
  min-width: 320px;
  background-color: var(--sld-color-background);
  border-bottom: 1px solid var(--sld-color-primary);
  border-radius: var(--sld-radius-small);
  display: inline-block;
}
.boxRoot .boxButtonZone {
  display: flex;
  gap: --theme-gap-tiny;
  text-align: right;
  padding: 0.5rem;
  justify-content: end;
}
/** breadcrumb.scss -----*/ 
.breadCrumb ul {
  display: flex;
}
/** cartouche.scss -----*/ 
:root .cartoucheControl {
  --sld-control-height: 69px;
}

.cartouche {
  border-radius: var(--sld-radius-small);
  overflow: hidden;
}
.cartouche[data-bordered=true] {
  border: 1px solid var(--sld-color-foreground-alpha-high);
}
.cartouche.stacked {
  border-radius: 0;
}
.cartouche.stacked:first-child {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}
.cartouche.stacked:last-child {
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}
.cartouche .control {
  display: flex;
  gap: 8px;
  background-color: var(--sld-color-background);
  align-items: center;
  padding: 1rem 0.25rem;
}
.cartouche .control:hover {
  background-color: var(--sld-color-background-darken-low);
}
.cartouche .control .controlIcon {
  padding: 0 0.5rem;
}
.cartouche .control .controlLabel {
  cursor: pointer;
  padding: 0 0.5rem;
}
.cartouche .control .chevron {
  cursor: pointer;
}
.cartouche .control .divider {
  border-bottom: 1px solid var(--sld-color-foreground-alpha-mid);
}
.cartouche .content {
  overflow: hidden;
  background-color: var(--sld-color-background);
  content-visibility: auto;
}
.cartouche .content[aria-expanded=false] {
  display: none;
}
.cartouche .content[aria-expanded=true] {
  border-top: 1px solid var(--sld-color-foreground-alpha-high);
}
/** chipper.scss -----*/ 
.chipper {
  position: relative;
}
.chipper .chipper-content {
  padding: 0.5rem;
}
.chipper .chipper-chip {
  display: block;
  position: absolute;
  z-index: 2;
  border-radius: var(--sld-radius-large);
  transition: all 0.25s;
  max-height: 100%;
  background-color: var(--css-button-chip-color, var(--sld-color-primary));
}
.chipper .chipper-chip[data-position=left] {
  top: 2px;
  left: 2px;
  height: 100%;
  width: 3px;
}
.chipper .chipper-chip[data-position=right] {
  top: 2px;
  right: 2px;
  height: 130px;
  width: 3px;
}
.chipper .chipper-chip[data-position=top] {
  height: 4px;
  top: 2px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
}
.chipper .chipper-chip[data-position=bottom] {
  height: 4px;
  bottom: 2px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
}
.chipper .chipper-chip .defaultChip,
.chipper .chipper-chip [slot=chipperChip] {
  display: block;
  height: 100%;
  width: 100%;
  min-height: 3px;
  background-color: var(--css-button-chip-color, var(--sld-color-primary));
}
/** content-switcher.scss -----*/ 
.content-switcher {
  min-width: auto;
  max-width: 100%;
  gap: 0.5rem;
  max-width: 100%;
  overflow: var(--sld-contentswitcher-overflow, hidden);
  position: relative;
}
.content-switcher .content {
  position: relative;
  overflow: var(--sld-contentswitcher-overflow, hidden);
  min-width: auto;
  flex: 1 1 auto;
}
/** divider.scss -----*/ 
hr {
  border: none;
  border-top: 1px solid var(--sld-color-border, var(--sld-color-foreground-alpha-high, #333));
  background-color: var(--sld-color-border, var(--sld-color-foreground-alpha-mid, #333));
  display: block;
}
hr.vertical {
  width: 1px;
  border-right: 1px solid var(--sld-color-border, var(--sld-color-foreground-alpha-mid, #333));
}
/** icon.scss -----*/ 
.icon {
  transition: all 0.25s;
}

.rotate {
  animation: spinner-frames 3s infinite linear;
}

@keyframes spinner-frames {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/** title-bar.scss -----*/ 
.title-bar {
  border-bottom: 1px solid var(--sld-color-border);
}
.title-bar .title {
  min-height: 34px;
}
/** button-action.scss -----*/ 
.button-action {
  display: inline-flex;
  position: relative;
}
.button-action .chevron {
  flex-shrink: 1;
}
/** button.scss -----*/ 
button,
.button {
  --sld-button-font-size: inherit;
  --sld-button-radius: var(--sld-radius-small);
  --sld-button-border-color: transparent;
  --sld-button-border-width: 1px;
  --sld-button-text-align: center;
  --sld-button-padding: 0;
  --sld-button-background: var(--sld-color-primary);
  --sld-button-hover-border-color: var(--sld-color-primary);
  --sld-button-active-border-color: var(--sld-color-secondary);
  --sld-button-focus-border-color: var(--sld-color-primary);
  --sld-button-hover-shadow: var(--box-shad-3);
  --sld-button-active-shadow: var(--box-shad-4);
  --sld-button-focus-shadow: var(--box-shad-4);
}

.actionButton {
  height: 100%;
  width: var(--w-tiny);
  cursor: pointer;
}
.actionButton:hover {
  background-color: rgba(255, 255, 255, 0.5);
}

.button,
button,
input[type=button],
input[type=submit] {
  min-height: 1.5rem;
  text-align: var(--sld-button-text-align);
  font-size: var(--sld-button-font-size);
  border-radius: var(--sld-button-radius);
  color: var(--sld-color-foreground);
  padding: var(--sld-button-padding);
  display: inline-flex;
  align-items: center;
  transition: all 0.1s;
  position: relative;
  overflow: hidden;
  cursor: default;
  border: 1px solid transparent;
  transition: 0.4 ease all;
}
.button.height-tiny, .button[data-height=tiny],
button.height-tiny,
button[data-height=tiny],
input[type=button].height-tiny,
input[type=button][data-height=tiny],
input[type=submit].height-tiny,
input[type=submit][data-height=tiny] {
  height: calc(0.5rem - var(--sld-border-bottom-size, 2px));
}
.button.height-small, .button[data-height=small],
button.height-small,
button[data-height=small],
input[type=button].height-small,
input[type=button][data-height=small],
input[type=submit].height-small,
input[type=submit][data-height=small] {
  height: calc(1.9rem - var(--sld-border-bottom-size, 2px));
}
.button.height-medium, .button[data-height=default],
button.height-medium,
button[data-height=default],
input[type=button].height-medium,
input[type=button][data-height=default],
input[type=submit].height-medium,
input[type=submit][data-height=default] {
  height: calc(2.5rem - var(--sld-border-bottom-size, 2px));
}
.button.height-large, .button[data-height=large],
button.height-large,
button[data-height=large],
input[type=button].height-large,
input[type=button][data-height=large],
input[type=submit].height-large,
input[type=submit][data-height=large] {
  height: calc(4rem - var(--sld-border-bottom-size, 2px));
}
.button[borderless=true],
button[borderless=true],
input[type=button][borderless=true],
input[type=submit][borderless=true] {
  border: 0px solid none;
}
.button.wt, .button[data-width=tiny],
button.wt,
button[data-width=tiny],
input[type=button].wt,
input[type=button][data-width=tiny],
input[type=submit].wt,
input[type=submit][data-width=tiny] {
  /** size tiny */
  width: 2rem;
}
.button.ws, .button[data-width=small],
button.ws,
button[data-width=small],
input[type=button].ws,
input[type=button][data-width=small],
input[type=submit].ws,
input[type=submit][data-width=small] {
  /** size small */
  width: 6rem;
}
.button.wm, .button[data-width=medium],
button.wm,
button[data-width=medium],
input[type=button].wm,
input[type=button][data-width=medium],
input[type=submit].wm,
input[type=submit][data-width=medium] {
  /** size medium */
  width: 8rem;
}
.button.wd, .button[data-width=default],
button.wd,
button[data-width=default],
input[type=button].wd,
input[type=button][data-width=default],
input[type=submit].wd,
input[type=submit][data-width=default] {
  /** size default */
  width: 12rem;
}
.button.wl, .button[data-width=large],
button.wl,
button[data-width=large],
input[type=button].wl,
input[type=button][data-width=large],
input[type=submit].wl,
input[type=submit][data-width=large] {
  width: 16rem;
}
.button.wf, .button[data-width=full],
button.wf,
button[data-width=full],
input[type=button].wf,
input[type=button][data-width=full],
input[type=submit].wf,
input[type=submit][data-width=full] {
  width: 100%;
}
.button.wa, .button.width-auto, .button[data-width=auto],
button.wa,
button.width-auto,
button[data-width=auto],
input[type=button].wa,
input[type=button].width-auto,
input[type=button][data-width=auto],
input[type=submit].wa,
input[type=submit].width-auto,
input[type=submit][data-width=auto] {
  width: auto;
}
.button.dense-small,
button.dense-small,
input[type=button].dense-small,
input[type=submit].dense-small {
  min-height: 1rem;
}
.button.dense-default,
button.dense-default,
input[type=button].dense-default,
input[type=submit].dense-default {
  min-height: 1.5rem;
}
.button.dense-medium,
button.dense-medium,
input[type=button].dense-medium,
input[type=submit].dense-medium {
  min-height: 2rem;
}
.button.dense-kind,
button.dense-kind,
input[type=button].dense-kind,
input[type=submit].dense-kind {
  min-height: 3rem;
}
.button.height-tiny, .button[data-height=tiny],
button.height-tiny,
button[data-height=tiny],
input[type=button].height-tiny,
input[type=button][data-height=tiny],
input[type=submit].height-tiny,
input[type=submit][data-height=tiny] {
  height: calc(0.5rem - var(--sld-border-bottom-size, 2px));
}
.button.height-small, .button[data-height=small],
button.height-small,
button[data-height=small],
input[type=button].height-small,
input[type=button][data-height=small],
input[type=submit].height-small,
input[type=submit][data-height=small] {
  height: calc(1.9rem - var(--sld-border-bottom-size, 2px));
}
.button.height-medium, .button[data-height=default],
button.height-medium,
button[data-height=default],
input[type=button].height-medium,
input[type=button][data-height=default],
input[type=submit].height-medium,
input[type=submit][data-height=default] {
  height: calc(2.5rem - var(--sld-border-bottom-size, 2px));
}
.button.height-large, .button[data-height=large],
button.height-large,
button[data-height=large],
input[type=button].height-large,
input[type=button][data-height=large],
input[type=submit].height-large,
input[type=submit][data-height=large] {
  height: calc(4rem - var(--sld-border-bottom-size, 2px));
}
.button[borderless=true],
button[borderless=true],
input[type=button][borderless=true],
input[type=submit][borderless=true] {
  border: 0px solid none;
}
.button[disabled], .button.disabled,
button[disabled],
button.disabled,
input[type=button][disabled],
input[type=button].disabled,
input[type=submit][disabled],
input[type=submit].disabled {
  color: var(--color-gray-800);
  border-color: none;
  opacity: 0.4;
}
.button:active,
button:active,
input[type=button]:active,
input[type=submit]:active {
  box-shadow: var(--sld-button-active-shadow);
}
.button[selected=true],
.button .selected,
button[selected=true],
button .selected,
input[type=button][selected=true],
input[type=button] .selected,
input[type=submit][selected=true],
input[type=submit] .selected {
  box-shadow: var(--box-shad-3);
  border: 0.5px solid var(--sld-color-paper-alpha-low);
  background-color: transparent;
  font-weight: bold;
}
.button[bordered=true], .button.bordered,
button[bordered=true],
button.bordered,
input[type=button][bordered=true],
input[type=button].bordered,
input[type=submit][bordered=true],
input[type=submit].bordered {
  color: var(--sld-color-foreground);
  border: var(--sld-button-border-width) solid var(--sld-button-border-color);
  box-shadow: var(--box-shad-1);
  background-color: var(--sld-color-background);
}
.button[bordered=true]:hover, .button.bordered:hover,
button[bordered=true]:hover,
button.bordered:hover,
input[type=button][bordered=true]:hover,
input[type=button].bordered:hover,
input[type=submit][bordered=true]:hover,
input[type=submit].bordered:hover {
  border: 1px solid var(--sld-color-primary);
  box-shadow: var(--sld-button-hover-shadow);
}
.button[bordered=true]:focus, .button[bordered=true]:active, .button.bordered:focus, .button.bordered:active,
button[bordered=true]:focus,
button[bordered=true]:active,
button.bordered:focus,
button.bordered:active,
input[type=button][bordered=true]:focus,
input[type=button][bordered=true]:active,
input[type=button].bordered:focus,
input[type=button].bordered:active,
input[type=submit][bordered=true]:focus,
input[type=submit][bordered=true]:active,
input[type=submit].bordered:focus,
input[type=submit].bordered:active {
  border: 1px solid var(--sld-button-active-border-color) !important;
  box-shadow: var(--sld-button-active-shadow);
}
.button[contained=true], .button.contained,
button[contained=true],
button.contained,
input[type=button][contained=true],
input[type=button].contained,
input[type=submit][contained=true],
input[type=submit].contained {
  border: var(--sld-button-border-width) solid var(--sld-button-border-color);
  color: white;
  background-color: var(--sld-button-background);
  background-clip: padding-box;
  box-shadow: var(--box-shad-1);
}
.button[contained=true]:hover, .button.contained:hover,
button[contained=true]:hover,
button.contained:hover,
input[type=button][contained=true]:hover,
input[type=button].contained:hover,
input[type=submit][contained=true]:hover,
input[type=submit].contained:hover {
  background-color: var(--sld-color-secondary);
  color: var(--sld-color-primary);
}
.button[contained=true]:focus, .button[contained=true]:active, .button.contained:focus, .button.contained:active,
button[contained=true]:focus,
button[contained=true]:active,
button.contained:focus,
button.contained:active,
input[type=button][contained=true]:focus,
input[type=button][contained=true]:active,
input[type=button].contained:focus,
input[type=button].contained:active,
input[type=submit][contained=true]:focus,
input[type=submit][contained=true]:active,
input[type=submit].contained:focus,
input[type=submit].contained:active {
  background-color: var(--sld-color-tertiary);
  color: var(--sld-color-secondary);
  box-shadow: var(--sld-button-active-shadow);
}
.button[link=true], .button.link,
button[link=true],
button.link,
input[type=button][link=true],
input[type=button].link,
input[type=submit][link=true],
input[type=submit].link {
  color: var(--sld-color-primary);
  text-decoration: underline;
  text-underline-offset: 0.35rem;
  background-color: transparent;
  cursor: pointer;
}
.button[link=true]:hover, .button.link:hover,
button[link=true]:hover,
button.link:hover,
input[type=button][link=true]:hover,
input[type=button].link:hover,
input[type=submit][link=true]:hover,
input[type=submit].link:hover {
  text-decoration: underline;
}
.button[naked=true], .button.naked,
button[naked=true],
button.naked,
input[type=button][naked=true],
input[type=button].naked,
input[type=submit][naked=true],
input[type=submit].naked {
  color: inherit;
  background-color: transparent !important;
  border: 0.5px solid transparent;
  cursor: pointer;
}
.button[naked=true]:hover, .button.naked:hover,
button[naked=true]:hover,
button.naked:hover,
input[type=button][naked=true]:hover,
input[type=button].naked:hover,
input[type=submit][naked=true]:hover,
input[type=submit].naked:hover {
  box-shadow: var(--sld-button-focus-shadow);
}
.button[naked=true]:active, .button[naked=true]:focus, .button.naked:active, .button.naked:focus,
button[naked=true]:active,
button[naked=true]:focus,
button.naked:active,
button.naked:focus,
input[type=button][naked=true]:active,
input[type=button][naked=true]:focus,
input[type=button].naked:active,
input[type=button].naked:focus,
input[type=submit][naked=true]:active,
input[type=submit][naked=true]:focus,
input[type=submit].naked:active,
input[type=submit].naked:focus {
  background-color: transparent !important;
  border: 0.5px solid transparent;
  color: inherit;
}
.button.loading .loadingButtonZone,
button.loading .loadingButtonZone,
input[type=button].loading .loadingButtonZone,
input[type=submit].loading .loadingButtonZone {
  z-index: 10;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: space-around;
  background-color: var(--css-background-color, var(--sld-color-paper));
  color: var(--css-background-color, var(--sld-color-secondary));
  -webkit-backdrop-filter-backdrop-filter: blur(3px);
}
.button .buttonStart,
button .buttonStart,
input[type=button] .buttonStart,
input[type=submit] .buttonStart {
  padding: 0 0.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
}
.button .central,
button .central,
input[type=button] .central,
input[type=submit] .central {
  flex: 1;
  min-width: 0;
  padding: 0 0.5rem;
  text-align: var(--sld-button-text-align);
  display: block;
}
.button .action,
button .action,
input[type=button] .action,
input[type=submit] .action {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: var(--w-tiny);
  padding: 0 0.5rem;
  cursor: pointer;
}
.button .action:hover,
button .action:hover,
input[type=button] .action:hover,
input[type=submit] .action:hover {
  background-color: rgba(255, 255, 255, 0.5);
}
.button .chip,
button .chip,
input[type=button] .chip,
input[type=submit] .chip {
  position: absolute;
  z-index: 2;
  height: 3px;
  left: 50%;
  transform: translate(-50%, 0);
  width: 50%;
  background-color: var(--css-button-chip-color, var(--sld-color-primary));
  border-radius: var(--sld-radius-large);
  bottom: 2px;
}
.button .loadingButtonZone,
button .loadingButtonZone,
input[type=button] .loadingButtonZone,
input[type=submit] .loadingButtonZone {
  z-index: 10;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  height: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
/** ButtonMenu.scss -----*/ 
.buttonActionRoot {
  display: inline-block;
  position: relative;
  width: 64px;
}

.buttonText {
  text-align: center;
}

.button {
  display: block;
  width: 64px;
}
.button:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

.action {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  right: 0;
  background-color: rgba(255, 255, 255, 0.1);
  width: 30%;
  padding: 0.5rem;
}
.action:hover {
  background-color: rgba(255, 255, 255, 0.5);
}
/** checkbox.scss -----*/ 
:root .checkbox {
  --sld-checkbox-background: var(--sld-color-background-alpha-high);
  --sld-checkbox-background-hover: var(--sld-color-primary);
  --sld-checkbox-background-checked: var(--sld-color-primary);
  --sld-checkbox-border-width: 2px;
  --sld-checkbox-border-color: var(--sld-color-foreground-alpha-mid);
  --sld-checkbox-border-bottom-width: 2px;
  --sld-checkbox-border-bottom-color: var(--sld-color-primary-darker, rgb(208, 191, 151));
  --sld-checkbox-radius: var(--sld-radius-small);
  --sld-checkbox-padding: 0 0.5rem;
  --sld-checkbox-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.1);
}

.checkbox {
  min-height: 1.5rem;
  appearance: none;
  outline: none;
  border: var(--sld-checkbox-border-width) solid var(--sld-checkbox-border-color);
  border-radius: var(--sld-checkbox-radius);
  background-clip: padding-box;
  background-color: var(--sld-checkbox-background);
  width: 1.7rem;
  height: 1.7rem;
  aspect-ratio: 1/1;
  padding: 0;
  margin: 0;
}
.checkbox:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-color-primary-alpha-low);
}
.checkbox.dense-small {
  min-height: 1rem;
}
.checkbox.dense-default {
  min-height: 1.5rem;
}
.checkbox.dense-medium {
  min-height: 2rem;
}
.checkbox.dense-kind {
  min-height: 3rem;
}
.checkbox:focus-visible {
  box-shadow: var(--sld-checkbox-shadow);
}
.checkbox:hover {
  background-color: var(--sld-color-primary-darken-mid);
}
.checkbox:active + .svg {
  color: var(--sld-color-secondary);
}
.checkbox:disabled {
  border-color: #ccc;
  background-color: #ededed;
  pointer-events: none;
}
.checkbox:checked, .checkbox:indeterminate {
  background-color: var(--sld-checkbox-background-checked);
}
.checkbox:checked:hover, .checkbox:indeterminate:hover {
  background-color: var(--sld-checkbox-background-hover);
}
.checkbox:checked:active, .checkbox:checked:focus, .checkbox:indeterminate:active, .checkbox:indeterminate:focus {
  background-color: var(--sld-checkbox-background-checked);
}
.checkbox:checked:disabled, .checkbox:checked[disabled], .checkbox:indeterminate:disabled, .checkbox:indeterminate[disabled] {
  border-color: #ccc;
  background-color: #ededed;
  pointer-events: none;
}
.checkbox:checked:disabled + .svg, .checkbox:checked[disabled] + .svg, .checkbox:indeterminate:disabled + .svg, .checkbox:indeterminate[disabled] + .svg {
  color: #ededed;
}

.checkbox-root {
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  user-select: none;
  min-block-size: 32px;
  gap: 0.5rem;
}
.checkbox-root.disabled > span {
  color: #ededed;
}
.checkbox-root .checkbox-container {
  display: inline-flex;
  justify-content: center;
  position: relative;
}
.checkbox-root .checkbox-container .svg {
  position: absolute;
  color: white;
  height: 100%;
  width: 100%;
  padding: 3px;
}
.checkbox-root .checkbox-container .svg path {
  transform-origin: center;
}
.checkbox-root .checkbox-container .svg path-check {
  transform: scale(1.1);
  fill: white;
}
.checkbox-root .checkbox-container .svg path-indeterminate {
  transform: scale(1.1);
}
/** progress.scss -----*/ 
.progress {
  border: 1px solid var(--sld-color-secondary-alpha-mid);
  border-radius: var(--sld-radius-tiny);
  padding: 1px;
}
.progress .progress-gouge {
  background: var(--sld-color-primary);
  border-radius: var(--sld-radius-tiny);
  border: 1px solid var(--sld-color-primary-alpha);
  transition-delay: 250ms;
  transition: all 0.25s;
  max-width: 100%;
}
/** rating.scss -----*/ 
.rating {
  display: flex;
  flex-direction: var(--direction);
  gap: 0.25rem;
}
/** select.scss -----*/ 
.select {
  background-color: var(--sld-color-background);
  height: 160px;
  width: 160px;
  border-radius: var(--sld-radius-small);
}
/** slider.scss -----*/ 
.slider {
  background-color: var(--sld-color-background);
  position: relative;
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  min-height: 1.5rem;
}
.slider.dense-small {
  min-height: 1rem;
}
.slider.dense-default {
  min-height: 1.5rem;
}
.slider.dense-medium {
  min-height: 2rem;
}
.slider.dense-kind {
  min-height: 3rem;
}
.slider .slider-gouge {
  height: 4px;
  width: 100%;
  border-radius: 10px;
  background-color: var(--sld-color-secondary);
}
.slider .slider-gouge-selected {
  height: 4px;
  border-radius: 10px;
  background-color: var(--sld-color-primary);
}
.slider .slider-thumb {
  top: 0;
  aspect-ratio: 1/1;
  height: 100%;
  transform: translateY(50%);
  background-color: var(--sld-color-primary);
  position: absolute;
  border: 4px solid var(--sld-color-primary-alpha-high);
  border-radius: 50%;
  display: inline-block;
}
/** stepper.scss -----*/ 
.stepper {
  display: flex;
}
.stepper.vertical {
  flex-direction: column;
}
.stepper .step {
  padding: 0.5rem;
  background-color: red;
  border-radius: var(--sld-radius-med);
  margin-top: 10px;
}
.stepper .step.active {
  color: blue;
}
/** switch.scss -----*/ 
.switch {
  --sld-switch-border-radius: var(--sld-radius-large);
  --sld-switch-background: var(--sld-color-paper);
  --sld-switch-checked-background: var(--sld-color-primary);
}

label {
  background-color: transparent;
  border: none;
  padding: 0;
  min-width: 42px;
}

.switch {
  display: inline-block;
  position: relative;
  border-radius: var(--sld-switch-border-radius);
  overflow: hidden;
  cursor: pointer;
}
.switch :hover .switchHandle {
  background-color: var(--sld-color-secondary) !important;
}
.switch :has(input:checked) {
  background-color: var(--sld-switch-checked-background);
}
.switch .switchGutter {
  border: 1px solid var(--sld-color-primary-alpha-low);
  border-radius: var(--sld-switch-border-radius);
  padding: 3px;
  background-color: var(--sld-switch-background);
}
.switch .switchGutter input {
  position: absolute;
  width: 0;
  height: 0;
  top: -50px;
  left: -50px;
}
.switch .switchGutter input:checked + .switchHandle {
  left: calc(100% - 16px);
  border-color: var(--sld-color-secondary-alpha-mid);
  box-shadow: var(--box-shad-3);
  background-color: var(--sld-color-background);
}
.switch .switchGutter input + .switchHandle {
  position: relative;
  display: block;
  width: 16px;
  height: 16px;
  background: white;
  border-radius: var(--sld-switch-border-radius);
  left: 0;
  transition: all 0.1s;
  background-color: var(--sld-color-primary);
  border: 1px solid var(--sld-color-secondary-alpha-low);
  box-shadow: var(--box-shad-1);
}
.switch .switchGutter .test {
  ratios: 2 3 aspect(7);
  box: width(1px, 3) height(1px);
  border: radius() shadow() top(radius());
  gutters: gap() padding();
}
/** textfield.scss -----*/ 
:root input {
  --sld-input-background: var(--sld-color-background-alpha-high);
  --sld-input-border-width: 1px;
  --sld-input-border-color: var(--sld-color-foreground-alpha-mid);
  --sld-input-border-bottom-width: 2px;
  --sld-input-border-bottom-color: var(--sld-color-primary-darker, rgb(208, 191, 151));
  --sld-input-radius: var(--sld-radius-small);
  --sld-input-padding: 0 0.5rem;
  --sld-input-shadow: inset 0px 0px 3px 1px rgba(51, 51, 51, 0.1);
}

input {
  border: var(--sld-input-border-width) solid var(--sld-input-border-color);
  border-bottom: var(--sld-input-border-bottom-width) solid var(--sld-input-border-bottom-color);
  border-radius: var(--sld-input-radius);
  padding: var(--sld-input-padding);
  box-shadow: var(--sld-input-shadow);
  background-color: var(--sld-input-background);
  color: var(--sld-color-foreground);
}
input [error] {
  border-bottom: red;
}
input.height-tiny, input[data-height=tiny] {
  height: calc(0.5rem - var(--sld-border-bottom-size, 2px));
}
input.height-small, input[data-height=small] {
  height: calc(1.9rem - var(--sld-border-bottom-size, 2px));
}
input.height-medium, input[data-height=default] {
  height: calc(2.5rem - var(--sld-border-bottom-size, 2px));
}
input.height-large, input[data-height=large] {
  height: calc(4rem - var(--sld-border-bottom-size, 2px));
}
input[borderless=true] {
  border: 0px solid none;
}
input.wt, input[data-width=tiny] {
  /** size tiny */
  width: 2rem;
}
input.ws, input[data-width=small] {
  /** size small */
  width: 6rem;
}
input.wm, input[data-width=medium] {
  /** size medium */
  width: 8rem;
}
input.wd, input[data-width=default] {
  /** size default */
  width: 12rem;
}
input.wl, input[data-width=large] {
  width: 16rem;
}
input.wf, input[data-width=full] {
  width: 100%;
}
input.wa, input.width-auto, input[data-width=auto] {
  width: auto;
}
input:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-color-primary-alpha-low);
}

.inputStart {
  position: absolute;
  height: 100%;
  max-height: 100%;
  width: 24px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: var(--sld-input-radius, var(--sld-radius-small));
}

.inputEnd {
  position: absolute;
  right: 0;
  height: 100%;
  max-height: 100%;
  width: 24px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem;
  border-radius: var(--sld-input-radius, var(--sld-radius-small));
}
/** datalist.scss -----*/ 
.dataList {
  height: 100%;
  position: relative;
}

.datalist-head {
  margin: 0.5rem 0;
  align-items: stretch;
  height: 32px;
  z-index: 100;
  background-color: var(--sld-color-paper-alpha-low);
  backdrop-filter: blur(20px);
  border-radius: var(--sld-radius-tiny);
  box-shadow: var(--box-shad-1);
  border: 1px solid var(--sld-color-border);
}
.datalist-head .dataListCell {
  display: flex;
  align-items: stretch;
  overflow: hidden;
  border-right: 1px solid var(--sld-color-border);
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.datalist-head .dataListCell:last-of-type {
  border-right: 1px solid transparent;
}
.datalist-head .dataListCell[data-sortable=true] {
  cursor: pointer;
}
.datalist-head .dataListCell[data-sortable=true]:hover {
  background-color: var(--sld-color-primary-alpha);
}
.datalist-head .dataListCell .cellHeader {
  display: flex;
  align-items: center;
  min-width: 0;
  width: 100%;
}
.datalist-head .dataListCell .cellHeader .cellHeaderContent {
  flex: 1;
  overflow: hidden;
  padding: 0 8px;
}
.dataListRow {
  border-bottom: 1px solid var(--sld-color-border);
  /* border-radius: var(--sld-radius-small);
  		margin: 0.25rem 0; */
}
.dataListRow:last-of-type {
  border-bottom: 1px solid transparent;
}
.dataListRow:hover {
  background-color: var(--sld-color-paper);
}
.dataListRow[data-selected=true] {
  background-color: var(--sld-color-primary);
}
.dataListRow[data-selected=true] .dataListCell {
  color: white;
}
.dataListRow .dataListCell {
  padding: 0.5rem 0.5rem;
  color: var(--sld-color-foreground);
  border-right: 1px solid var(--sld-color-border);
}
.dataListRow .dataListCell:last-of-type {
  border-right: 1px solid transparent;
}
.dataListRow .dataListCell[data-noWrap=true] {
  display: box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  /* display: -webkit-box;
  		-webkit-line-clamp: 1;
  		-webkit-box-orient: vertical; */
}
/** list.scss -----*/ 
ul.listRoot {
  --sld-list-padding: 0;
  --sld-list-item-padding: 0;
  --sld-list-item-radius: var(--sld-radius-small);
  --sld-list-item-selected-background: var(--sld-selected-background-color);
}

ul.listRoot {
  display: flex;
  flex-direction: column;
  align-items: end;
  padding: var(--sld-list-padding);
  gap: 2px;
}
ul.listRoot:focus {
  outline: 0;
  outline-offset: -4px;
}

li.listItemTitle,
li.listItem {
  display: flex;
  align-items: center;
  position: relative;
  border-radius: var(--sld-list-item-radius);
  width: 100%;
  height: 36px;
  min-height: 36px;
  border: 1px solid transparent;
  align-self: flex-start;
}
li.listItemTitle.density-none, li.listItemTitle[data-density=none],
li.listItem.density-none,
li.listItem[data-density=none] {
  padding: 0;
}
li.listItemTitle.density-tight, li.listItemTitle[data-density=tight],
li.listItem.density-tight,
li.listItem[data-density=tight] {
  padding: 0.5rem auto;
}
li.listItemTitle.density-small, li.listItemTitle[data-density=small],
li.listItem.density-small,
li.listItem[data-density=small] {
  padding: 0.75rem auto;
}
li.listItemTitle.density-default, li.listItemTitle[data-density=default],
li.listItem.density-default,
li.listItem[data-density=default] {
  padding: 1rem auto;
}
li.listItemTitle.density-kind, li.listItemTitle[data-density=kind],
li.listItem.density-kind,
li.listItem[data-density=kind] {
  padding: 1.5rem auto;
}
li.listItemTitle.density-unset, li.listItemTitle[data-density=unset],
li.listItem.density-unset,
li.listItem[data-density=unset] {
  padding: auto;
}
li.listItemTitle .listItemContent,
li.listItem .listItemContent {
  flex: 1;
  min-width: auto;
  overflow: hidden;
  padding: 0;
  padding-left: 1rem;
}
li.listItemTitle .listItemContent [slot=listItemPrimary],
li.listItem .listItemContent [slot=listItemPrimary] {
  text-overflow: ellipsis;
  display: block;
  width: 100%;
  overflow: hidden;
}
li.listItemTitle .listItemContent [slot=listItemSecondary],
li.listItem .listItemContent [slot=listItemSecondary] {
  opacity: 0.8;
  text-overflow: ellipsis;
  display: block;
  width: 100%;
  overflow: hidden;
}
li.listItemTitle [slot=listItemAction],
li.listItem [slot=listItemAction] {
  padding: 0 0.5rem;
}
li.listItemTitle [slot=listItemIcon],
li.listItem [slot=listItemIcon] {
  text-align: center;
  width: 2rem;
  min-width: 2rem;
  overflow: hidden;
  opacity: 0.8;
}

li.listItemTitle {
  position: sticky;
  margin-top: 0px !important;
  top: 0px;
  z-index: 1;
}

[slot=listFooter] {
  position: sticky;
  margin-bottom: 0px !important;
  bottom: 0px;
  background-color: var(--sld-color-background-alpha-low);
  -webkit-backdrop-filter: blur(20px);
  backdrop-filter: blur(20px);
  z-index: 1;
}

li.listItem:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-color-primary-alpha-low);
}
li.listItem.selected, li.listItem[data-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
li.listItem.selected .listItemChip,
li.listItem.selected .menuItemChip, li.listItem[data-selected=true] .listItemChip,
li.listItem[data-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
li.listItem.density-none, li.listItem[data-density=none] {
  padding: 0;
}
li.listItem.density-tight, li.listItem[data-density=tight] {
  padding: 0.5rem auto;
}
li.listItem.density-small, li.listItem[data-density=small] {
  padding: 0.75rem auto;
}
li.listItem.density-default, li.listItem[data-density=default] {
  padding: 1rem auto;
}
li.listItem.density-kind, li.listItem[data-density=kind] {
  padding: 1.5rem auto;
}
li.listItem.density-unset, li.listItem[data-density=unset] {
  padding: auto;
}
li.listItem.selected .listItemChip, li.listItem[data-selected=true] .listItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
/** loader.scss -----*/ 
.loader {
  position: absolute;
  top: 0;
  background-color: var(--sld-color-background-alpha-mid);
  height: 100%;
  min-width: 128px;
  max-width: 100%;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  left: 50%;
  transform: translate(-50%, 0);
}
.loader .loader-box {
  box-shadow: var(--box-shad-1);
  border-radius: var(--sld-radius-tiny);
  border: 1px solid var(--sld-color-foreground-alpha-high);
  padding: 1rem 0;
  min-width: 128px;
  width: 100%;
  margin: 1rem;
  text-align: center;
  background-color: var(--sld-color-background-alpha-mid);
  display: flex;
  flex-direction: column;
  align-items: center;
}
.loader .loader-box .loader-message {
  border-radius: var(--sld-radius-small);
  border-bottom: 1px solid;
  border-color: var(--sld-color-primary);
  padding: var(--box-density-1) var(--box-density-2);
  display: inline-block;
  box-shadow: var(--box-shad-1);
}
/** drawer.scss -----*/ 
.drawer {
  color: var(--css-drawer-color, inherit);
  background-color: var(--sld-drawer-bg-color, var(--sld-color-paper-alpha-low));
  backdrop-filter: var(--sld-drawer-backdrop-blur, blur(0px));
  z-index: 3000;
  box-shadow: var(--box-shad-3);
  border-left: 1px solid var(--sld-drawer-border-color, var(--sld-color-primary-alpha));
  overflow: visible;
  display: flex;
  flex-direction: column;
  transition: all 0.1s;
}
.drawer .opener {
  position: absolute;
  z-index: 8600;
}
.drawer .header {
  min-height: 48px;
  display: flex;
  align-items: center;
}
.drawer .header .title {
  font-size: large;
}
.drawer .content {
  flex: 1;
  position: relative;
}
/** tabs.scss -----*/ 
.tabsRoot {
  position: relative;
  display: flex;
}
.tabsRoot[data-orientation=horizontal] ul {
  flex-direction: column;
}
.tabsRoot[data-orientation=vertical] {
  flex-direction: column;
}

.tabsNav {
  padding: 0.25rem 0;
  border-bottom: 1px solid var(--sld-tabs-nav-border-color, var(--sld-color-primary-alpha-high));
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
}
.tabsNav[data-orientation=horizontal] {
  flex-direction: column;
}
.tabsNav .tabsRail {
  display: flex;
  flex: 1;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
}
.tabsNav .tabsRail > div {
  padding: var(--box-density-preset-small);
  min-width: 48px;
  cursor: pointer;
}
.tabsNav .tabsRail > div.active {
  font-weight: bold;
}
.tabsNav .tabsContent {
  background-color: var(--sld-color-background);
  position: relative;
  width: 100%;
}
.tabsNav .tabsActiveCellContainer {
  top: auto;
  position: relative;
  min-height: 4px;
  transition: all 0.25s;
}

.tabSlot {
  border-radius: var(--sld-radius-small);
  min-height: 4px;
  background-color: var(--sld-color-primary);
  width: 100%;
  position: absolute;
  transition: all 0.25s;
  z-index: 200;
}
/** presets.scss -----*/ 

/** slotui-vars.scss -----*/ 
:root {
  --sld-radius-tiny: 2px;
  --sld-radius-small: 4px;
  --sld-radius-med: 8px;
  --sld-radius-large: 16px;
  --sld-pad-tiny: 0.25rem;
  --sld-pad-small: 0.5rem;
  --sld-pad-med: 1rem;
  --sld-pad-large: 1.5rem;
}

:root {
  --sld-color-primary: #98b148;
  --sld-color-secondary: #55492b;
  --sld-color-tertiary: #9999cc;
  --sld-color-foreground: #333333;
  --sld-color-background: #ffffff;
  --sld-color-paper: #f1f1f1;
  /* primary alpha */
  --sld-color-primary-alpha-low: color-mix(in srgb, var(--sld-color-primary), transparent 80%);
  --sld-color-primary-alpha-mid: color-mix(in srgb, var(--sld-color-primary), transparent 50%);
  --sld-color-primary-alpha-high: color-mix(in srgb, var(--sld-color-primary), transparent 10%);
  --sld-color-background-alpha-low: color-mix(in srgb, var(--sld-color-background), transparent 10%);
  --sld-color-background-alpha-mid: color-mix(in srgb, var(--sld-color-background), transparent 50%);
  --sld-color-background-alpha-high: color-mix(in srgb, var(--sld-color-background), transparent 90%);
  --sld-color-foreground-alpha-low: color-mix(in srgb, var(--sld-color-foreground), transparent 10%);
  --sld-color-foreground-alpha-mid: color-mix(in srgb, var(--sld-color-foreground), transparent 50%);
  --sld-color-foreground-alpha-high: color-mix(in srgb, var(--sld-color-foreground), transparent 90%);
  --sld-color-primary-darken-low: color-mix(in srgb, var(--sld-color-primary), #000 10%);
  --sld-color-secondary-darken-mid: color-mix(in srgb, var(--sld-color-secondary), #000 20%);
  --sld-color-tertiary-darken-high: color-mix(in srgb, var(--sld-color-tertiary), #000 30%);
  --sld-color-background-darken-low: color-mix(in srgb, var(--sld-color-background), #999 10%);
  --sld-color-background-darken-mid: color-mix(in srgb, var(--sld-color-background), #999 40%);
  --sld-color-background-darken-high: color-mix(in srgb, var(--sld-color-background), #999 80%);
  --sld-color-foreground-darken-low: color-mix(in srgb, var(--sld-color-foreground), #999 10%);
  --sld-color-foreground-darken-mid: color-mix(in srgb, var(--sld-color-foreground), #999 40%);
  --sld-color-foreground-darken-high: color-mix(in srgb, var(--sld-color-foreground), #999 80%);
  --sld-color-border: color-mix(in srgb, var(--sld-color-foreground), transparent 80%);
  --sld-theme-gap-tiny: 1.5rem;
  --sld-hover-background-color: var(--sld-color-secondary-alpha-mid);
  --sld-hover-border-color: var(--sld-color-foreground-alpha-high);
  --sld-hover-shadow: var(--box-shad-3);
  --sld-selected-background-color: var(--sld-color-primary-alpha-mid);
  --sld-selected-border-color: var(--sld-color-primary);
  --sld-selected-shadow: var(--box-shad-4);
}

:root.dark,
:root[data-theme=dark] {
  --sld-color-foreground: #ffffff;
  --sld-color-background: #27323a;
  --sld-color-paper: #3a3b3b;
  --sld-color-border: color-mix(in srgb, var(--sld-color-foreground), transparent 60%);
}

.bg-themed-scheme-discrete {
  color: black;
  text-shadow: 0 0 0.125rem #b3b3b3;
  background-color: #ccc;
}

.bg-themed-scheme-success {
  color: white;
  text-shadow: 0 0 0.125rem #004d00;
  background-color: green;
}

.bg-themed-scheme-info {
  color: black;
  text-shadow: 0 0 0.125rem #ffd324;
  background-color: #ffdd57;
}

.bg-themed-scheme-warning {
  color: black;
  text-shadow: 0 0 0.125rem #b49104;
  background-color: #e6b905;
}

.bg-themed-scheme-alert {
  color: black;
  text-shadow: 0 0 0.125rem #cc5c00;
  background-color: #ff7300;
}

.bg-themed-scheme-error {
  color: white;
  text-shadow: 0 0 0.125rem #cc0000;
  background-color: red;
}
/** frame.scss -----*/ 
.frame {
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  background-color: var(--css-frame-bg-color, var(--sld-color-paper));
  backdrop-filter: var(--css-frame-backdrop-blur, blur(30px));
  overflow: hidden;
}
.frame .frame-container {
  display: flex;
  position: relative;
  flex: 1;
  overflow: hidden;
}
.frame .frame-container .navLeft {
  z-index: 1;
  border-right: 1px solid var(--sld-color-primary);
  height: 100%;
  position: relative;
}
.frame .frame-container .frame-main {
  flex: 1;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}
.frame .frame-container .frame-main .frame-content {
  flex: 1;
  overflow: hidden;
  position: relative;
}
/** menu.scss -----*/ 
ul.menu {
  margin: 0;
  min-width: 150px;
  padding: 0.25rem;
  cursor: pointer;
  display: inline-block;
  color: var(--sld-color-foreground);
}
ul.menu.bordered {
  border: 0.5px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--sld-radius-small);
}

li.menuItem {
  min-height: 1.5rem;
  border-radius: var(--sld-radius-small);
  overflow: hidden;
  display: flex;
  align-items: center;
  border: 1px solid transparent;
}
li.menuItem:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-color-primary-alpha-low);
}
li.menuItem.selected, li.menuItem[data-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
li.menuItem.selected .listItemChip,
li.menuItem.selected .menuItemChip, li.menuItem[data-selected=true] .listItemChip,
li.menuItem[data-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
li.menuItem.dense-small {
  min-height: 1rem;
}
li.menuItem.dense-default {
  min-height: 1.5rem;
}
li.menuItem.dense-medium {
  min-height: 2rem;
}
li.menuItem.dense-kind {
  min-height: 3rem;
}
li.menuItem .menuItemIcon {
  width: 16px;
  max-width: 16px;
  text-align: center;
  overflow: hidden;
  text-align: center;
  display: flex;
  justify-content: center;
}
li.menuItem .menuItemText {
  flex: 1;
  padding-left: 0.25rem;
}
li.menuItem .menuItemActions {
  display: block;
}
/** panel.scss -----*/ 
.panel {
  position: relative;
  margin-bottom: 2rem;
}
.panel .panel-bar {
  margin-bottom: 2rem;
  display: flex;
  min-width: auto;
  align-items: center;
  padding-right: 0.5rem;
}
.panel .panel-bar button {
  padding: 0 0.5rem;
  border: 1px solid rgba(255, 255, 255, 0.05);
  background-color: rgba(255, 255, 255, 0.1);
}
/** popper.scss -----*/ 
.popper {
  border-radius: var(--css-popper-radius, var(--sld-radius-tiny));
  overflow: hidden;
  position: fixed;
  box-shadow: var(--box-shad-4);
  background-color: var(--sld-color-background-alpha-mid);
  backdrop-filter: blur(30px);
  display: inline-block;
  top: 0;
  z-index: 30000;
}
.popper::popover-open {
  border: 1px color red;
  margin: none !important;
  padding: none !important;
}
/** boot-menu.scss -----*/ 
.boot-menu {
  background-color: rgba(90, 67, 52, 0.9);
  backdrop-filter: blur(10px);
  color: white;
  display: flex;
  flex-direction: column;
  max-height: 600px;
  height: 80%;
  left: 50%;
  transform: translate(-50%, 0);
  box-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.5);
  overflow: hidden;
  z-index: 3000;
  position: absolute;
  margin-top: 1rem;
}
.boot-menu .boot-menuContent {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
}
.boot-menu .buttonPole {
  border-radius: var(--sld-radius-small);
  border: 1px solid rgba(208, 191, 151, 0.3);
  padding: 0.5rem;
}
.boot-menu .gridIcon {
  width: 100%;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(30%, auto));
}
.boot-menu .gridIconBis {
  width: 100%;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(15%, auto));
}
.boot-menu .gridIconMid {
  width: 100%;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(49%, auto));
}
.boot-menu .gridOne {
  width: 100%;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(100%, auto));
}
.boot-menu .bottomBar {
  box-shadow: 0px 0px 3px 1px rgba(51, 51, 51, 0.5);
}
/** taskbar.scss -----*/ 
.taskbar {
  grid-gap: var(--box-density-1, 8px);
  background-size: auto;
  background-color: var(--css-taskbar-bg-color, rgba(255, 255, 255, 0.5));
  backdrop-filter: var(--css-taskbar-backdrop-blur, blur(20px));
  min-height: var(--css-taskbar-height, 48px);
  border-bottom: 1px solid var(--sld-color-foreground-alpha-high, rgba(255, 255, 255, 0.2));
  box-shadow: var(--css-taskbar-shadow, var(--box-shad-3));
  box-sizing: border-box;
}
/** toggle-bar.scss -----*/ 
.toggle-bar {
  padding: var(--sld-commandbar-padding, var(--box-density-1));
  display: flex;
  border-bottom: 1px solid var(--sld-topbar-border-bottom-color, var(--sld-color-border));
  width: 100%;
  max-width: 100%;
  min-width: auto;
  position: relative;
  gap: var(--sld-commandbar-gap, 0.25rem);
}
.toggle-bar .toggle-bar-content {
  position: relative;
  min-width: auto;
  overflow: hidden;
}
/** toolbar.scss -----*/ 
.toolbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  background-color: attr(--color);
  padding: var(--sld-toolbar-padding, var(--box-density-1, 0.5rem));
  gap: 0.5rem;
}
.toolbar divider {
  border: 1px solid red;
  height: 1rem;
}

.toolbar.vertical {
  flex-direction: column;
}
.toolbar.vertical divider {
  border: 1px solid green;
  width: 1rem;
}
/** tree.scss -----*/ 
.tree-cell {
  border: 1px solid transparent;
  padding: 0.5rem;
  padding-left: var(--tree-level);
  border-radius: var(--sld-radius-small);
  display: flex;
  align-items: center;
  width: 100%;
  cursor: pointer;
}
.tree-cell .tree-cellArrow {
  width: 16px;
  text-align: center;
}
.tree-cell .tree-cellTitleGutter {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.tree-cell:hover {
  border-color: var(--sld-hover-border-color);
  background-color: var(--sld-color-primary-alpha-low);
}
.tree-cell.selected, .tree-cell[data-selected=true] {
  border-color: none;
  background-color: var(--sld-selected-background-color, var(--sld-color-background-darken-mid));
  box-shadow: var(--sld-selected-shadow);
}
.tree-cell.selected .listItemChip,
.tree-cell.selected .menuItemChip, .tree-cell[data-selected=true] .listItemChip,
.tree-cell[data-selected=true] .menuItemChip {
  position: absolute;
  min-height: 16px;
  height: 50%;
  width: 3px;
  background-color: var(--sld-color-primary);
  border-radius: var(--sld-radius-med);
  left: 0;
  border: 1px solid var(--sld-color-primary-alpha-mid);
}
/** window.scss -----*/ 
dialog.window {
  display: block;
  border-radius: var(--sld-radius-small);
  background-color: var(--sld-color-background);
  color: var(--sld-color-foreground);
  border: 1px solid rgba(255, 255, 255, 0.1);
  min-width: 250px;
  top: 0;
  left: 0;
  overflow: hidden;
  z-index: 70000;
  max-height: 100%;
  padding: 0;
}
dialog.window.active {
  border: 1px solid var(--sld-color-primary);
}
dialog.window header.bar {
  display: flex;
  align-items: center;
  text-align: center;
  background-color: var(--sld-color-paper);
  color: var(--sld-color-foreground);
  padding: 0.25rem 0;
}
dialog.window header.bar .handle {
  flex: 1;
  cursor: pointer;
}
dialog.window footer.buttonZone {
  padding: 0.5rem;
  display: flex;
  justify-content: end;
  gap: var(--gap-small, 0.5rem);
}
dialog.window .ctrlZone {
  display: flex;
}
